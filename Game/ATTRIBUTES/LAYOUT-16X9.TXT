/************************************************************************
**
**                       ----------[LAYOUT]----------
**
**  IMPORTANT: This is the 16:9 version of LAYOUT.TXT.
**
**  ---------------------------------------------------------------------
**  The Layout File, as the name implies, contains Attributes used for
**  the game's menus, HUD, fonts, and other custom elements. These
**  Attributes include, but are not limited to, screen position, text &
**  element color, and element scale.
**  ---------------------------------------------------------------------
**  This is one of the few Files that has been extensively modified by
**  the Killer App Mod, as part of its ability to provide the game with
**  widescreen resolution support. As such, it is important to note that
**  there are three distinct versions of this File that cover the three
**  major PC display aspect ratios: 4:3, 16:9, and 16:10. 
**
**  The downside to this arrangement is that only one of these versions
**  is ever installed at any one time. TRON 2.0 itself is unable to
**  adjust this File on-the-fly to adapt to a change in resolution, and
**  the Killer App Mod (in its current state) does not have the ability
**  to do this in the game's place. As it stands now, the installer for
**  the Killer App Mod will ask for your desired aspect ratio, and then
**  install the Layout File associated with it.
**
**  Until this issue can be addressed in an alternative manner, the
**  GitHub repository for TRON 2.0: Security Protocol will contain all
**  three versions of the Layout File, differentiated by having their
**  respective aspect ratios appended to the end of their filenames
**  (e.g. "LAYOUT-16X9.TXT").
**
**  All Attributes in this File directly managed by the Killer App Mod
**  will have "(KAMod)" added to their title. Every Attribute that
**  receives this indicator should be modified with caution, as to avoid
**  any potential issues with compatibility. Even if multiple similar
**  Attributes are grouped together with one definition, it is only
**  those on the lines with said indicator that are managed, and not the
**  entire group of which that one Attribute is a part.
**
**  Additionally, all Attributes in this File that have been directly
**  modified further by TRON 2.0: Security Protocol have received the
**  same treatment, with an "(SP)" added to their title in the same
**  place. However, this indicator will not be shown on the GitHub wiki 
**  page for this File.
**  ---------------------------------------------------------------------
**  Although the Layout File is only the fourth largest File of the 
**  Attributes folder, it is easily the most complex by far. All of TRON
**  2.0's 2D-rendered onscreen elements, with VERY few exceptions, are 
**  covered here. 
**
**  However, Monolith did not treat this File's sheer complexity with
**  very much respect; its overall structure, as it appears in the
**  Retail release, is a mess that is only vaguely tied together by
**  Category names. Unused Attributes are strewn all over the place, and
**  very few of them were ever labelled as such. To have documented the
**  File in this state would have been way too confusing for everyone.
**  It is to this degree that the File has been restructured, in order
**  to allow for more cohesion in the documentation. This has been
**  proven to not have any negative effect on TRON 2.0 itself; as long
**  as the Attributes themselves remain in the correct Categories, the
**  game does not read them in any particular order.
**
**  Additionally, all Attributes that have been confirmed to be unused
**  by TRON 2.0 have been isolated, and will not appear on the GitHub
**  wiki page for this File. Where applicable, these removals can be 
**  found within their respective Categories, under the sub-header named
**  "SAFELY DEPRECATED SETTINGS". None of these Attributes will have any 
**  definitions.
**
**  All of these modifications are subject to further changes as needed.
**  ---------------------------------------------------------------------
**  See the Table of Contents to find specific sections of the File more
**  easily.
**  ---------------------------------------------------------------------
**  The first pass going through this File broke a few things. Now, I
**  expected as such, but that doesn't mean it isn't a bit frustrating.
**  I'll be doing a second pass from a clean copy. Being thorough is
**  important, after all.
**
**  TODO Either on the 2nd or 3rd pass actually experiment with fonts.
**
**  TODO A random graphical glitch was introduced where the Ball
**  Launcher may randomly fail to "wrap around" the player's arm. This
**  effect is inconsistent and not influenced by anything specifically,
**  yet. (Unsure if this came about as a result of this file or not.)
**
**  TODO Group more Attributes if possible. (Saving for Pass 2)
*/


/************************************************************************
**
**                ----------[Table of Contents]----------
**
**  This File is over 6,000 lines long! Although it's impossible to add
**  link references to a raw text file, this "Table of Contents" will
**  provide the exact names of the categories in this File that can then
**  be slapped into a Find prompt. That should work, right?
**
**  Although all of the information on the wiki page is categorized and
**  ordered in the same way, some headers on the wiki may be classified
**  under others, where they are not in this File. Headers that might be
**  unused also do not appear on the wiki page.
**
**  1)  Basic Screen Layout
**  2)  Screen Layout
**      a) Defaults
**      b) Main Menu Screen
**      c) Single Player Screen
**      d) Load Game Screen
**      e) Single Player → Light Cycles Screen
**          i)   Circuit Play Tab
**          ii)  Light Cycles Tab
**          iii) Custom Play Tab
**          iv)  Custom Settings Tab
**      f) Light Cycle Victory Screen
**      g) Multiplayer Screen
**      h) Multiplayer → Player Setup Screen
**      i) Multiplayer → Join Internet/LAN Game Screen & Server List Tab
**          i)   Server Info Tab
**      j) Multiplayer → Host Screen
**          i)   Connection Tab
**          ii)  Game Tab
**          iii) Maps Tab
**      k) Options Screen
**      l) Options → Display Screen
**      m) Options → Sound Screen
**      n) Options → Controls Screen
**          i)   Configure Controls Screen
**          ii)  Mouse Screen
**          iii) Keyboard Screen
**          iv)  Configure Joystick/Gamepad Screen
**      o) Options → Game Screen
**      p) Options → Performance Screen
**      q) Crosshair Options Screen(?)
**      r) Profile Screen
**      s) Subroutines Screen
**          i)   General Settings
**          ii)  Tooltips
**          iii) Build Notes
**          iv)  Arrows
**      t) Save Game Screen
**      u) Game Over Screen
**      v) Team Select Screens
**          i)   Default
**          ii)  Team Derez
**      w) Unknown Screen "ScreenSecurity"
**      x) Loading Screens
**  3)  Credits Layout
**  4)  Font Layout
**  5)  HUD Layout
**      a) General
**      b) Health & Energy
**      c) Permission Set Indicator
**      d) Weapon Indicator
**      e) Weapon Chooser
**      f) New Objective Indicator
**      g) Pings
**      h) Crosshair Text Elements 
**      i) Data Log
**      j) Profiler Subroutine Text
**      k) LOL & Triangulate Subroutine Zoom Values
**      l) Light Cycle HUD Elements
**          i)   Powerup Indicator
**          ii)  Lives
**          iii) Roster
**          iv)  Intro
**          v)   Speedometer
**          vi)  Distance Icon
**      m) "Useless Stuff"
**      n) HUD Layout 1
**  6)  Player Version Number
**  7)  Build Note Counter
**  8)  I/O Node HUD Elements
**  9)  Single String
**  10) Utility Subroutine Chooser
**  11) Objective Progress Layout
**      a) UV Box Values
**  12) Procedural Indicator
**      a) Progress Bar Settings
**  13) Textured Frames Layout
**  14) Menu Layout
**  15) Generic Menu Layout
**  16) Custom Menu Layouts
**      a) Unknown Menu "MenuPlayer"
**  17) Dialog Box Layout
**  18) Message Queues
**  19) Mission Text Layout
**  20) Subtitle Layout
**  21) Scores Layout
**      a) Scores Window (Unknown Usage)
**      b) Scores Window for Multiplayer Light Cycle Modes
**      c) Scores Window for Disc Arena/Disc Tournament
**  22) Screen Overlays
**  23) Menu Piece Layout
**  24) Screen Character Layout
**  25) Screen Lights Layout
**  26) Screen FX Layout
**  27) Decision Window Layout
**  28) Screen Transitions
**  29) Miscellaneous Layout
**  30) Glossary
*/


/************************************************************************
**
**               ----------[Basic Screen Layout]----------
**
**  The BasicLayout definition specifies positions, sizes, and various
**  other Attributes for common Screen components. Any Screen that uses
**  these Attributes cannot override them.
**
**	HelpRect (Rectangle) (KAMod)
**      - The space allocated to display the Screen's tooltip text. This
**      appears at the lower-middle area of the Screen, whenever the
**      mouse cursor hovers over most selectable options.
**  HelpFont (Integer),
**  HelpSize (Integer) (KAMod)
**      - The font ID and font height of the Screen's tooltip text.
**	BackPos (2D Point) (KAMod)
**		- The upper-left origin position of the Quit button in the Main
**      Menu Screen.
**  BackFont (Integer),
**  BackSize (Integer)
**      - The font ID and font height of the back button text. Also 
**      applies to the OK button in the Options Screens.
**      - TODO re-test this
**  SliderTex (Path String)
**      - The texture used for sliders on a Screen (e.g. the mouse 
**      sensitivity option). Notably does NOT apply to all arrow buttons 
**      that aren't attached to a slider.
**  ArrowBackTex (Path String),
**  ArrowBackTexH (Path String)
**      - The texture used for the back button, when not highlighted and
**      highlighted respectively.
**  ArrowBackPos (2D Point) (KAMod)
**      - The upper-left origin position of the back button. Also
**      applies to the OK button in the Options Screens.
**	BossRect (Rectangle)
**		- The space allocated to display the boss health bar.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  HUDFont (Integer)
**	NextPos (2D Point)
**  MainPos (2D Point)
**	BackColor (Vector)
**  BackSprite (Path String)
**  BackSpriteScale (Float)
**	LoadStringPos (2D Point)
**	LoadPhotoPos (2D Point)
*/
[BasicLayout]
HelpRect			= (208, 438, 514, 466)
HelpFont			= 1
HelpSize			= 16
//HUDFont 			= 1
BackPos 			= (535,328)
BackFont			= 0
BackSize			= 18
//NextPos 			= (0, 0)
//MainPos 			= (0, 0)
//BackColor			= <185.0, 205.0, 95.0>
//BackSprite		= ""
//BackSpriteScale 	= 0.5
SliderTex			= "interface\menu\sprtex\slider.dtx"
ArrowBackTex		= "interface\menu\sprtex\menubutton_bg.dtx"
ArrowBackTexH		= "interface\menu\sprtex\menubutton_bg_hl.dtx"
ArrowBackPos		= (25, 330)
//LoadStringPos		= (320, 420)
//LoadPhotoPos		= (350, 180)
BossRect			= (160, 90, 480, 100)


/************************************************************************
**
**                   ----------[Screen Layout]----------
**
**  The Screen Layout definitions specify positions, sizes, and various
**  other Attributes of Screen components. The GenericScreen Category
**  below defines default Attributes, which will be used as defaults by
**  all of the Screens defined after it, unless overridden.
**
**  Individual Screens also have specific Attributes specified in their
**  Category that are used in addition to the GenericScreen definitions.
**  These Screen-specific Attributes will have their definitions given 
**  as they appear inside their respective Sub-Categories as many times
**  as is needed, in order to ensure context is taken into account.
**
**  Screens which include tabs, such as the Single Player Light Cycle
**  Screen, consist of one Category for the parent Screen, and then one
**  additional Sub-Category per tab (properly labeled as such).
*/

/*  -----[Defaults]-----
**	TitlePos (2D Point) (KAMod)
**	    - The upper-left origin position of the Screen's title string.
**	TitleFont (Integer),
**	TitleSize (Integer)
**		- The default font ID and font height of the Screen's title 
**      string.
**	PageRect (Rectangle) (KAMod)
**		- The space allocated to act as a general container for the main
**      contents of the Screen. It doesn't seem to restrict a lot of the
**      elements directly, but it's impossible to know for certain.
**	FontFace (Integer),
**	FontSize (Integer)
**		- The default font ID and font height of all Screen text.
**	ItemSpace (Integer)
**		- The default line spacing between each specific Screen item.
**	MusicIntensity (Integer)
**		- Specifies what the music intensity should be for the current
**		Screen.
**      - In TRON 2.0, there is only one "intensity" for the menu music.
**      Intensity 1 is silence. Intensity 2 is the menu music. Keeping
**      this set to 2 is advised.
**  SelectedColor (Vector),
**  NonSelectedColor (Vector) (SP),
**  DisabledColor (Vector)
**      - The default colors used for Screen button text, when selected/
**      highlighted, not selected/highlighted, and unable to be 
**      selected/highlighted, respectively.
**  ListFontSize (Integer)
**      - The default font height used for selectable options displayed
**      in an additional pop-up box, if the Screen has one.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  MouseFX (String?)
*/
[GenericScreen]
TitlePos			= (39, 8)
TitleFont			= 1
TitleSize			= 22
PageRect			= (54, 148, 585, 385)
FontFace			= 0
FontSize			= 27
ItemSpace			= 0
MusicIntensity		= 2
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <255.0, 113.0, 113.0>
DisabledColor		= <180.0, 180.0, 200.0>
//MouseFX 			= ""
ListFontSize		= 20

/*  -----[Main Menu Screen]-----
**  VersionPos (2D Point) (KAMod)
**      - The upper-middle origin position of the text showing the
**      game's current version number and custom branch name.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenMain]
TitlePos	= (0,0)
PageRect	= (200, 98, 585, 335)
VersionPos	= (525, 23)
ItemSpace	= 1
Light0		= "Main0"

/*  -----[Single Player Screen]-----
**  DiffRect (Rectangle) (KAMod)
**      - The space allocated to display the difficulty selector pop-up
**      box (appears when New Game is selected).
**  CustomRect (Rectangle)
**      - The space allocated to display unknown contents.
**      - TODO What is this used for? Listing custom maps? I forgot how
**      to bring that list up. Oops.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  ScaleName# (String)
*/
[ScreenSingle]
PageRect		= (450, 135, 25, -40)
ItemSpace		= 1
ListFontSize	= 18
DiffRect		= (120, 95, 356, 215)
CustomRect		= (24, 107, 440, 417)
//ScaleName0	= ""//WeaponBackgroundSpr1"
//ScaleName1	= "HelpTextBoxSpr1"
//ScaleName2	= "HelpTextBoxSpr2"
//ScaleName3	= "mainoperativetext"
//ScaleName4	= "mainnolftext"
Light0			= "Main0"

/*  -----[Load Game Screen]-----
**  Applies to both the [Single Player → Load Game] Screen, as well as
**  the Load Game Screen that appears following a Game Over.
**
**  SmallFontSize (Integer)
**      - The font height of the text listing all available save games.
**  Indent (Integer)
**      - Determines the indent of the bounding box listing saves from
**      the left side of PageRect(?).
**      - TODO further verification.
**  NameWidth (Integer),
**  TimeWidth (Integer)
**      - The total widths of the columns listing save file names and
**      creation dates respectively.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenLoad]
PageRect		= (84, 45, 500, 293)
FontSize		= 16
ItemSpace		= 3
SmallFontSize	= 12
Indent			= 0
NameWidth		= 300
TimeWidth		= 125
Light0			= "Main0"

/*  -----[Single Player → Light Cycles Screen]-----
**  TabRect (Rectangle) (KAMod)
**      - The space allocated to display the tabs utilized by this 
**      Screen. The space is divided evenly amongst each of the tabs.
**  BodyRect (Rectangle)
**      - The default space allocated to display the main body box for
**      the tabs utilized by this Screen.
**      - Unused by proxy - each tab has a TabBodyRect Attribute that
**      will end up overriding this one.
**  ColumnWidth (Integer)
**      - Sets the width of the first column in the "Custom Settings"
**      tab. Notably does not affect the text in that column; seems to
**      only be here to force the column holding the controls away from
**      the text.
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the commands to Create New,
**      Rename, and Delete new custom configuration presets. Displayed
**      beneath AvailRect.
**  AvailRect (Rectangle) (KAMod)
**      - The space allocated to display the box listing player-defined
**      custom configuration presets. Appears in the middle-right area
**      of the Screen, when the "Custom Play" and "Custom Settings" tabs
**      are being displayed.
**  ConfigTitlePos (2D Point) (KAMod)
**      - The upper-left origin position of the "Custom Configuration"
**      text displayed above AvailRect.
**  NamePos (2D Point) (KAMod)
**      - The upper-left origin position of the Player Name text.
**  NameColumn (Integer) (KAMod)
**      - The total width of the Player Name string. Includes text
**      wrapping.
**  NameWidth (Integer)
**      - The width of the current Player Name and Light Cycle model.
**      Does not include text wrapping.
**      - This excludes the "Player Name:" and "Current Light Cycle:"
**      labels, and only applies to the values directly following them.
**  CycleNamePos (2D Point) (KAMod)
**      - The total width of the Current Light Cycle string. Includes
**      text wrapping.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  ConfigurationPos (2D Point)
**  GameTypePos (2D Point)
**  TabColor (Vector)
**  TabAlpha (Float)
*/
[ScreenBaseLightCycle]
PageRect			= (280, 100, 550, 400)
FontSize			= 18
ItemSpace			= 1
TabRect				= (47, 88, 497, 110)
BodyRect			= (40, 160, 493, 400)
//ConfigurationPos	= (250, 50)
//GameTypePos		= (250, 70)
ColumnWidth 		= 200
//TabColor			= <16.0, 16.0, 64.0>
//TabAlpha			= 0.9
CommandPos			= (534, 255)
AvailRect			= (508, 128, 615, 250)
ConfigTitlePos		= (508, 90)
NamePos				= (77, 45)
NameColumn			= 118
NameWidth 			= 330
CycleNamePos		= (77, 65)
Light0				= "Main0"

/*  ---[Single Player → Light Cycles Screen → Circuit Play Tab]---
**  AvailRect (Rectangle)
**      - The space allocated to display the box listing all the Light
**      Cycle circuit options.
**  TabBodyRect (Rectangle) (KAMod)
**      - The space allocated for the entire box underneath the tab.
**      - So is BodyRect just a required default definition that gets
**      overridden? TODO
**  RestrictionPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Light Cycles Permitted"
**      text.
**  LivesPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Lives" text, including
**      the dynamic number of lives following it.
**  WavesPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Waves" text, including
**      the dynamic number of waves following it.
**  ImagePos (2D Point) (KAMod)
**      - The upper-left origin position of the selected circuit's
**      thumbnail image.
**  ImageRect (Rectangle) (KAMod)
**      - The space allocated to display the selected circuit's
**      thumbnail image.
**      - Unlike a traditional Rectangle declaration, this one has its
**      first two Values covered by ImagePos, meaning the first two
**      Values of this Rectangle are always 0. The last two Values then
**      determine the cutoff point for the image box.
**  RegularPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Light Cycle" text, as
**      well as the dynamic text beneath it informing the player whether
**      or not Light Cycles are permitted in the selected Circuit.
**      - Note that the dynamic text cannot be shifted vertically, only
**      horizontally.
**  SuperPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Super Light Cycle"
**      text, as well as the dynamic text beneath it informing the
**      player whether or not Super Light Cycles are permitted in the
**      selected Circuit.
**      - Note that the dynamic text cannot be shifted vertically, only
**      horizontally.
**  CompletedCircuitColor (Vector) (SP),
**  UncompletedCircuitColor (Vector) (SP)
**      - The text color of a specific listed Circuit name when it has,
**      or has not, been completed respectively at least once by the
**      player.
**  LaunchPos (2D Point) (KAMod),
**  LaunchTex (Path String),
**  LaunchTexH (Path String)
**      - These Attributes make up the "Play" button. LaunchPos sets the
**      upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  AddPos (2D Point)
**  CommandPos (2D Point)
**  SelectRect (Rectangle)
**  InfoPos (2D Point)
*/
[ScreenLightCycleCircuit]
FontSize			    = 16
TabBodyRect			    = (40, 148, 598, 388)
//AddPos			    = (54, 148)
AvailRect			    = (60, 114, 255, 282)
//CommandPos		    = (345, 158)
//SelectRect		    = (445, 158, 595, 385)
RestrictionPos		    = (260, 133)
LivesPos			    = (260, 151)
WavesPos			    = (260, 168)
//InfoPos			    = (260, 260)
ImagePos			    = (260, 188)	
ImageRect			    = (0, 0, 262, 94)	
RegularPos			    = (405, 113)
SuperPos			    = (495, 113)
CompletedCircuitColor	= <251.0, 193.0, 193.0>
UncompletedCircuitColor	= <255.0, 74.0, 74.0>
LaunchPos			    = (470, 330)
LaunchTex			    = "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			    = "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				    = "Main0"

/*  ---[Single Player → Light Cycles Screen → Light Cycles Tab]---
**  The name is redundant. This Screen lets the player choose their
**  Light Cycle model & color.
**
**  TabBodyRect (Rectangle) (KAMod)
**      - The space allocated for the entire box underneath the tab.
**  Character (String)
**      - The string ID of the Character definition that will display 
**      the rotating Light Cycle model for this Screen.
**      - See the "Screen Character Layout" section for more details.
**  LabelPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Light Cycle" text, seen
**      normally to the upper-left of the tab body box.
**  BarWidth (Integer)
**      - The total width of the bars used to display Light Cycle stats.
**  StatsPos (2D Point) (KAMod)
**      - The upper-left origin position of the entire Light Cycle stats
**      module, including the bars and the label text.
**  TypeLeftArrowPos (2D Point) (KAMod),
**  TypeTextPos (2D Point) (KAMod),
**  TypeRightArrowPos (2D Point) (KAMod)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently active Light Cycle type,
**      with the text sandwiched between the left and right arrows.
**  ShadeLeftArrowPos (2D Point) (KAMod),
**  ShadeTextPos (2D Point) (KAMod),
**  ShadeRightArrowPos (2D Point) (KAMod)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently active Light Cycle color,
**      with the text sandwiched between the left and right arrows.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  AddPos (2D Point)
**  AvailRect (Rectangle)
**  CommandPos (2D Point)
**  SelectRect (Rectangle)
**  LightCycleBackgroundTextureName (Path String)
**  LightCycleBackgroundPos (2D Point)
**  LightCycleBackgroundRect (Rectangle)
*/
[ScreenLightCyclePlayerConfig]
FontSize			                = 16
//AddPos				            = (54, 148)
//AvailRect			                = (200, 158, 350, 385)
//CommandPos			            = (200, 188)
//SelectRect			            = (445, 158, 595, 385)
TabBodyRect			                = (40, 148, 598, 388)
Character			                = "LightCycleBase"
LabelPos					        = (60, 110)
//LightCycleBackgroundTextureName   = "interface\portraits\ping_default.dtx"
//LightCycleBackgroundPos		    = (60, 195)
//LightCycleBackgroundRect	        = (0, 0, 250, 155)
BarWidth					        = 200
StatsPos				            = (380, 110)
TypeLeftArrowPos		            = (50, 250)
TypeTextPos				            = (70, 250)
TypeRightArrowPos		            = (300, 250)
ShadeLeftArrowPos		            = (50, 270)
ShadeTextPos			            = (70, 270)
ShadeRightArrowPos		            = (300, 270)
Light0				                = "Main0"

/*  ---[Single Player → Light Cycles Screen → Custom Play Tab]---
**  AvailRect (Rectangle) (KAMod)
**      - The space allocated to display the list of available maps to
**      add to the custom game.
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the button group holding the
**      controls to add and remove maps for the custom game.
**  SelectRect (Rectangle) (KAMod)
**      - The space allocated to display the list of maps added to the
**      custom game.
**  TabBodyRect (Rectangle) (KAMod)
**      - The space allocated for the entire box underneath the tab.
**  LaunchPos (2D Point) (KAMod),
**  LaunchTex (Path String),
**  LaunchTexH (Path String)
**      - These Attributes make up the "Play" button. LaunchPos sets the
**      upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  AddPos (2D Point)
*/
[ScreenLightCycleCustomMap]
FontSize	= 16
//AddPos	= (54, 148)
AvailRect	= (60, 116, 230, 281)
CommandPos	= (225, 156)
SelectRect	= (320, 116, 490, 281)
TabBodyRect	= (40, 148, 493, 388)
LaunchPos	= (470, 330)
LaunchTex	= "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH	= "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0		= "Main0"

/*  ---[Single Player → Light Cycles Screen → Custom Settings Tab]---
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the entire list of options.
**  TabBodyRect (Rectangle) (KAMod)
**      - The space allocated for the entire box underneath the tab.
**  BodyRect (Rectangle) (KAMod)
**      - The space allocated to display the pop-up box listing all
**      available Light Cycle powerups. These Values are limited to the
**      bounding box of TabBodyRect and will not visually stretch any
**      further.
**  LCPowerupListIndent (2D Point)
**      - The upper-left origin position of the text listing all
**      available Light Cycle powerups. These Values are limited to the
**      bounding box of BodyRect and will not visually go any further.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  AddPos (2D Point)
**  AvailRect (Rectangle)
**  SelectRect (Rectangle)
*/
[ScreenLightCycleCustomGame]
FontSize			= 16
//AddPos			= (54, 148)
//AvailRect			= (200, 208, 380, 385)
CommandPos			= (55, 133)
//SelectRect		= (415, 208, 595, 385)
TabBodyRect			= (40, 148, 493, 388)
BodyRect			= (110, 62, 530, 332)
LCPowerupListIndent	= (50, 10)
Light0				= "Main0"

/*  -----[Light Cycle Victory Screen]-----
**  This is the Screen that shows up when you've beaten all of the Light
**  Cycle Circuits. It displays similarly to the Game Over Screen, but
**  with different text references.
**
**  VictoryId (Integer)
**      - The ID of a string in CRES.DLL of text to display for the
**      victory message.
**  VictoryStringRect (Rectangle)
**      - The space allocated to display the victory message.
**  VictoryStringSize (Integer)
**      - The font height of the victory message.
**  HelpStringPos (2D Point),
**  HelpStringSize (Integer)
**      - The upper-left origin position and font height of the text
**      telling the player to use the Escape key to return to the 
**      previous Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  MouseFX (String)
**  Delay (Float)
*/
[ScreenLightCycleVictory]
//MouseFX			= ""
//Delay				= 10.0
VictoryId			= 2561
VictoryStringRect	= (20, 180, 620, 340)
VictoryStringSize	= 24
HelpStringPos		= (160, 320)
HelpStringSize		= 12
Light0				= "Main0"

/*  -----[Multiplayer Screen]-----
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenMulti]
PageRect	= (41, 125, 188, 357)
FontSize	= 24
ItemSpace	= 1
Light0		= "Main0"

/*  -----[Multiplayer → Player Setup Screen]-----
**  Character (String)
**      - The string ID of the Character definition that will display 
**      both the rotating Light Cycle model, as well as the rotating
**      player model, for this Screen.
**      - See the "Screen Character Layout" section for more details.
**  GameTypePos (2D Point) (KAMod)
**      - The upper-left origin position of the Game Type toggle, which
**      is used to switch between customizing the player's character and
**      Light Cycle models for multiplayer.
**  NamePos (2D Point) (KAMod)
**      - The upper-left origin position of the Player Name setting,
**      which lets the player set their name in multiplayer modes.
**  NameColumn (Integer)
**      - The total width of the Player Name string. Includes text
**      wrapping.
**  NameWidth (Integer)
**      - The width of the current Player Name. Does not include text 
**      wrapping.
**  BandwidthPos (2D Point) (KAMod)
**      - The upper-left origin position of the Bandwidth toggle, which
**      is used to switch between different bandwidth types for
**      multiplayer.
**  BandwidthColumn (Integer)
**      - The total width of the Bandwidth string. Includes text
**      wrapping.
**  BandwidthWidth (Integer)
**      - Unused function. Unlike the Name and Band2 rows, this row does
**      not rely on a manually-input custom value, making this space 
**      unnecessary. It's only staying here for consistency.
**  Band2Pos (2D Point) (KAMod)
**      - The upper-left origin position of the Bandwidth (custom)
**      setting, which lets the player set their own bandwidth value.
**      - TODO is there official guidance on what a good number would
**      be for this? If not there should be
**  Band2Column (Integer)
**      - The total width of the Bandwidth (custom) string. includes
**      text wrapping.
**  Band2Width (Integer)
**      - The width of the current custom bandwidth value. Does not
**      include text wrapping.
**  ModelTextPos (2D Point) (KAMod),
**  ModelLeftArrowPos (2D Point) (KAMod),
**  ModelRightArrowPos (2D Point) (KAMod)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently used player or Light Cycle 
**      model, with the text sandwiched between the left and right 
**      arrows.
**  ColorTextPos (2D Point) (KAMod),
**  ColorLeftArrowPos (2D Point) (KAMod),
**  ColorRightArrowPos (2D Point) (KAMod)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the active color/skin applied to the 
**      current player or Light Cycle model, with the text sandwiched 
**      between the left and right arrows.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenPlayer]
PageRect			= (190, 220, 400, 460)
FontSize			= 18
Character			= "MPBase"
GameTypePos			= (200, 30)
NamePos				= (200, 50)
NameColumn			= 200
NameWidth 			= 220
BandwidthPos		= (200, 70)
BandwidthColumn		= 200
BandwidthWidth 		= 200
Band2Pos			= (200, 90)
Band2Column			= 200
Band2Width 			= 200
ModelTextPos		= (205, 290)
ModelLeftArrowPos	= (185, 290)
ModelRightArrowPos	= (440, 290)
ColorTextPos		= (205, 310)
ColorLeftArrowPos	= (185, 310)
ColorRightArrowPos	= (440, 310)
Light0				= "Main0"
Light1				= "test"

/*  -----[Multiplayer → Join Internet/LAN Game Screen → Server List Tab]-----
**  Although presented as separate options on the Multiplayer Screen,
**  the game treats the screens for joining internet/LAN games as one,
**  since their structure is basically identical and only requires a few
**  elements swapped out depending on which Screen the player enters.
**
**  It's important to note that this definition counts as both the base 
**  Screen, as well as the Screen for the first tab.
**
**  TabRect (Rectangle) (KAMod)
**      - The space allocated to be divided evenly amongst the tabs.
**  BodyRect (Rectangle) (KAMod)
**      - The space allocated to display the main body of the box for
**      this tab.
**  DedicatedColumn (Integer) (KAMod),
**  NameColumn (Integer),
**  PingColumn (Integer),
**  PlayersColumn (Integer),
**  TypeColumn (Integer),
**  MapColumn (Integer)
**      - These Attributes determine the widths of the columns, but it's
**      not yet known exactly HOW these Attributes work, either with
**      each other, or the greater Screen layout.
**      - TODO understand how the hell these columns work????
**  TablePos (2D Point) (KAMod)
**      - The upper-left origin position of the box holding the server
**      listing. Includes column headers.
**  ListRect (Rectangle) (KAMod)
**      - The space allocated to display the box holding the server
**      listing. Further testing needed.
**      - TODO why are these values being so finnicky?
**  PortPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Join Specific IP"
**      button (Internet) and the Network Port text (LAN).
**  PortColumnWidth (Integer)
**      - The total width of the column holding the player's current
**      network port, with the text justified to the right (LAN).
**      - TODO Further verification needed. This may also apply to the
**      "Join Specific IP" button but would have no effect there since
**      there is no text that comes after that button.
**  IPColumnWidth (Integer)
**      - The total width of the column holding the "Join Specific IP"
**      button (Internet). Includes text wrapping.
**  FilterPos (2D Point) (KAMod),
**  FilterPingPos (2D Point) (KAMod),
**  FilterPlayerPos (2D Point) (KAMod),
**  FilterTypePos (2D Point) (KAMod)
**      - The upper-left origin positions of the various filters. The
**      first Attribute, FilterPos, just positions the "Filters:" text,
**      and the remaining Attributes position the filters themselves.
**  StatusPos (2D Point) (KAMod)
**      - The upper-left origin position of the Status indicator (both
**      Internet and LAN).
**  GameSpyPos (2D Point) (KAMod),
**  GameSpyWidth (Integer)
**      - The upper-left origin position and total width of the GameSpy
**      logo. Changing the width scales height accordingly to maintain 
**      aspect ratio.
**  LaunchPos (2D Point) (KAMod),
**  LaunchTex (Path String),
**  LaunchTexH (Path String)
**      - These Attributes make up the "Join game" button. LaunchPos
**      sets the upper-left origin position. LaunchTex and LaunchTexH
**      set the button's texture when not highlighted/highlighted
**      respectively.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  TabColor (Vector)
**  TabAlpha (Float)
**  JoinPos (2D Point)
**  LockColumn (Integer)
**  PlayerFilterColumn (Integer)
**  PingFilterColumn (Integer)
**  DedicatedFilterColumn (Integer)
**  FilterDedicatedPos (2D Point)
*/
[ScreenJoinServerList]
PageRect			    = (180, 100, 550, 400)
FontSize			    = 16
BodyRect			    = (20, 80, 620, 435)
TabRect				    = (54, 40, 550, 75)
//TabColor			    = <16.0, 16.0, 64.0>
//TabAlpha			    = 0.9
//JoinPos				= (540, 440)
//LockColumn			= 0
DedicatedColumn			= 35
NameColumn			    = 35
PingColumn			    = 210
PlayersColumn			= 260
TypeColumn			    = 320
MapColumn			    = 420
//PlayerFilterColumn	= 0
//PingFilterColumn		= 200
//DedicatedFilterColumn	= 400
TablePos			    = (38, 65)
ListRect			    = (30, 85, 597, 284)
PortPos				    = (50, 302)
PortColumnWidth			= 110
IPColumnWidth			= 150
FilterPos			    = (50, 284)
FilterPingPos			= (100, 284)
FilterPlayerPos			= (200, 284)
FilterTypePos			= (350, 284)
FilterDedicatedPos		= (450, 284)
StatusPos			    = (310, 302)
GameSpyPos			    = (180, 4)
GameSpyWidth		    = 175
LaunchPos			    = (500, 330)
LaunchTex			    = "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			    = "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				    = "Main0"

/*  ---[Multiplayer → Join Internet/LAN Game Screen → Server Info Tab]---
**  RefreshPos (2D Point)
**      - The upper-left origin position of the Refresh button.
**  LeftPlayerWidth (Integer)
**      - The total width of the column displaying player names. Does
**      not include text wrapping.
**  RightPlayerWidth (Integer)
**      - Unknown function. May handle a second column of player names,
**      but verifying this is extremely hard. Or score?
**      - TODO verify
**  LeftInfoWidth (Integer),
**  RightInfoWidth (Integer)
**      - The widths of the two columns responsible for displaying the
**      server attributes. Does not include text wrapping.
**  LeftColumnPos (2D Point) (KAMod)
**      - The upper-left origin position of the left column (displaying
**      the list of online players).
**  RightColumnPos (2D Point) (KAMod)
**      - The upper-left origin position of the right column (displaying
**      server properties).
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  BodyRect (Rectangle)
**  TabRect (Rectangle)
**  JoinPos (2D Point)
*/
[ScreenServerInfo]
PageRect			= (180, 100, 550, 400)
FontSize			= 16
RefreshPos			= (610, 30)
//BodyRect			= (20, 75, 620, 435)
//TabRect			= (54, 50, 550, 75)
//JoinPos			= (540, 440)
LeftPlayerWidth		= 130
RightPlayerWidth	= 130
LeftInfoWidth		= 170
RightInfoWidth		= 150
LeftColumnPos		= (40, 65)
RightColumnPos		= (300, 65)
Light0				= "Main0"

/*  -----[Multiplayer → Host Screen]-----
**  TabRect (Rectangle) (KAMod)
**      - The space allocated to be divided evenly amongst the tabs.
**  TabAlpha (Float)
**      - The opacity of the background for both the tabs and the box
**      beneath them.
**  ConfigurationPos (2D Point) (KAMod)
**      - The upper-left origin position of the string displaying the
**      server's current configuration.
**  GameTypePos (2D Point) (KAMod)
**      - The upper-left origin position of the string displaying the
**      server's current game type.
**  ColumnWidth (Integer)
**      - The total width of the column listing the available options
**      to modify. Includes text wrapping.
**  BodyRect (Rectangle) (KAMod)
**      - The space allocated to display the entire box underneath the
**      tabs.
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the commands to Create New,
**      Rename, and Delete new custom configuration presets. Displayed
**      beneath AvailRect.
**  AvailRect (Rectangle) (KAMod)
**      - The space allocated to display the box listing player-defined
**      custom configuration presets. Appears in the middle-right area
**      of the Screen when the "Custom Play" and "Custom Settings" tabs
**      are being displayed.
**  ConfigTitlePos (2D Point) (KAMod)
**      - The upper-left origin position of the "Custom Configuration"
**      text displayed above AvailRect.
**  LaunchPos (2D Point) (KAMod),
**  LaunchTex (Path String),
**  LaunchTexH (Path String)
**      - These Attributes make up the "Launch" button. LaunchPos sets
**      the upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  TabColor (Vector)
*/
[ScreenHost]
PageRect			= (280, 70, 550, 370)
ItemSpace			= 1
TabRect				= (237, 60, 587, 70)
//TabColor			= <16.0, 16.0, 64.0>
TabAlpha			= 0.9
ConfigurationPos	= (222, 21)
GameTypePos			= (222, 41)
ColumnWidth 		= 200
BodyRect			= (222, 105, 632, 443)
CommandPos			= (67, 261)
AvailRect			= (41, 93, 191, 260)
ConfigTitlePos		= (41, 75)
LaunchPos			= (512, 330)
LaunchTex			= "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			= "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				= "Main0"

/*  ---[Multiplayer → Host Screen → Connection Tab]---
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the entire server options
**      list.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenHostConnection]
FontSize	= 16
CommandPos	= (235, 88)
Light0		= "Main0"

/*  ---[Multiplayer → Host Screen → Game Tab]---
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the entire game options
**      list.
**  LCPowerupListIndent (2D Point)
**      - Currently unidentified function, likely unused.
**      - TODO verify. The Light Cycle Powerup list has its own
**      coordinates and changing this seems to do nothing.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenHostGame]
FontSize			= 16
CommandPos			= (235, 88)
LCPowerupListIndent	= (50, 10)
Light0				= "Main0"

/*  ---[Multiplayer → Host Screen → Maps Tab]---
**  AvailRect (Rectangle) (KAMod)
**      - The space allocated to display the list of available maps to
**      add to the server.
**  CommandPos (2D Point) (KAMod)
**      - The upper-left origin position of the button group holding the
**      controls to add and remove maps for the server.
**  SelectRect (Rectangle) (KAMod)
**      - The space allocated to display the list of maps added to the
**      server.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  AddPos (2D Point)
*/
[ScreenHostMaps]
FontSize	= 16
//AddPos	= (54, 148)
AvailRect	= (232, 94, 382, 322)
CommandPos	= (377, 146)
SelectRect	= (477, 94, 627, 322)
Light0		= "Main0"

/*  -----[Options Screen]-----
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenOptions]
PageRect	= (84, 107, 556, 227)
ItemSpace	= 1
Light0		= "Main0"

/*  -----[Options → Display Screen]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenDisplay]
PageRect	= (120 ,100, 556, 220)
ItemSpace	= 1
ColumnWidth = 200
SliderWidth	= 240
Light0		= "Main0"

/*  -----[Options → Sound Screen]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  EAXImageTexture (Path String)
**      - The texture used to display the EAX logo.
**  EAXImageRect (Rectangle)
**      - The space allocated to display the EAX logo.
**      - Unlike a traditional Rectangle declaration, this one has its
**      first two Values covered by EAXImagePos, meaning the first two
**      Values of this Rectangle are always 0. The last two Values then
**      determine the cutoff point for the image box.
**  EAXImagePos (2D Point) (KAMod)
**      - The upper-left origin position of the EAX logo.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenAudio]
PageRect		= (84, 90, 556, 210)
ItemSpace		= 1
ColumnWidth 	= 240
SliderWidth 	= 240
EAXImageTexture	= "Interface\Menu\art\EAX_ADVANCEDHD_4BLACK.dtx"
EAXImageRect	= (0, 0, 96, 48)
EAXImagePos		= (450, 230)
Light0			= "Main0"

/*  -----[Options → Controls Screen]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenControls]
PageRect	= (84, 90, 556, 210)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  ---[Options → Controls → Configure Controls Screen]---
**  MoveControlPos (2D Point) (KAMod)
**      - The upper-left origin position of the four buttons used to
**      switch between the control groups.
**  ListRect (Rectangle) (KAMod)
**      - The space allocated to display the list of controls that the
**      player can modify.
**  ActionWidth (Integer)
**      - The width of the list column displaying the names of controls
**      that the player can modify. Includes text wrapping.
**  EqualsWidth (Integer)
**      - Probably the width of the space between the control names and
**      their bindings. Further verification needed.
**      - TODO verify
**  CommandWidth (Integer) (KAMod)
**      - The width of the list column displaying the current bindings
**      of the controls that the player can modify. Includes text 
**      wrapping.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenConfigure]
PageRect		= (54, 90, 200, 210)
ItemSpace		= 1
ListFontSize	= 16
MoveControlPos	= (54, 90)
ListRect		= (225, 41, 585, 306)	
ActionWidth 	= 240
EqualsWidth 	= 10
CommandWidth	= 133
Light0			= "Main0"

/*  ---[Options → Controls → Mouse Screen]---
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenMouse]
PageRect	= (54, 83, 585, 320)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  ---[Options → Controls → Keyboard Screen]---
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenKeyboard]
PageRect	= (54, 83, 585, 320)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  ---[Options → Controls → Configure Joystick/Gamepad Screen]---
**  HeaderFontSize (Integer)
**      - The font height of the "Axis" and "Action" column header text.
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenJoystick]
PageRect		= (76, 110, 585, 315)
FontSize		= 18
HeaderFontSize	= 18
ColumnWidth		= 250
Light0			= "Main0"

/*  -----[Options → Game Screen]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenGame]
PageRect	= (84, 65, 556, 225)
FontSize 	= 16
ItemSpace	= 3
ColumnWidth = 280
SliderWidth = 200
Light0		= "Main0"

/*  -----[Options → Performance Screen]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  DisplayRect (Rectangle) (KAMod)
**      - The space allocated to display the Display options pop-up box.
**  DisplayColumn (Integer)
**      - The total width of the column used to display the names of the
**      settings inside the Display options pop-up box. Does not include
**      text wrapping, but does not cut off the text either.
**  SFXRect (Rectangle) (KAMod)
**      - The space allocated to display the Special effects options
**      pop-up box.
**  SFXColumn (Integer) (KAMod)
**      - The total width of the column used to display the names of the
**      settings inside the Special effects options pop-up box. Does not
**      include text wrapping, but does not cut off the text either.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  FontSize (Integer)
**  TextureRect (Rectangle)
**  TextureColumn (Integer)
**  TextureSlider (Integer)
*/
[ScreenPerformance]
PageRect		= (54, 85, 556, 235)
//FontSize		= 16
ItemSpace		= 5
ListFontSize	= 18
ColumnWidth 	= 180
SliderWidth 	= 200
DisplayRect 	= (405, 86, 535, 293)
DisplayColumn	= 160
SFXRect 		= (405, 86, 535, 293)
SFXColumn		= 136
//TextureRect 	= (340, 150, 550, 380)
//TextureColumn	= 160
//TextureSlider	= 110
Light0			= "Main0"

/*  -----[Crosshair Options Screen(?)]-----
**  Am I blind? I couldn't find this one. Unless it's tucked under the
**  Display options Screen? I'm not going in there to find out.
**  TODO ask about this (LDSO)
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      Screen's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenCrosshair]
PageRect	= (84, 130, 556, 280)
ItemSpace	= 10
ColumnWidth = 240
SliderWidth = 240
Light0		= "Main0"

/*  -----[Profile Screen]-----
**  ProfileNamePos (2D Point) (KAMod)
**      - The upper-left origin position of the list of Screen options.
**  DialogSize (2D Point) (KAMod)
**      - Although it functions as a Point, if set to 0, it does not set
**      the box to the top left of the Screen. More understanding is
**      needed.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  DialogPos (2D Point)
*/
[ScreenProfile]
ItemSpace		= 1
ProfileNamePos	= (44, 95)
DialogPos		= (450, 221)
DialogSize		= (300, 238)
Light0			= "Main0"

/*  -----[Subroutines Screen]-----
**  Quite a bit of the Subroutines Screen (accessed by pressing F1
**  ingame) has been modified by the Killer App Mod whilst making the
**  game work in widescreen. Unless you really know what you're doing,
**  it is not recommended to touch any of these Attributes.
**
**  Due to the inherent complexity of the Screen, it has been split up
**  into multiple Sub-Categories.
*/

/*  ---[General Settings]---
**  ClearPos (2D Point) (KAMod)
**      - The upper-left origin position of the "Clear" button at the
**      bottom-right corner of the Screen.
**  SysNamePos (2D Point) (KAMod)
**      - The upper-left origin position of the name of the chapter the
**      player is currently in.
**  VersionSize (Integer)
**      - The font height of the text displaying the player's current
**      version number.
**  VersionPos (2D Point) (KAMod)
**      - The upper-middle origin position of the text displaying the
**      player's current version number.
**  OptimizerHitRect (Rectangle)
**      - Currently unidentified function, potentially unused.
**      - TODO verify
**  Piece# (String)
**      - The string ID of a Piece to use for the Screen.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  CompilePos (2D Point)
**  HelpRect (Rectangle)
**  Character (String)
*/
[ScreenSubroutines]
PageRect			= (0, 0, 200, 200)
FontSize			= 16
ClearPos			= (493, 299)
//CompilePos		= (0, 0)
SysNamePos			= (87, 1)
//HelpRect			= (2000, 1000, 0, 0)
//Character 		= "sub1"
VersionSize			= 18
VersionPos			= (320, 107)
OptimizerHitRect	= (288, 208, 352, 272)
Piece0			    = "sub_hub"
Piece1			    = "servername"
Piece2			    = "sub_commands"
Piece3			    = "sub_hub_bg"
Piece4			    = "buildpoints_bar_fixed"
Light0				= "Main0"

/*  ---[Tooltips]---
**  These Attributes make up the tooltip pop-up that appears when moving
**  the mouse cursor over applicable text on this Screen. Testing shows
**  that the position of each tooltip is predefined and not modifiable.
**  These Attributes apply to all tooltips.
**
**  ToolTipFontSize (Integer)
**      - The font height of the tooltip text.
**  ToolTipTogglePos (2D Point) (KAMod)
**      - The upper-left origin position of the setting at the bottom-
**      right of the Screen that lets the player choose whether or not
**      tooltips should appear.
**  ToolTipToggleFontSize (Integer)
**      - The font height of the setting at the bottom-right of the
**      Screen that lets the player choose whether or not tooltips
**      should appear.
**  ToolTipTitlePos (2D Point) (KAMod)
**      - The upper-left origin position of the "Show Tooltips:" text at
**      the bottom-right of the Screen.
**  ToolTipTitleFontSize (Integer)
**      - The font height of the "Show Tooltips:" text at the bottom-
**      right of the Screen.
**  ToolTipColor (Vector)
**      - The color of the special highlighted text at the beginning of
**      the tooltip, confirming the definition that it is currently
**      displaying.
**  ToolTipFrameColor (Vector)
**      - The background color used for the tooltip box. (This is NOT
**      the color of the border.)
**  ToolTipAlpha (Float)
**      - The opacity of the background color used for the tooltip box.
**  ToolTipWidth (Float)
**      - The total width of the tooltip box.
*/
ToolTipFontSize			= 12
ToolTipTogglePos		= (420, 337)
ToolTipToggleFontSize	= 18
ToolTipTitlePos			= (467, 322)
ToolTipTitleFontSize	= 18
ToolTipColor		    = <255.0, 135.0, 135.0>
ToolTipFrameColor	    = <100.0, 0.0, 0.0>
ToolTipAlpha		    = 0.85
ToolTipWidth		    = 200.0

/*  ---[Build Notes]---
**  These Attributes make up the build note count that appears at the
**  lower-middle area of the Screen.
**
**  BuildNoteCountColor (Vector)
**      - Currently unidentified function, potentially unused.
**      - TODO verify
**  BuildNoteCountSize (Integer)
**      - The font height of the text keeping track of the total amount
**      of build notes that the player has collected.
**  BuildNoteCountPos (2D Point) (KAMod)
**      - The upper-middle origin position of the text keeping track of
**      the total amount of build notes that the player has collected.
**  BuildNoteCountStringId (Integer)
**      - The string ID from CRES.DLL to display as the build note
**      counter.
**  BuildNoteIconSpacer (Integer)
**      - The width of the space between the build note icon and the
**      build note counter text.
**  BuildNoteIconTexture (Path String)
**      - Unused function. Although pointing it to a different texture
**      will display the texture near the center of the Screen, this is
**      not recommended, as the position of that texture cannot change.
**  BuildNoteIconScalar (Float)
**      - The scale of the BuildNoteIconTexture.
*/
BuildNoteCountColor	    = <255, 255, 255>
BuildNoteCountSize	    = 14
BuildNoteCountPos	    = (321, 245)
BuildNoteCountStringId	= 3229
BuildNoteIconSpacer	    = 8
BuildNoteIconTexture    = "interface\hud\buildnote_hudicon_dummy.dtx"
BuildNoteIconScalar     = 1.0

/*  ---[Arrows]---
**  This is fairly self-explanatory, so instead of repeating the same
**  thing ten times, this'll be simplified. These Rectangle Attributes 
**  allocate the space used to display the arrows next to the five rows 
**  of skills: Health, Energy, Weapon Efficiency, Transfer Rate, and 
**  Processor. These arrows only appear when the player gets their 
**  version number upgraded, and disappear once all available build 
**  notes are spent. One line declares the left arrow, the next declares 
**  the right, and so on, and so forth.
**
**  All of these are managed by the Killer App Mod.
*/
ArrowLeftRect0	= (252, 180, 276, 194)
ArrowRightRect0	= (364, 180, 388, 194)
ArrowLeftRect1	= (252, 206, 276, 220)
ArrowRightRect1	= (364, 206, 388, 220)
ArrowLeftRect2	= (252, 233, 276, 247)
ArrowRightRect2	= (364, 233, 388, 247)
ArrowLeftRect3	= (252, 260, 276, 274)
ArrowRightRect3	= (364, 260, 388, 274)
ArrowLeftRect4	= (252, 286, 276, 300)
ArrowRightRect4	= (364, 286, 388, 300)

/*  -----[Save Game Screen]-----
**  SmallFontSize (Integer)
**      - The font height of the text listing all available save games.
**  Indent (Integer)
**      - Determines the indent of the bounding box listing saves from
**      the left side of PageRect.
**  NameWidth (Integer)
**      - The total width of the column listing save file names.
**  TimeWidth (Integer)
**      - The total width of the column listing save file creation dates.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[ScreenSave]
PageRect		= (140, 60, 585, 280)
FontSize		= 16
ItemSpace		= 3
SmallFontSize	= 12
Indent			= 0
NameWidth		= 300
TimeWidth		= 125
Light0			= "Main0"

/*  -----[Game Over Screen]-----
**  FailStringRect (Rectangle) (KAMod)
**      - The space allocated to display the Game Over text.
**  FailStringSize (Integer)
**      - The font height of the Game Over text.
**  HelpStringPos (2D Point) (KAMod),
**  HelpStringSize (Integer)
**      - The origin position and font height of the text that tells the
**      player either to QuickLoad, or go to the Load Screen.
**      - TODO verify actual point of origin
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  MouseFX (String)
**  Delay (Float)
*/
[ScreenFailure]
//MouseFX		= ""
//Delay			= 10.0
FailStringRect	= (20, 180, 620, 340)
FailStringSize	= 24
HelpStringPos	= (160, 320)
HelpStringSize	= 12
Light0			= "Main0"

/*  -----[Team Select Screens]-----
**  The Team Select Menu is more of a glorified pop-up box in the
**  context of TRON 2.0. However, all of the traditional rules still
**  apply, given that it remains in this Sub-Category.
*/

/*  ---[Default]---
**  This is the Team Select overlay window for Disc Arena, Disc 
**  Tournament, and Light Cycles (both Free-For-All and Team).
**
**  PlayerTextColor (Vector)
**      - The text color of whichever line is currently displaying the
**      player's information. Includes all player stats, not just the
**      player name.
**  TextColor (Vector)
**      - The text color of all the other lines that aren't displaying
**      the player's information.
**  FrameColor (Vector) (SP),
**  FrameAlpha (Float)
**      - The background color and opacity of the bar at the top of the 
**      window holding the column names.
**  HeaderFontSize (Integer)
**      - The font height of the column header text.
**  TeamRect (Rectangle) (KAMod)
**      - The space allocated to display the list of players currently
**      on a team.
**  TeamColumn (Integer),
**  MatchesWonColumn (Integer),
**  PlayerColumn (Integer) (KAMod),
**  GamesWonColumn (Integer) (KAMod),
**  PingColumn (Integer)
**      - The widths of all the columns that make up the list of players
**      currently on a team.
**  SpectatorRect (Rectangle) (KAMod)
**      - The space allocated to display the list of players currently
**      spectating the game.
**  SpectatorColumn (Integer) (KAMod),
**  SpectatorPingColumn (Integer)
**      - The widths of both the columns that make up the list of
**      players currently spectating the game.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[TeamSelect]
ListFontSize		= 10
PlayerTextColor	    = <255.0, 255.0, 255.0>
TextColor		    = <192.0, 192.0, 192.0>
FrameColor		    = <240.0, 0.0, 0.0>
FrameAlpha		    = 0.5
HeaderFontSize		= 12
TeamRect		    = (32, 27, 440, 403)
TeamColumn		    = 80
MatchesWonColumn	= 100
PlayerColumn		= 138
GamesWonColumn		= 50
PingColumn		    = 40
SpectatorRect		= (460, 27, 620, 403)
SpectatorColumn		= 105
SpectatorPingColumn	= 25
Light0				= "Main0"

/*  ---[Team Derez]---
**  This is the Team Select overlay window for specifically Team Derez.
**  The most notable difference between this and the default Team Select
**  Screen is the difference in the columns shown for the player list.
**
**  PlayerTextColor (Vector)
**      - The text color of whichever line is currently displaying the
**      player's information. Includes all player stats, not just the
**      player name.
**  TextColor (Vector)
**      - The text color of all the other lines that aren't displaying
**      the player's information.
**  FrameColor (Vector) (SP),
**  FrameAlpha (Float)
**      - The background color and opacity of the bar at the top of the 
**      window holding the column names.
**  HeaderFontSize (Integer)
**      - The font height of the column header text.
**  TeamRect (Rectangle) (KAMod)
**      - The space allocated to display the list of players currently
**      on a team.
**  TeamColumn (Integer),
**  RoundsWonColumn (Integer) (KAMod),
**  PlayerColumn (Integer) (KAMod),
**  FragsColumn (Integer),
**  PingColumn (Integer)
**      - The widths of all the columns that make up the list of players
**      currently on a team. (Frags is for the "Derezzes" column.)
**  SpectatorRect (Rectangle) (KAMod)
**      - The space allocated to display the list of players currently
**      spectating the game.
**  SpectatorColumn (Integer) (KAMod),
**  SpectatorPingColumn (Integer)
**      - The widths of both the columns that make up the list of
**      players currently spectating the game.
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
*/
[TDMTeamSelect]
ListFontSize		= 10
PlayerTextColor	    = <255.0, 255.0, 255.0>
TextColor		    = <192.0, 192.0, 192.0>
FrameColor		    = <240.0, 0.0, 0.0>
FrameAlpha		    = 0.5
HeaderFontSize		= 12
TeamRect		    = (20, 30, 440, 406)
TeamColumn		    = 120
RoundsWonColumn		= 80
PlayerColumn		= 120
FragsColumn		    = 60
PingColumn		    = 40
SpectatorRect		= (460, 30, 620, 406)
SpectatorColumn		= 105
SpectatorPingColumn	= 25
Light0				= "Main0"

/*  -----[Unknown Screen "ScreenSecurity"]-----
**  I can't believe they predicted my mod when they made the game.
**  But seriously, what is this Screen? It seems empty. Commenting out
**  the entire block does not crash the game. Maybe unused?
**  TODO ask about this
**
**  Light# (String)
**      - The string ID of a Light to use for the Screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  MouseFX (String)
*/
[ScreenSecurity]
//MouseFX	= "none"
Light0		= "Main0"

/*  -----[Loading Screens]-----
**  Loading screens all use the same setup, with LoadScreenDefault
**  setting the default Attributes that the successive loading screens
**  override. 
**  TODO identify and name all of the loading screens
**
**  TitleColor (Vector)
**      - The color of the current chapter name.
**  LevelFont (Integer),
**  LevelSize (Integer),
**  LevelPos (2D Point) (KAMod),
**  LevelColor (Vector)
**      - The upper-left origin position, font ID, font height, and 
**      color of the current level name, in that order.
**  ContinueFont (Integer),
**  ContinueSize (Integer),
**  ContinuePos (2D Point) (KAMod),
**  ContinueColor (Vector)
**      - The upper-left origin position, font ID, font height, and
**      color of the "press any key to continue" string.
**  PreLoopFX# (String)
**      - The string ID of a PreLoopFX to use for the Screen.
**      - TODO define what a PreLoopFX is here.
**  LoadScale# (String)
**      - The string ID of a LoadScale to use for the Screen.
**      - TODO define what a LoadScale is here.
**  PostScale# (String)
**      - The string ID of a PostScale to use for the Screen.
**      - TODO define what a PostScale is here.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  BriefingFont (Integer)
**  BriefingSize (Integer)
**  BriefingRect (Rectangle)
**  BriefingColor (Vector)
**  PreFX# (String)
*/
[LoadScreenDefault]
TitleFont		= 1
TitleSize		= 24
TitlePos		= (70, 50)
TitleColor		= <255.0, 255.0, 255.0>
LevelFont		= 1
LevelSize		= 20
LevelPos		= (70, 75)
LevelColor		= <255.0, 255.0, 255.0>
//BriefingFont	= 1
//BriefingSize	= 16
//BriefingRect	= (80, 120, 340, 350)
//BriefingColor	= <255.0, 255.0, 255.0>
ContinueFont	= 1
ContinueSize	= 24
ContinuePos		= (70, 415)
ContinueColor	= <0.0, 0.0, 0.0>
//PreFX0		= "LOAD_Test"
//PreIntroFX0	= "LOAD_Test"
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "loadingBackground_sprite"
LoadScale2		= "loadingModel"
//PostScale0	= "LoadTest"

[LoadScreenC01]
TitleColor		= <0.0, 32.0, 96.0>
//BriefingColor	= <0.0, 0.0, 0.0>
//PreFX0		= "LOAD_Test"
//PreIntroFX0	= "LOAD_Test"
//PreLoopFX0	= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "loadingBit"
//PostScale0	= "LoadTest"

[LoadScreenM01]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M01"

[LoadScreenM02]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M02"

[LoadScreenM03]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M03"

[LoadScreenM04]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M04"

[LoadScreenM05]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M05"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M05"

[LoadScreenM06]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M06"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M06"

[LoadScreenM07]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M07"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M07"

[LoadScreenM08]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M08"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M08"

[LoadScreenM09]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M09"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M09"

[LoadScreenM10]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M10"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M10"

[LoadScreenM11]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M11"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M11"

[map0]
NameId		= 9699
LevelNameId	= 9700
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_map0"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_map0"

[LC_01s01]
NameId		= 9699
LevelNameId	= 9704
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_01s01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_01s01"

[LC_01s02]
NameId		= 9699
LevelNameId	= 9708
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_01s02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_01s02"

[LC_01s03]
NameId		= 9699
LevelNameId	= 9713
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_01s03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_01s03"

[LC_01s04]
NameId		= 9699
LevelNameId	= 9702
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_01s04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_01s04"

[LC_02s01]
NameId		= 9699
LevelNameId	= 9701
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_02s01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_02s01"

[LC_02s02]
NameId		= 9699
LevelNameId	= 9705
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_02s02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_02s02"

[LC_02s03]
NameId		= 9699
LevelNameId	= 9716
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_02s03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_02s03"

[LC_02s04]
NameId		= 9699
LevelNameId	= 9711
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_02s04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_02s04"

[LC_03s01]
NameId		= 9699
LevelNameId	= 9703
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_03s01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_03s01"

[LC_03s02]
NameId		= 9699
LevelNameId	= 9709
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_03s02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_03s02"

[LC_03s03]
NameId		= 9699
LevelNameId	= 9712
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_03s03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_03s03"

[LC_03s04]
NameId		= 9699
LevelNameId	= 9714
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_03s04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_03s04"

[LC_04s01]
NameId		= 9699
LevelNameId	= 9706
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_04s01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_04s01"

[LC_04s02]
NameId		= 9699
LevelNameId	= 9710
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_04s02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_04s02"

[LC_04s03]
NameId		= 9699
LevelNameId	= 9715
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_04s03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_04s03"

[LC_04s04]
NameId		= 9699
LevelNameId	= 9707
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_LC_04s04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_LC_04s04"

[DiscArena01]
LevelNameId	= 2549
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena01"

[DiscArena02]
LevelNameId	= 2550
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena02"

[DiscArena03]
LevelNameId	= 2551
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena03"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena03"

[DiscArena04]
LevelNameId	= 2552
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena04"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena04"

[DiscArena05]
LevelNameId	= 2553
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena05"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena05"

[LightCycleDefault]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M02"

[MultiplayerLightcycleDefault]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena02"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena02"

[DiscArenaDefault]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena01"

[DiscTournamentDefault]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_DiscArena01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_DiscArena01"


/************************************************************************
**
**	                ----------[Credits Layout]----------
**
**  The Credits definition sets Attributes pertaining to the game's
**  credits sequence.
**
**	FadeInTime (Float),
**	HoldTime (Float),
**	FadeOutTime (Float),
**	DelayTime (Float)
**		- The amount of time it takes for each block of the credits to
**      fade in, stay visible, fade out, and stay invisible (before the
**      next block fades in), in that order.
**	PositionUL (2D Point),
**	PositionUR (2D Point),
**	PositionLL (2D Point),
**	PositionLR (2D Point)
**		- The origin positions used for the credits displayed in each of
**      the four corners of the screen - in the upper-left, upper-right,
**      lower-left, and lower-right corners, in that order. 
*/
[Credits]
FadeInTime	= 0.6
HoldTime	= 3.0
FadeOutTime = 0.6
DelayTime	= 0.35
PositionUL	= (80, 90)
PositionUR	= (560, 90)
PositionLL	= (80, 390)
PositionLR	= (560, 390)


/************************************************************************
**
**	                ----------[Font Layout]----------
**
**  The Fonts definition assigns all fonts used in the game.
**
**  In TRON 2.0, pretty much all dynamic text in the game uses the same
**  font. Additionally, the font system used in TRON 2.0 is completely
**  unique to it, as it goes completely unused in any Lithtech Engine
**  games both before and after it. This makes the ability to create and
**  manage these fonts almost entirely impossible, as no font editing
**  tool was ever released, officially or otherwise. Setting any font
**  path to reference a .TTF file will not make the game work with it.
**
**  As such, the only fonts available to use are ones that are already
**  in the game files, and have a .FFA, .FFB, and .DTX file associated
**  with them. Besides the TwenCen font and its aliased version, the
**  two other usable fonts are TronConsole and TronFont. The only way to
**  modify any of these fonts is to modify their respective .DTX files.
**
**  It's important to note that assigning these Attributes here do not
**  directly correspond to a "font ID" in the game itself; any
**  Attributes in this File that reference the usage of a "font ID"
**  Integer are not referencing the fonts defined in this Category.
**  However, removing these will still cause the game's text to
**  disappear. 
**
**  Font# (Path String)
**      - The font file for the game to load. Must be in .FFB format.
**  FontSize# (Integer)
**      - The intended font height of the font file. This should always
**      be set to the size indicated in the name of the font file.
**      - This is only considered a default. Any element in this File
**      where a font is used almost always specifies its own size.
*/
[Fonts]
Font0				= "Interface\Fonts\TwenCen_20.ffb"
FontSize0			= 20
Font1				= "Interface\Fonts\TwenCen_20.ffb"
FontSize1			= 20
Font2				= "Interface\Fonts\TwenCen_20.ffb"
FontSize2			= 20
Font3				= "Interface\Fonts\TwenCen_20.ffb"
FontSize3			= 20
Font4				= "Interface\Fonts\TwenCen_20.ffb"
FontSize4			= 20
Font5				= "Interface\Fonts\TwenCen_20_Aliased.ffb" 
FontSize5			= 10


/************************************************************************
**
**	                  ----------[HUD Layout]----------
**
**  The HUDLayout definitions specify positions and sizes for in-game
**  interface components. 
**
**  Although multiple HUD Layout definitions are accepted, it seems that
**  TRON 2.0 only uses the first one, HUDLayout0, and then internally
**  checks if the player is on a Light Cycle or not to determine which
**  of the HUD elements should be visible.
**
**  The layout has been split into multiple Sub-Categories, for
**  everyone's convenience.
*/

/*  -----[General]-----
**  These are the HUD elements that either apply to the entire HUD,
**  didn't fall under any of the other Sub-Categories, or just weren't
**  complex enough to get their own Sub-Category.
**
**	LayoutName (Integer)
**      - The string ID used to identify the layout configuration.
**      - DO NOT CHANGE - The String ID does NOT reference CRES.DLL, and
**      the actual source is not known.
**	UseAmmoBar (Boolean Integer)
**      - Determines if the ammo display is visible or not.
**      - TRON 2.0 does not use traditional ammo, so this should always
**      be set to 0.
**      0: The ammo bar is hidden.
**      1: The ammo bar is visible.
**  ArmorOffset (2D Point)
**      - The offset of the armor display from the lower-right corner
**      of the screen. This is the graphic that tells the player what
**      pieces of armor they currently have equipped.
**      - Monolith note: All bitmaps used are specified in
**      SUBROUTINES.TXT. (What does this have to do with armor?)
**      - TODO can I remove this note? (LDSO)
*/
[HUDLayout0]
LayoutName			= 385
UseAmmoBar			= 0
ArmorOffset			= (10, 10)

/*  -----[Health & Energy]-----
**  These are self-explanatory - they control the Health & Energy bars.
**  Does not include the Permissions ring between them.
**
**	BarHeight (Integer) (KAMod)
**		- The total height used for the Health & Energy bars.
**	HealthBarWidth (Integer),
**  EnergyBarWidth (Integer)
**      - The total width used for the Health & Energy bars.
**  HealthTex (Rectangle)
**      - The space allocated to display the Health bar foreground (the
**      bright red layer).
**  HealthFGOffset (2D Point)
**      - The offset of the Health bar foreground (the bright red layer)
**      from the lower-middle point of the screen.
**  HealthBGTex (Rectangle)
**      - The space allocated to display the Health bar background (the
**      dark red layer as well as the little blue line around it).
**  HealthBGOffset (2D Point)
**      - The offset of the Health bar background (the dark red layer as
**      well as the little blue line around it) from the lower-middle
**      point of the screen.
**  EnergyTex (Rectangle)
**      - The space allocated to display the Energy bar foreground (the
**      bright green layer).
**  EnergyFGOffset (2D Point)
**      - The offset of the Energy bar foreground (the bright green
**      layer) from the lower-middle point of the screen.
**  EnergyBGTex (Rectangle)
**      - The space allocated to display the Energy bar background (the
**      dark green layer as well as the little blue line around it).
**  EnergyBGOffset (2D Point)
**      - The offset of the Energy bar background (the dark green layer
**      as well as the little blue line around it) from the lower-middle
**      point of the screen.
**  TextHeight (Integer)
**      - The font height of the Health & Energy indicator text.
**  HealthEnergyFont (Integer),
**  HealthEnergyFontSize (Integer)
**      - The font ID and font height of the Health & Energy indicators.
**  HealthTextOffset (2D Point),
**  EnergyTextOffset (2D Point)
**      - The offset of the Health & Energy indicators from the lower-
**      middle point of the screen.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**	BarScale (Float?)
**  HealthBlinkTime (Integer)
**  HealthBlinkTex (Rectangle)
**  EnergyDeficitTex (Rectangle)
*/
BarHeight				= 14
//BarScale				= 1
HealthBarWidth			= 158
//HealthBlinkTime		= 2
EnergyBarWidth			= 158
HealthTex				= (118, 146, 254, 159)
HealthFGOffset			= (67, -20)
HealthBGTex				= (2, 233, 254, 251)
HealthBGOffset			= (0, -25)
//HealthBlinkTex		= (349, 441, 509, 451)
EnergyTex				= (118, 161, 254, 174)
EnergyFGOffset			= (-65, -20)
EnergyBGTex				= (3, 200, 253, 217)
EnergyBGOffset			= (0, -25)
//EnergyDeficitTex		= (118, 175, 254, 185)
TextHeight				= 20
HealthEnergyFont		= 0
HealthEnergyFontSize 	= 32
HealthTextOffset		= (60, -15)
EnergyTextOffset 		= (-60, -15)

/*  -----[Permission Set Indicator]-----
**  This is the permission ring at the center of the screen. It's unique
**  in that it's one of the few elastic elements - meaning the width and
**  height can be different and the entire HUD element is able to scale
**  accordingly.
**
**  PsetOffset (2D Point) (SP)
**      - The offset of the permission set indicator from the lower-
**      middle point of the screen.
**  PsetWidth (Integer) (SP),
**  PsetHeight (Integer) (SP)
**      - The width and height of the permission set indicator.
*/
PsetOffset	= (0, 0)
PsetWidth	= 80
PsetHeight	= 80

/*  -----[Weapon Indicator]-----
**  This is just the small single box at the top-right corner of the
**  screen that lets the player know what their currently equipped
**  weapon is. Not to be confused with the Weapon Chooser.
**
**  WeaponIndicatorAnimTime (Float)
**      - Unknown function. It has something to do with the transition
**      between seeing all of the weapons to just seeing the currently
**      equipped one, but changing this Attribute did not really make it
**      easier to understand.
**      - TODO further research
**  WeaponIndicatorOffset (2D Point)
**      - The offset of the currently equipped weapon indicator from the
**      (almost) upper-left corner of the screen.
**  WeaponIndicatorIconOffset (2D Point)
**      - The offset of the currently equipped weapon's icon from the
**      lower-right corner of the indicator box that contains it.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  WeaponIndicatorBox (Rectangle)
**  WeaponIndicatorTex (Path String)
*/
//WeaponIndicatorBox		= (70, 75, 116, 116)
//WeaponIndicatorTex		= "interface\hud\hud.dtx"
WeaponIndicatorAnimTime	    = 0.25
WeaponIndicatorOffset		= (10, 10)
WeaponIndicatorIconOffset	= (-7, -12)

/*  -----[Weapon Chooser]-----
**  This is the larger graphic that appears when the player wants to
**  change their currently equipped weapon. Not to be confused with the
**  Weapon Indicator.
**
**  ChooserTex (Path String),
**  ChooserTexHi (Path String)
**      - The texture used as the background box for an available
**      weapon, when not highlighted and highlighted respectively.
**      - ChooserTexHi is inherited by the Weapon Indicator.
**  ChooserCorruptTex (Path String),
**  ChooserCorruptTexHi (Path String)
**      - The texture used as the background box for an available, but
**      corrupted weapon, when not highlighted and highlighted
**      respectively.
**  ChooserEmptyTex (Path String)
**      - The texture used as the background box for an unavailable
**      weapon, when not highlighted. Only appears when the player has
**      insufficient energy to use that weapon.
**  ChooserEmptyTexHi (Path String)
**      - The texture used as the background box for an unavailable
**      weapon, when highlighted. The player isn't able to highlight
**      weapons they can't use, so this is unused by proxy.
**  ChooserTextColor (Vector) (SP),
**  ChooserTextSize (Integer)
**      - The color and font height of the string displaying the name of
**      the currently highlighted weapon.
**  ChooserBoxSize (Dimension) (KAMod)
**      - The defined width and height of each available weapon box.
**      Does not affect the texture size, just the box itself.
**  ChooserSpacing (Dimension)
**      - The defined width and height of the spacing between each
**      available weapon box.
**  ChooserIconOffset (2D Point)
**      - The offset of an available weapon's icon from the lower-right
**      corner of the chooser box that contains it.
**  ChooserMargin (2D Point) (SP)
**      - The (scalable?) offset of the weapon chooser from the upper-
**      right corner of the screen.
**      - TODO check scalability
**  ClassNumber# (Path String),
**  ClassNumberHi# (Path String)
**      - These point to the textures used to indicate the numbers of
**      the available weapon classes (4 in total), when not highlighted
**      and highlighted respectively.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  ChooserTextAlpha (Float)
**  ChooserUVTitleBox (Rectangle)
**  ChooserTitleHight (Integer)
**  ChooserIntroTime (Float)
**  ChooserOutroTime (Float)
**  ChooserColumnWidth (Integer)
**  ChooserIconHeight (Integer)
**  ChooserTextureScale (Float)
**  ChooserPosition (Integer)
*/
ChooserTex			    = "interface\hud\currentweapon.dtx"
ChooserTexHi			= "interface\hud\currentweapon_hl.dtx"
ChooserCorruptTex		= "interface\hud\currentweapon_corrupt.dtx"
ChooserCorruptTexHi		= "interface\hud\currentweapon_corrupt_hl.dtx"
ChooserEmptyTex			= "interface\hud\currentweapon_empty.dtx"
ChooserEmptyTexHi		= "interface\hud\currentweapon_empty_hl.dtx"
//ChooserTextAlpha		= 1.0
ChooserTextColor		= <255.0, 149.0, 0.0>
ChooserTextSize			= 24
//ChooserUVTitleBox		= (117, 18, 254, 43)
ChooserBoxSize			= (46, 42)
ChooserSpacing			= (0, 6)
ChooserIconOffset		= (-7, -12)
ChooserMargin			= (10, 10)
//ChooserTitleHeight	= 0
//ChooserIntroTime		= 0.5
//ChooserOutroTime		= 0.5
//ChooserColumnWidth	= 48
//ChooserIconHeight		= 48
//ChooserTextureScale	= 0.75
//ChooserPosition		= 120
ClassNumber0			= ""
ClassNumber1			= "Interface\hud\currentweaponTab_1.dtx"
ClassNumber2			= "Interface\hud\currentweaponTab_2.dtx"
ClassNumber3			= "Interface\hud\currentweaponTab_3.dtx"
ClassNumber4			= "Interface\hud\currentweaponTab_4.dtx"
ClassNumberHi0			= ""
ClassNumberHi1			= "Interface\hud\currentweapon_hlTab_1.dtx"
ClassNumberHi2			= "Interface\hud\currentweapon_hlTab_2.dtx"
ClassNumberHi3			= "Interface\hud\currentweapon_hlTab_3.dtx"
ClassNumberHi4			= "Interface\hud\currentweapon_hlTab_4.dtx"

/*  -----[New Objective Indicator]-----
**  I'm leaving this in, but not sure if it's actually used, assuming
**  that it references the UPDATE_FLASH texture. It doesn't seem to be
**  visible anywhere.
**
**  TODO used?
**
**  ObjectiveOffsetChris (2D Point)
**      - Chris' silly little objective indicator. Pay it no mind.
**      - Seriously, don't bother looking at it. Just.. move on.
**      - ...
**      - Why are you still reading this? Go modify a different
**      Attribute, this one's off-limits.
**  ObjectiveOffset (2D Point)
**      - The offset of the new objective indicator from an unknown
**      origin.
*/
ObjectiveOffsetChris	= (8, -264)
ObjectiveOffset			= (8, -40)

/*  -----[Pings]-----
**  These are for the pings that pop up on the left side of the screen
**  when certain events happen, like getting new subroutines, getting an
**  I/O node message, or getting a new objective.
**
**  See the Pings File for more information, as this HUD element ties in
**  with that File directly.
**
**  PingIconSize (Dimension) (KAMod)
**      - The defined width and height of the ping icon boxes. Does not
**      affect the texture size, just the boxes themselves.
**  PingStartPoint (2D Point) (KAMod)
**      - The upper-left origin position of the ping list.
**  PingSpacing (Dimension)
**      - The defined width and height of the spacing between ping icon
**      boxes.
**  PingBlinkCount (Integer)
**      - The amount of times a ping will blink when it pops up.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  PingFontNum (Integer)
**  PingFontSize (Integer)
**  PingBlinkTime (Float)
*/
PingIconSize		= (130, 65)
PingStartPoint		= (6, 120)
PingSpacing			= 0
//PingFontNum		= 0
//PingFontSize		= 0
PingBlinkCount		= 4
//PingBlinkTime		= 0.5

/*  -----[Crosshair Text Elements]-----
**  This isn't about the crosshair itself; rather, it's meant to be for
**  the stuff around the crosshair. The Activation Text is the yellow
**  text beneath the crosshair that shows up when something can be
**  interacted with, and the Info Text is... something.
**
**  Research on the Info Text is incomplete, so definitions for
**  Attributes relating to it are currently unavailable.
**
**  ActivationTextPos (2D Point) (KAMod),
**  ActivationTextSize (Integer)
**      - The upper-left origin position and font height of the
**      activation text.
**  ActivationTextJustify (Integer)
**      - The justification Value of the activation text.
**      - It is not currently known what exactly this means in context.
**      - TODO figure out what the justification values are and/or mean
**  ActivationTextAlpha (Float),
**  ActivationTextColor (Vector)
**      - The opacity and text color of enabled activation text.
**  ActivationTextDisAlpha (Integer?),
**  ActivationTextDisColor (Vector)
**      - The opacity and text color of disabled activation text.
**      - It is not presently known if this is accessible in-game.
**      - TODO Is this used? (LDSO)
**      - TODO why is the alpha value at 255? (LDSO)
**
**  Info Text is I guess used? What is this?
**  TODO actually what is this (LDSO)
**  InfoTextPos (2D Point) (KAMod)
**  InfoTextSize (Integer)
**  InfoTextWidth (Integer)
**  InfoTextJustify (Integer)
**  InfoTextAlpha (Integer?)
**  InfoTextColor (Vector)
**  InfoTextBadAlpha (Integer?)
**  InfoTextBadColor (Vector)
**  
**  ---<SAFELY DEPRECATED SETTINGS>---
**  DebugTextPos (2D Point)
**  DebugTextSize (Integer)
**  DebugTextJustify (Integer)
**  DebugTextAlpha (Float)
**  DebugTextColor (Vector)
*/
ActivationTextPos		= (320, 220)
ActivationTextSize		= 14
ActivationTextJustify	= 2
ActivationTextAlpha		= 1
ActivationTextColor		= <255.0, 255.0, 0.0>
ActivationTextDisAlpha	= 255
ActivationTextDisColor	= <128.0, 128.0, 128.0>
//DebugTextPos			= (360, 100)
//DebugTextSize			= 12
//DebugTextJustify		= 0
//DebugTextAlpha		= 1.0
//DebugTextColor		= <255.0, 255.0, 255.0>
InfoTextPos			    = (320, 240)
InfoTextSize			= 12
InfoTextWidth			= 200
InfoTextJustify			= 2
InfoTextAlpha			= 128
InfoTextColor			= <255.0, 255.0, 0.0>
InfoTextBadAlpha		= 128
InfoTextBadColor		= <255.0, 64.0, 64.0>

/*  -----[Data Log]-----
**  This HUD element is currently unidentified, potentially unused.
**  Subject to further testing.
**  TODO what's this
**
**  DataLogRect (Rectangle)
**  DataLogFontSize (Integer)
**  DataLogHeaderFontSize (Integer)
**  DataLogFrame (Path String)
*/
DataLogRect			    = (150, 50, 490, 400)
DataLogFontSize			= 20
DataLogHeaderFontSize	= 18
DataLogFrame			= "interface\hud\hud.dtx"

/*  -----[Profiler Subroutine Text]-----
**  This is the text for the Profiler subroutine. By default, appears
**  roughly to the right of the crosshair.
**
**  ProfilerPos (2D Point)
**      - The lower-right origin position of the Profiler text.
**  ProfilerTextSize (Integer)
**      - The font height of the Profiler text.
*/
ProfilerPos			= (370, 240)
ProfilerTextSize	= 16

/*  -----[LOL & Triangulate Subroutine Zoom Values]-----
**  The exact unit of measurement used for the FOV zoom is unknown, but
**  the effect is consistent. When Triangulate is equipped, the game
**  moves between the three zoom values for Triangulate. When the LOL is
**  equipped, the game uses the single zoom value for the LOL.
**
**  When BOTH subroutines are equipped, and the player zooms in with the
**  LOL, it will initially use the LOL zoom value; however, if the
**  player zooms in further and then zooms back out to the first value,
**  the game will instead use the first Triangulate value rather than
**  going back to the LOL value. This resets every time the zoom is
**  exited.
**
**  FOVZoomLOL (Float)
**      - The designated FOV zoom value when the player scopes in with
**      the LOL.
**  FOVZoomTriangulate# (Float)
**      - The designated FOV zoom values when the player scopes in with
**      Triangulate. 3 maximum values permitted.
*/
FOVZoomLOL			= 30.0
FOVZoomTriangulate1	= 20.0
FOVZoomTriangulate2	= 7.0
FOVZoomTriangulate3	= 3.0

/*  -----[Light Cycle HUD Elements]-----
**  The HUD is completely different while using a Light Cycle. Luckily,
**  this is one of the very few areas where Monolith provided the exact
**  definition for all of these Attributes!
*/

/*  ---[Powerup Indicator]---
**  This is the element that displays the icon of the powerup currently
**  available to the player.
**
**  PowerupIconPos (2D Point)
**      - The "true center" origin position of the player's currently
**      stored powerup icon.
**  PowerupIconTexture# (Path String)
**      - The textures used to display the icon for each powerup.
**      - The textures correspond to the in-game powerups as follows:
**      Powerup 0: Shield Break
**      Powerup 1: Turbo Boost
**      Powerup 2: Wall Spike
**      Powerup 3: Missile
**      Powerup 4: Wall Extender
**      Powerup 5: Turbo Curse
**      Powerup 6: Grab
**      Powerup 7: Wall Reset
**      Powerup 8: Force Use
*/
PowerupIconPos		= (320, 32)
PowerupIconTexture0	= "Interface\HUD\LC_pickup_Shield.dtx"
PowerupIconTexture1	= "Interface\HUD\LC_pickup_TurboBoost.dtx"
PowerupIconTexture2	= "Interface\HUD\LC_pickup_TrailSpike.dtx"
PowerupIconTexture3	= "Interface\HUD\LC_pickup_Missle.dtx"
PowerupIconTexture4	= "Interface\HUD\LC_pickup_WallExtender.dtx"
PowerupIconTexture5	= "Interface\HUD\LC_pickup_TurboCurse.dtx"
PowerupIconTexture6	= "Interface\HUD\LC_pickup_Grab.dtx"
PowerupIconTexture7	= "Interface\hud\LC_pickup_Reset.dtx"
PowerupIconTexture8	= "Interface\HUD\LC_pickup_ForceUse.dtx"

/*  ---[Lives]---
**  Lives are only used in the Single Player Light Cycle Circuits.
**
**  LivesIconPos (2D Point)
**      - The upper-right origin position of the lives icon.
**  LivesTextOffset (Integer)
**      - The offset of the lives text to the left of the lives icon.
**  LivesTextHeight (Integer)
**      - The font height of the lives text.
*/
LivesIconPos	= (625, 0)
LivesTextOffset	= 4
LivesTextHeight	= 16

/*  ---[Roster]---
**  This is the list showing the remaining competitors in the current
**  race.
**
**  RosterPosition (2D Point) (KAMod)
**      - The upper-left origin position of the entire roster list.
**  RosterTextHeight (Integer)
**      - The font height of the names on the roster.
**  RosterTextOffset (Integer)
**      - The offset of the roster names to the left of their respective
**      icons.
**  RosterLineOffset (Integer)
**      - The vertical spacing between roster lines.
**  RosterEnableIconScaling (Boolean Integer)
**      - Decides whether roster icon scaling is enabled or not.
**  RosterIconBaseSizeIfScalingIsEnabled (Dimension) (KAMod)
**      - The defined minimum width and height of a roster icon. Only
**      used if RosterEnableIconScaling is set to 1.
*/
RosterPosition					        = (6, 50)
RosterTextHeight				        = 14
RosterTextOffset				        = 4
RosterLineOffset				        = 4
RosterEnableIconScaling			        = 1
RosterIconBaseSizeIfScalingIsEnabled    = (24, 16)

/*  ---[Intro]---
**  Currently unidentified, but very likely used.
**  TODO check this. Clearly used but what is it? (LDSO)
**
**  IntroMasterPos (2D Point)
**      - The upper-middle origin position of the intro frame.
**  IntroVFrameBorder (Integer),
**  IntroHFrameBorder (Integer)
**      - The vertical and horizontal distance between the intro text
**      and frame.
**  IntroTitleHeight (Integer),
**  IntroEntryHeight (Integer)
**      - The font height of the title and entry text.
**  IntroTitleSpace (Integer)
**      - The vertical space between the title and the top of the first
**      entry.
**  IntroEntrySpace (Integer)
**      - The vertical spacing between entries.
**  IntroHeaderOffset (Integer) (KAMod),
**  IntroValueOffset (Integer) (KAMod)
**      - The offset of the header and value texts from the center of
**      the screen.
**  IntroValueTime (Float)
**      - The amount of time, in seconds, to show the intro screen for.
**  IntroFrameBackground (Path String)
**      - The texture used for the intro frame background. Potentially
**      unused.
**      - TODO check this
**   IntroTexturedFrameName (String)
**      - The name of the TexturedFrame object used for the intro frame.
**      Potentially unused.
**      - For more details, see the "Textured Frames Layout" section.
**      - TODO check this
*/
IntroMasterPos			= (320, 8)
IntroVFrameBorder		= 6
IntroHFrameBorder		= 10
IntroTitleHeight		= 22
IntroEntryHeight		= 16
IntroTitleSpace			= 6
IntroEntrySpace			= 6
IntroHeaderOffset		= -81
IntroValueOffset		= 49
IntroValueTime			= 4.0
IntroFrameBackground	= "interface\menu\sprtex\frame_solid.dtx"
IntroTexturedFrameName	= "lightcycle_start"

/*  ---[Speedometer]---
**  This is the speedometer that shows the current speed of the Light
**  Cycle. 
**
**  SpeedometerPos (2D Point) (KAMod)
**      - The upper-left origin position of the speedometer.
**  SpeedometerFontNum (Integer),
**  SpeedometerTextHeight (Integer)
**      - The font ID and font height of the speedometer text.
**  SpeedometerVBorder (Integer) (KAMod),
**  SpeedomederHBorder (Integer) (KAMod)
**      - The vertical and horizontal distance between the speedometer
**      text and frame border. Text is horizontally offset from the
**      right side.
**  SpeedometerFrameWidth (Integer) (KAMod),
**  SpeedometerFrameHeight (Integer) (KAMod)
**      - The total width and height of the speedometer frame.
**  SpeedometerFrameBackground (Path String)
**      - The texture used for the speedometer frame background.
**      Potentially unused.
**      - TODO check this
**  SpeedometerTexturedFrameName (String)
**      - The name of the TexturedFrame object used for the speedometer
**      frame. Potentially unused.
**      - For more details, see the "Textured Frames Layout" section.
**      - TODO check this
*/
SpeedometerPos					= (34, 8)
SpeedometerFontNum				= 4
SpeedometerTextHeight			= 24
SpeedometerVBorder				= 5
SpeedometerHBorder				= -23
SpeedometerFrameWidth			= 26
SpeedometerFrameHeight			= 24
SpeedometerFrameBackground		= "interface\hud\frame_lightcycle.dtx"
SpeedometerTexturedFrameName	= "lightcycle_speedometer"

/*  ---[Distance Icon]---
**  Currently unidentified HUD element, potentially unused.
**  TODO what is this (LDSO)
**
**  DistanceIconPos (2D Point) (KAMod)
**  DistanceIconBlinkSpeed (Float)
**  DistanceIconAlpha (Float)
**  DistanceIconFadeOutSpeed (Float)
*/
DistanceIconPos			    = (294, 326)
DistanceIconBlinkSpeed		= 6.0
DistanceIconAlpha		    = 0.8
DistanceIconFadeOutSpeed	= 1.0

/*  -----["Useless Stuff"]-----
**  Monolith claims this entire section is a bunch of "useless stuff".
**  It's gonna stay here, without documentation, until it is confirmed 
**  that any of them are used.
**
**  This section does not appear on the GitHub wiki page.
*/
//DisplayMeterBasePosY	= 54
//DisplayMeterOffset	= (0, 0)
//DisplayMeterHeight	= 8
//DisplayMeterScale		= 2.5
//DisplayMeterTexture	= "Interface\hud\bossbar.dtx"
//AmmoBasePos 		    = (624, 450)
//AmmoClipOffset		= (-8, 8)
//AmmoClipUnitSize		= (7, 12)
//AmmoBarOffset		    = (0, 0)
//UseAmmoText 		    = 1
//AmmoTextOffset		= (-72, -16)
//AmmoTextColor		    = <160.0, 128.0, 32.0>
//AmmoTextAlpha		    = 0.8
//AmmoIconOffset		= (-104, -16)
//AmmoIconSize		    = 24
//UseHealthBar		    = 1
//HealthBasePos		    = (16, 430)
//HealthBarOffset 		= (0, 34)
//ArmorBarOffset		= (6, 22)
//UseHealthText		    = 0
//HealthColor 		    = <192.0, 0.0, 0.0>
//ArmorColor			= <0.0, 0.0, 192.0>
//HealthAlpha 		    = 0.8
//UseHealthIcon		    = 0
//HealthIconOffset		= (0, -20)
//ArmorIconOffset 		= (64, -20)
//HealthIconSize		= 20
//UseAirIcon			= 1
//AirBasePos			= (24, 400)
//UseAirText			= 0
//AirTextOffset		    = (24, -26)
//UseAirBar			    = 1
//AirBarOffset		    = (12, 0)
//AirIconOffset		    = (-20, -8)
//AirColor			    = <0.0, 202.0, 158.0>
//AirAlpha			    = 0.8
//AirIconSize 		    = 32
//ModeTextPos 		    = (80, 40)
//DamageBasePos		    = (0, 240)
//CompassPos		    = (528, 16)
//CompassSize 		    = 96
//HideIconPos 		    = (288, 336)
//HideIconBlinkSpeed	= 3.0
//HideIconAlpha		    = 0.6
//DamageSize			= 32

/*  -----[HUD Layout 1]-----
**  This seems to have been the HUD Layout for the Light Cycles at one
**  point, but given the sheer amount of zeroed out values and repeated
**  references to the same texture 9 times, I get the idea this isn't 
**  actually used anymore.
**  Commenting out the entire section didn't affect the game. Unused?
**  TODO HUDLayout1 check (LDSO)
*/
[HUDLayout1]
ArmorOffset				                = (-64, -128)
HealthEnergyFontSize 	                = 0
HealthBarWidth			                = 0
EnergyBarWidth			                = 0
HealthBGTex				                = (0, 0, 0, 0)
EnergyBGTex				                = (0, 0, 0, 0)
WeaponIndicatorOffset	                = (-64, 0)
PingIconSize			                = (0, 0)
PsetWidth				                = 0
PsetHeight				                = 0
ActivationTextPos		                = (320, -16)
InfoTextPos			                    = (320, -16)
ProfilerTextSize	                    = 0
PowerupIconTexture0				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture1				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture2				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture3				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture4				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture5				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture6				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture7				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture8				        = "Interface\HUD\Reticle.dtx"
LivesIconPos					        = (0, -32)
LivesTextHeight					        = 0
RosterTextHeight				        = 0
RosterIconBaseSizeIfScalingIsEnabled    = (0, 0)
IntroTitleHeight				        = 0
IntroEntryHeight				        = 0
SpeedometerTextHeight			        = 0
DistanceIconAlpha		                = 0


/************************************************************************
**
**	             ----------[Player Version Number]----------
**  
**  The VersionNumber definition manages the HUD element displaying the
**  player's name and current version number. For the build note count
**  beneath it, see the "Build Note Counter" section following this one.
**
**  When the player picks up a Build Note, the game will perform either
**  a major or a minor upgrade. A major upgrade occurs when the first of
**  the three numbers increments. A minor upgrade occurs when the second
**  or the third numbers increment.
**
**	Position (2D Point)
**      - The upper-left origin position of the version number.
**	Font (Integer),
**	FontSize (Integer)
**		- The font ID and pixel height of the version number.
**	BaseColor (Vector) (SP)
**		- The color of the version number text.
**	MinorUpgradeColor (Vector),
**	MajorUpgradeColor (Vector)
**      - The colors that the text will flash to when the player's
**      version number is upgraded. 
**	MinorUpgradeLoops (Integer),
**	MajorUpgradeLoops (Integer)
**		- The amount of times the text will flash to the respective
**      upgrade color.
**	MinorUpgradeLoopLength (Float),
**	MajorUpgradeLoopLength (Float)
**		- The amount of time, in seconds, that the text will take to
**      perform a single flash to the respective upgrade color.
*/
[VersionNumber]
Position		        = (10, 5)
Font			        = 0
FontSize		        = 16
BaseColor		        = <255.0, 90.0, 90.0>
MinorUpgradeLoops	    = 10
MinorUpgradeLoopLength	= 0.7
MajorUpgradeLoops	    = 10
MajorUpgradeLoopLength	= 1.0
MinorUpgradeColor	    = <255.0, 255.0, 255.0>
MajorUpgradeColor	    = <255.0, 255.0, 255.0>


/************************************************************************
**
**	             ----------[Build Note Counter]----------
**
**  The BuildNoteCount definition manages the HUD element displaying the
**  amount of build notes that the player can get on the current map.
**  
**  AnchorPos (2D Point)
**      - The upper-left origin position of the build note counter.
**  IconTexture (Path String)
**      - The texture used for the build note icon to the left of the
**      counter.
**  TextSize (Integer),
**  BaseColor (Vector) (SP)
**      - The pixel height and color of the build note counter text.
*/
[BuildNoteCount]
AnchorPos	= (12, 22)
IconTexture = "interface\hud\buildnote_hudicon.dtx"
TextSize	= 16
BaseColor	= <255.0, 90.0, 90.0>


/************************************************************************
**
**	            ----------[I/O Node HUD Elements]----------
**
**  The IONodeCam definition manages the HUD elements used for I/O Node
**  calls. There are two main pieces to it: Piece 1 is for the frame and
**  the ring decoration to its sides, and Piece 2 is for the static
**  inside the frame and (assumedly) the glow of the decoration.
**
**  Understanding how these I/O Nodes work ingame is a bit difficult, so
**  it's unlikely the definitions provided here will explain it well or
**  are even fully accurate, especially in the case of Piece2.
**
**	Center (2D Point)
**      - This defines the "center of the screen" that the HUD Pieces
**      will use for reference.
**	Piece1Tex (Path String)
**      - The texture to use for the first I/O Node HUD Piece.
**	Piece1MinAlpha (Float),
**	Piece1MaxAlpha (Float)
**      - The highest and lowest opacity Value that Piece1 will
**      fluctuate between.
**	Piece1Period (Float)
**      - The amount of time, in seconds, that Piece1 will take to
**      perform a single fluctuation.
**	Piece1Radius (Float) (KAMod)
**      - The width of the Piece1Tex, which makes up half of the frame.
**      The game will use this same width Value when mirroring the
**      texture.
**	Piece2Tex (Path String)
**      - The texture to use for the second I/O Node HUD Piece.
**	Piece2MinRadius	(Float) (KAMod),
**	Piece2MaxRadius (Float) (KAMod)
**      - The highest and lowest width Value that Piece2 will fluctuate
**      between when performing a flicker. The game will use these same
**      width Values when mirroring the texture.
**	Piece2MinInterval (Float),
**	Piece2MaxInterval (Float)
**      - The highest and lowest time, in seconds, that Piece2 will wait
**      between flickers.
**	Piece2MinFlickers (Integer),
**	Piece2MaxFlicker (Integer)
**      - The highest and lowest amount of times Piece2 will flicker
**      between the minimum and maximum radius.
**      - TODO revisit, feeling shaky on this one
**	Piece2FlickerTime (Float)
**      - The amount of time, in seconds, that Piece2 will take to
**      perform a single flicker.
*/
[IONodeCam]
Center			    = (320, 357)
Piece1Tex			= "Interface\hud\IONode_hud.dtx"
Piece1MinAlpha		= 0.27
Piece1MaxAlpha		= 0.36
Piece1Period		= 3.0
Piece1Radius		= 192.0
Piece2Tex			= "Interface\hud\IONode_static.dtx"
Piece2MinRadius		= 208.0
Piece2MaxRadius		= 224.0
Piece2MinInterval	= 0.01
Piece2MaxInterval	= 0.25
Piece2MinFlickers	= 12
Piece2MaxFlicker	= 22
Piece2FlickerTime	= 0.04


/************************************************************************
**
**	                 ----------[Single String]----------
**
**  The SingleString definition prints a persistent announcement to the
**  screen in multiplayer. This is the big yellow text that usually
**  shows up between rounds or between games.
**
**	Position (2D Point) (KAMod),
**  DiscMPPosition (2D Point) (KAMod)
**		- The upper-left origin position of the text. For Disc Arena and
**      Disc Tournament modes, use DiscMPPosition. For all other modes,
**      use Position.
**      - These Attributes are managed by the Killer App Mod.
**	Font (Integer),
**	FontSize (Integer),
**  FontColor (Vector)
**		- The font ID, pixel height, and color of the text.
*/
[SingleString]
Position        = (320, 165)
DiscMPPosition  = (320, 165)
Font            = 0
FontSize        = 27
FontColor       = <255.0, 255.0, 90.0>


/************************************************************************
**
**	          ----------[Utility Subroutine Chooser]----------
**
**  This is a currently unidentified Category that, based on its name,
**  is probably a functionality integrated into the Subroutines Screen.
**  Documentation is temporarily unavailable while further clarification
**  is gathered.
**  TODO What is this? (LDSO)
**
**	There are two attributes defined under HudLayout0 :
**	ChooserTextAlpha
**	ChooserTextColor
**
**	All of the subroutine bitmaps are defined in Subroutines.txt
*/
[SubroutineChooser]
OpenTime			= 2.0
CloseTime			= 2.0
FontSize			= 14
BoxSize				= (40, 40)
Spacing				= 42
CursorSize			= (128, 32)
TopLine				= 56
BackgroundTex		= "interface\hud\hud.dtx"
BackgroundTexUV		= (154, 113, 182, 141)
BadBackgroundTex	= "interface\hud\utilitybg_corrupt.dtx"
BadBackgroundTexUV	= (2, 2, 30, 30)
CursorTex			= "interface\hud\hud.dtx"
CursorTexUV			= (117, 45, 254, 70)


/************************************************************************
**
**	          ----------[Objective Progress Layout]----------
**
**  The ProgressBox definition manages the pop-up box accessed by
**  pressing and holding the Tab key. This box displays all of the
**  objectives the player has received, whether completed or otherwise,
**  on the current map. It appears toward the bottom-left corner of the
**  screen.
**
**  Note that this does not apply to chooser boxes that appear in the
**  same place (e.g. the prompts to skip tutorials).
**  
**  ProgressRect (Rectangle)
**      - The space allocated to display the objective progress window.
**  HUDOffset (Integer)
**      - Currently unidentified function, potentially unused.
**      - TODO verify.
**  TitleFont (Integer),
**  TitleFontSize (Integer) (KAMod),
**  TitleAlpha (Float),
**  TitleColor (Vector)
**      - The font ID, pixel height, opacity, and color of both the
**      "Objective" header and the "Tasks" subheader.
**  ObjectiveFont (Integer),
**  ObjectiveFontSize (Integer) (KAMod)
**      - The font ID and pixel height of all objective text.
**  ObjectiveAlpha (Float),
**  ObjectiveColor (Vector)
**      - The opacity and color of incomplete objective text.
**  CompletedObjectiveAlpha (Float),
**  CompletedObjectiveColor (Vector)
**      - The opacity and color of complete objective text.
**  SecondaryObjectiveAlpha (Float),
**  SecondaryObjectiveColor (Vector)
**      - The opacity and color of secondary objective text.
**  ObjectiveSpacing (Integer)
**      - The height of the text spacing between objectives, if multiple
**      are displayed.
*/
[ProgressBox]
ProgressRect			= (10, 250, 250, 480)
HUDOffset				= 42
TitleFont				= 1
TitleFontSize			= 28
TitleAlpha				= 1.0
TitleColor				= <255.0, 255.0, 255.0>
ObjectiveFont			= 0
ObjectiveFontSize		= 24
ObjectiveAlpha			= 0.75
ObjectiveColor			= <255.0, 255.0, 255.0>
CompletedObjectiveAlpha = 0.75
CompletedObjectiveColor = <128.0, 128.0, 128.0>
SecondaryObjectiveAlpha = 0.75
SecondaryObjectiveColor = <255.0, 255.0, 255.0>
ObjectiveSpacing		= 8

/* -----[UV Box Values]-----
**  There's a lotta stuff to look at here. For now just know it's
**  responsible for holding all the stuff in the boxes exactly where
**  they are. Awaiting further research.
**  
**  TODO what does UV stand for? (LDSO)
**  TODO documentation for this section... all of this seems to work
**  with itself but good luck knowing if most of these have a visible
**  difference
*/
UVBoxLeftInset			= (32, 0, 56, 14)
UVBoxLeftFullInset		= (4, 0, 28, 14)
UVBoxLeftBigInset		= (32, 0, 56, 14)
UVBoxLeftBigFullInset	= (4, 0, 28, 14)
UVSeparator			    = (117, 15, 254, 16)
UVProgressEmpty			= (55, 155, 102, 158)
UVProgressFull			= (6, 155, 53, 158)
UVFrameTopLeft		    = ( 1, 128, 4, 153 )
UVFrameTop		        = ( 6, 128, 101, 153 )
UVFrameTopRight		    = ( 103, 128, 115, 153 )
UVFrameLeft		        = ( 1, 155, 4, 158 )
UVFrameCenter		    = ( 0, 0, 0, 0 )
UVFrameRight		    = ( 0, 0, 0, 0 )
UVFrameBottomLeft	    = ( 1, 160, 4, 163 )
UVFrameBottom		    = ( 6, 160, 101, 163 )
UVFrameBottomRight	    = ( 103, 160, 115, 163 )
UVBoxTopLeft		    = ( 1, 165, 13, 170 )
UVBoxTop		        = ( 15, 165, 98, 170 )
UVBoxTopRight		    = ( 100, 165, 115, 170 )
UVBoxLeft		        = ( 1, 172, 13, 175 )
UVBoxCenter		        = ( 15, 172, 98, 175 )
UVBoxRight		        = ( 100, 172, 115, 175 )
UVBoxBottomLeft	        = ( 1, 177, 13, 188 )
UVBoxBottom		        = ( 15, 177, 98, 188 )
UVBoxBottomRight	    = ( 100, 177, 115, 188 )


/************************************************************************
**
**              ----------[Procedural Indicator]----------
**
**  The ProceduralHUD definition is responsible for listing subroutines
**  that are active underneath the currently equipped weapon, along the
**  right side of the screen. Holding the Tab key also shows the names
**  of those subroutines.
**
**  TODO Or is it? None of these Attributes are doing anything and they
**  seem to be pulling Values from the Weapon Chooser. The text color is
**  representative of this. So... what is this, then? (LDSO)
**
**  FrameTex (Path String)
**      - The texture used for the frame around each active subroutine.
**  TopBound (Integer)
**      - Currently unidentified function, potentially unused.
**      - TODO verify
**  Font (Integer),
**  FontSize (Integer),
**  Alpha (Float),
**  Color (Vector)
**      - The font ID, pixel height, opacity, and color of the text that
**      names each active subroutine when the player holds the Tab key.
**  Spacing (Integer)
**      - The amount of vertical space between each procedural.
**  IconWidth (Integer),
**  IconHeight (Integer)
**      - The width and height of each procedural.
**  IconOffset (Integer)
**      - The offset of the procedural indicator from the right side of
**      the screen.
*/
[ProceduralHUD]
FrameTex	= "interface\hud\procindicator_frame.dtx"
TopBound	= 60
Font		= 0
FontSize	= 24
Alpha		= 1.0
Color		= <165, 233.0, 255.0>
Spacing		= 40
IconWidth	= 39
IconHeight	= 39
IconOffset	= 44

/*  -----[Progress Bar Settings]-----
**  This appears to be responsible for the progress bar that is shown
**  when a subroutine is being identified/disinfected, or when a memory
**  block is being defragged. Awaiting further testing.
**  TODO further testing & KAMod verification
**  
**  EmptyBarTex (Path String),
**  FullBarTex (Path String)
**      - The textures to display for the empty and full segments of the
**      progress bar, respectively.
**  PBarXOffset (Integer),
**  PBarYOffset (Integer)
**      - The horizontal and vertical offsets of the progress bar.
**  PBarWidth (Integer),
**  PBarHeight (Integer)
**      - The width and height of the progress bar.
**  StringXOffset (Integer),
**  StringYOffset (Integer)
**      - The horizontal and vertical offsets of unidentified text.
*/
EmptyBarTex		= "interface\hud\procindicator_bg.dtx"
FullBarTex		= "interface\hud\procindicator_bg_full.dtx"
/*//Small bar--->
PBarXOffset		= 61  // From the left edge of Icon (positive is left)
PBarYOffset		= -3   // From top of Icon (negative is down)
PBarWidth		= 64
PBarHeight		= 8
*/
/*//Big Bar--->
PBarXOffset		= 61  // From the left edge of Icon (positive is left)
PBarYOffset		= -3   // From top of Icon (negative is down)
PBarWidth		= 64
PBarHeight		= 31
*/
//Tiny Bar--->
PBarXOffset		= -3  // From the left edge of Icon (positive is left)
PBarYOffset		= 1   // From top of Icon (negative is down)
PBarWidth		= 31
PBarHeight		= 4

StringXOffset	= 10  // From the left edge of the progress bar (positive is left)
StringYOffset	= -16 // From top of progress bar (negative is down)


/************************************************************************
**
**	           ----------[Textured Frames Layout]----------
**
**  The TexturedFrame defitions can be used by practically any HUD
**  element in order to draw a nicely textured box or frame on screen.
**  The game obviously uses these to some degree, just not here. Not
**  in this File, anyway. Not entirely. Awaiting further testing.
**
**	TODO what does UV stand for??? again
**  TODO where can I test this? (LDSO)
**  
**  Name (String),
**  Texture (Path String)
**      - The name and used texture of the textured frame.
**  Hollow (Boolean Integer)
**      - Untested. Assumed:
**      - Tells the game if the textured frame is hollow.
**  Inscribe (Integer),
**  Margins (Integer)
**      - Untested.
*/

/*  -----[0: Basic]-----
**  Assumed to be a general-purpose textured frame used as a default.
**  Includes a black border.
*/
[TexturedFrame0]
Name			= "Basic"
Texture			= "Interface\hud\chooser_box.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (0, 164, 14, 171)
UVTop			= (14, 164, 99, 171)
UVTopRight		= (99, 164, 116, 171)
UVLeft			= (0, 171, 14, 176)
UVCenter		= (14, 171, 99, 176)
UVRight			= (99, 171, 116, 176)
UVBottomLeft	= (0, 176, 14, 189)
UVBottom		= (14, 176, 99, 189)
UVBottomRight	= (99, 176, 116, 189)

/*  -----[1: Data Log Frame]-----
**  Includes a black border.
*/
[TexturedFrame1]
Name			= "datalogframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 1
Margins			= (4, 25, 0, 0)
UVTopLeft		= (117, 72, 120, 97)
UVTop			= (121, 72, 206, 97)
UVTopRight		= (207, 72, 254, 97)
UVLeft			= (117, 98, 120, 103)
UVCenter		= (0, 0, 0, 0)
UVRight			= (0, 0, 0, 0)
UVBottomLeft	= (117, 104, 120, 111)
UVBottom		= (133, 104, 206, 111)
UVBottomRight	= (207, 104, 254, 111)

/*  -----[2: Data Log Box]-----
**  Includes a black border.
*/
[TexturedFrame2]
Name			= "datalogbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (183, 113, 193, 126)
UVTop			= (194, 113, 238, 126)
UVTopRight		= (238, 113, 254, 126)
UVLeft			= (183, 127, 193, 131)
UVCenter		= (194, 127, 238, 131)
UVRight			= (238, 127, 254, 131)
UVBottomLeft	= (183, 132, 193, 143)
UVBottom		= (194, 132, 238, 143)
UVBottomRight	= (239, 132, 254, 143)

/*  -----[3: I/O Node Box]-----
**  Includes a black border.
*/
[TexturedFrame3]
Name			= "ionodebox"
Texture			= "Interface\hud\ionode.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (0, 27, 55, 65)
UVTop			= (55, 27, 200, 65)
UVTopRight		= (200, 0, 255, 65)
UVLeft			= (0, 65, 195, 74)
UVCenter		= (195, 65, 202, 74)
UVRight			= (202, 65, 255, 13)
UVBottomLeft	= (0, 74, 195, 255)
UVBottom		= (195, 74, 202, 255)
UVBottomRight	= (202, 74, 255, 255)

/*  -----[4: Subtitles]-----
**  Potentially unused.
**  TODO can we confirm this? (LDSO)
*/
[TexturedFrame4]
Name			= "subtitle"
Texture			= "Interface\hud\subtitles.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (0, 0, 13, 9)
UVTop			= (13, 0, 18, 9)
UVTopRight		= (18, 0, 31, 9)
UVLeft			= (0, 9, 13, 13)
UVCenter		= (13, 9, 18, 13)
UVRight			= (18, 9, 31, 13)
UVBottomLeft	= (0, 13, 13, 26)
UVBottom		= (13, 13, 18, 26)
UVBottomRight	= (18, 13, 31, 31)

/*  -----[5: Chooser Frame]-----  */
[TexturedFrame5]
Name			= "chooserframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 0
Margins			= (4, 26, 15, 4)
UVTopLeft		= (1, 116, 4, 149)
UVTop			= (7, 116, 99, 149)
UVTopRight		= (100, 116, 115, 149)
UVLeft			= (1, 150, 4, 151)
UVCenter		= (0, 0, 0, 0)
UVRight			= (0, 0, 0, 0)
UVBottomLeft	= (1, 152, 4, 163)
UVBottom		= (7, 152, 99, 163)
UVBottomRight	= (100, 152, 115, 163)

/*  -----[6: Chooser Box]-----  */
[TexturedFrame6]
Name			= "chooserbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
Margins			= (13, 5, 15, 11)
UVTopLeft		= (1, 165, 13, 170)
UVTop			= (15, 165, 98, 170)
UVTopRight		= (100, 165, 115, 170)
UVLeft			= (1, 172, 13, 175)
UVCenter		= (15, 172, 98, 175)
UVRight			= (100, 172, 115, 175)
UVBottomLeft	= (1, 177, 13, 188)
UVBottom		= (15, 177, 98, 188)
UVBottomRight	= (100, 177, 115, 188)

/*  -----[7: Corrupted Chooser Frame]-----  */
[TexturedFrame7]
Name			= "chooserwarn"
Texture			= "Interface\hud\chooser_frame_warn.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (1, 1, 11, 11)
UVTop			= (13, 1, 18, 11)
UVTopRight		= (20, 1, 30, 11)
UVLeft			= (1, 13, 11, 18)
UVCenter		= (13, 13, 18, 18)
UVRight			= (20, 13, 30, 18)
UVBottomLeft	= (1, 20, 11, 30)
UVBottom		= (13, 20, 18, 30)
UVBottomRight	= (20, 20, 30, 30)

/*  -----[8: Corrupted Chooser Box]-----  */
[TexturedFrame8]
Name			= "chooserboxwarn"
Texture			= "Interface\hud\chooser_box_warn.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (1, 1, 12, 12)
UVTop			= (13, 1, 18, 12)
UVTopRight		= (19, 1, 30, 12)
UVLeft			= (1, 13, 12, 19)
UVCenter		= (13, 13, 18, 19)
UVRight			= (19, 13, 30, 19)
UVBottomLeft	= (1, 20, 12, 30)
UVBottom		= (13, 20, 18, 30)
UVBottomRight	= (19, 20, 30, 30)

/*  -----[9: Weapon Chooser Frame]-----
**  Potentially unused.
**  TODO can we confirm this? (LDSO)
*/
[TexturedFrame9]
Name			= "weaponchooserframe"
Texture			= "Interface\hud\weapon_chooser.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (0, 0, 9, 26)
UVTop			= (9, 0, 98, 26)
UVTopRight		= (98, 0, 127, 34)
UVLeft			= (0, 34, 8, 60)
UVCenter		= (0, 0, 0, 0)
UVRight			= (119, 34, 127, 60)
UVBottomLeft	= (0, 60, 9, 63)
UVBottom		= (9, 60, 119, 63)
UVBottomRight	= (119, 60, 127, 63)

/*  -----[10: Light Cycle Speedometer]-----  */
[TexturedFrame10]
Name			= "lightcycle_speedometer"
Texture			= "Interface\hud\frame_lightcycle.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (1, 1, 42, 15)
UVTop			= (43, 1, 53, 15)
UVTopRight		= (54, 1, 63, 15)
UVLeft			= (1, 16, 42, 53)
UVCenter		= (43, 16, 53, 53)
UVRight			= (54, 16, 63, 53)
UVBottomLeft	= (1, 54, 42, 63)
UVBottom		= (43, 54, 53, 63)
UVBottomRight	= (53, 54, 63, 63)

/*  -----[11: Light Cycle Start]-----
**  TODO what is this?
*/
[TexturedFrame11]
Name			= "lightcycle_start"
Texture			= "Interface\hud\frame_lightcycle_start.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (1, 1, 9, 12)
UVTop			= (10, 1, 28, 12)
UVTopRight		= (29, 1, 63, 12)
UVLeft			= (1, 13, 9, 54)
UVCenter		= (10, 13, 28, 54)
UVRight			= (29, 13, 63, 54)
UVBottomLeft	= (1, 55, 9, 63)
UVBottom		= (10, 55, 28, 63)
UVBottomRight	= (29, 55, 63, 63)

/*  -----[Unused TexturedFrames]-----
**  It's not known why the below Textured Frames were commented out, but
**  because it was Monolith's doing, it's safe to say these are unused.
*/
/*
[TexturedFrame10]
Name			= "Basic"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (10, 35, 27, 44)
UVTop			= (28, 35, 154, 44)
UVTopRight		= (166, 35, 166, 44)
UVLeft			= (10, 45, 27, 50)
UVCenter		= (28, 45, 154, 50)
UVRight			= (166, 45, 166, 50)
UVBottomLeft	= (10, 51, 27, 60)
UVBottom		= (28, 51, 154, 60)
UVBottomRight	= (166, 51, 166, 60)

[TexturedFrame11]
// includes a black border
Name			= "datalogframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 0
UVTopLeft		= (71, 93, 126, 231)
UVTop			= (126, 193, 139, 222)
UVTopRight		= (139, 166, 194, 231)
UVLeft			= (0, 193, 23, 238)
UVCenter		= (0, 0, 0, 0)
UVRight			= (61, 193, 71, 238)
UVBottomLeft	= (0, 238, 23, 255)
UVBottom		= (23, 238, 61, 255)
UVBottomRight	= (61, 238, 71, 255)

[TexturedFrame12]
// includes a black border
Name			= "datalogbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (23, 193, 40, 210)
UVTop			= (40, 193, 48, 210)
UVTopRight		= (48, 193, 61, 210)
UVLeft			= (23, 210, 40, 221)
UVCenter		= (40, 210, 48, 221)
UVRight			= (48, 210, 61, 221)
UVBottomLeft	= (48, 221, 61, 238)
UVBottom		= (48, 221, 61, 238)
UVBottomRight	= (48, 221, 61, 238)

[TexturedFrame13]
// includes a black border
Name			= "ionodebox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (71, 93, 126, 231)
UVTop			= (126, 193, 139, 222)
UVTopRight		= (139, 166, 194, 231)
UVLeft			= (204, 0, 399, 9)
UVCenter		= (400, 0, 407, 9)
UVRight			= (408, 0, 511, 9)
UVBottomLeft	= (204, 9, 399, 196)
UVBottom		= (204, 9, 399, 196)
UVBottomRight	= (204, 9, 399, 196)

[TexturedFrame14]
Name			= "subtitle"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (220, 197, 233, 210)
UVTop			= (234, 197, 247, 210)
UVTopRight		= (248, 197, 261, 210)
UVLeft			= (220, 211, 233, 224)
UVCenter		= (234, 211, 247, 224)
UVRight			= (248, 211, 261, 224)
UVBottomLeft	= (220, 225, 233, 243)
UVBottom		= (234, 225, 247, 243)
UVBottomRight	= (248, 225, 261, 243)
*/


/************************************************************************
**
**	                  ----------[Menu Layout]----------
**
**  The Menu definition declares default Attributes that are shared by
**  all in-game Menus, and cannot be overridden by specific Menus.
**
**  This definition - which was from Monolith - is pretty deceptive.
**  Most of the Attributes here are for the Pause Menu, and the ones
**  that aren't confirmed to be for the Pause Menu are unconfirmed to be
**  used at all. Sure, they're never overridden by anything else. But
**  that could just be because nothing else uses them in the first
**  place.
**  TODO can we confirm this? (LDSO)
**
**	Position (Integer)
**      - This is less of a position and more of an offset, since it's
**      an integer instead of a 2D point. It's the offset of the body of
**      the Pause Menu from the left side of the screen - but scalable, 
**      unlike most offsets. 
**  Size (Dimension) (KAMod)
**      - The defined width and height of the body of the Pause Menu.
**  Frame (Path String),
**  FrameTip (Path String)
**      - The textures used to display the body of the Pause Menu. 
**      FrameTip is used to show the fading out at the bottom of the
**      Menu.
**  BarPosition (2D Point)
**      - The upper-left origin position of the bar at the top of the
**      Pause Menu.
**  BarSize (Dimension)
**      - The defined width and height of the bar at the top of the
**      Pause Menu.
**  BarFont (Integer),
**  BarFontSize (Integer)
**      - The font ID and font height of the tab buttons on the Pause
**      Menu bar.
**  BarSpacing (Integer)
**      - The horizontal line spacing between each of the buttons on the
**      Pause Menu bar. Also applies to the spacing of the first item
**      from the left side of the bar.
**  BarSelectColor (Vector)
**      - The text color of the buttons on the Pause Menu bar, when
**      highlighted.
**  Bar (Path String),
**  BarTip (Path String)
**      - The textures used to display the bar at the top of the Pause
**      Menu. BarTip is used to show the fading out to the bar's right
**      side.
**  SlideInTime (Float),
**  SlideOutTime (Float)
**      - The amount of time, in seconds, that it takes to display the
**      entry and exit sliding animations for the Pause Menu.
**  SlideInSound (Path String),
**  SlideOutSound (Path String)
**      - The sounds used for opening and closing the Pause Menu.
**  UpArrow (Path String),
**  UpArrowH (Path String)
**      - The textures used for the Menu's up arrow, when not
**      highighted and highlighted respectively.
**      - TODO Potentially unused?
**  DownArrow (Path String),
**  DownArrowH (Path String)
**      - The textures used for the Menu's down arrow, when not
**      highlighted and highlighted respectively.
**      - TODO Potentially unused?
**  SelectedColor (Vector),
**  NonSelectedColor (Vector) (SP),
**  DisabledColor (Vector)
**      - The text color for not hightlighted, highlighted, and disabled
**      text respectively.
**      - TODO Potentially unused?
*/
[Menu]
Position			= 320
Size				= (280, 200)
Frame				= "interface\menu\menubar_tile.dtx"
FrameTip			= "interface\menu\menubar_tip.dtx"
BarPosition			= (320, 4)
BarSize				= (312, 25)
BarFont				= 1
BarFontSize			= 16
BarSpacing			= 16
BarSelectColor		= <192.0, 192.0, 0.0>
Bar					= "interface\menu\menudown_tile.dtx"
BarTip				= "interface\menu\menudown_tip.dtx"
SlideInTime			= 0.25
SlideOutTime		= 0.25
SlideInSound		= "interface\snd\menuopen.wav"
SlideOutSound		= "interface\snd\menuclose.wav"
UpArrow				= "interface\menu\sprtex\arrowup.dtx"
UpArrowH			= "interface\menu\sprtex\arrowup_h.dtx"
DownArrow			= "interface\menu\sprtex\arrowdn.dtx"
DownArrowH			= "interface\menu\sprtex\arrowdn_h.dtx"
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <255.0, 113.0, 113.0>
DisabledColor		= <180.0, 180.0, 200.0>


/************************************************************************
**
**	             ----------[Generic Menu Layout]----------
**
**  The GenericMenu definition declares default Attributes that are
**  shared by all in-game Menus, but can be overridden by specific
**  Menus.
**  
**  Same deal as the previous definition; pretty much only applies to
**  the Pause Menu, and whatever Attributes aren't might not be used at
**  all. Further clarification may be needed.
**  TODO further clarification (LDSO)
**
**  Size (Dimension) (KAMod)
**      - Currently unidentified function, but definitely used.
**      - TODO what is this? (LDSO)
**  FontSize (Integer) (KAMod)
**      - The font height of the buttons on the body of the Pause Menu.
**  TitleSize (Integer) (KAMod)
**      - The font height of any title text on the Pause Menu.
**      Potentially unused.
**      - TODO verify
**  Indent (Dimension)
**      - The indent, both horizontal and vertical, of the buttons on
**      the body of the Pause Menu.
**  SelectedColor (Vector),
**  NonSelectedColor (Vector),
**  DisabledColor (Vector)
**      - The text color of the buttons on the body of the Pause Menu,
**      when highlighted, not highlighted, and disabled, respectively.
**      - The disabled color is unused by proxy, since there aren't any
**      Pause Menu buttons that are ever disabled.
*/
[GenericMenu]
Size				= (240, 200)
FontSize			= 20
TitleSize			= 25
Indent				= (12, 28)
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <0.0, 0.0, 0.0>
DisabledColor		= <95.0, 95.0, 95.0>


/************************************************************************
**
**	             ----------[Custom Menu Layouts]----------
**
**  The custom Menu definitions declare Attributes for specific Menus
**  that may override Attributes set under GenericMenu.
**
**  TODO There's only one Menu here... is it even used? I know
**  ScreenPlayer is for the Player Setup Screen, but I have NO idea what
**  this is. (LDSO)
*/

/*  -----[Unknown Menu "MenuPlayer"]-----
**  Currently unidentified.
**
**  Size (Dimension)
**  NameWidth (Integer)
**  LevelWidth (Integer)
**  PopupSize (Dimension)
**  PopupFrame (Path String)
*/
[MenuPlayer]
Size		= (280, 240)
NameWidth	= 90
LevelWidth	= 70
PopupSize	= (200, 160)
PopupFrame	= "interface\menu\sprtex\frame_interlace.dtx"


/************************************************************************
**
**                ----------[Dialog Box Layout]----------
**
**  The DialogBox definition is currently unidentified. Because all
**  spoken lines in TRON 2.0 are provided through subtitles by default,
**  it's not confirmed that these are even used. Awaiting confirmation.
**  TODO what is this exactly? (LDSO)
**  TODO obviously re-test these values. Also why was this not in its
**  own section beforehand?
*/
[DialogBox]
DialogFrame 	= "interface\menu\sprtex\frame_solid.dtx"
DialogFontNum	= 1
DialogFontSize	= 14
OKSelected		= <255.0, 255.0, 255.0>
OKNormal		= <255.0, 113.0, 113.0> // SecurityProtocol
OKDisabled		= <0.0, 75.0, 238.0>
CancelSelected	= <255.0, 255.0, 255.0>
CancelNormal	= <255.0, 113.0, 113.0> // SecurityProtocol
CancelDisabled	= <0.0, 75.0, 238.0>
TextSelected	= <255.0, 255.0, 255.0>
TextNormal		= <255.0, 113.0, 113.0> // SecurityProtocol
TextDisabled	= <0.0, 75.0, 238.0>
EditSelected	= <255.0, 255.0, 255.0>
EditNormal		= <255.0, 113.0, 113.0> // SecurityProtocol
EditDisabled	= <0.0, 75.0, 238.0>


/************************************************************************
**
**	                ----------[Message Queues]----------
**
**  The MessageQueue definitions specify data for various message queues
**  in the game.
**
**  Incomplete documentation: These are for chat windows and other text
**  areas that require message history to be stored, I think. Chat tests
**  will be performed at a later date.
**
**	MessageTime (Float)
**		How long in seconds that messages are displayed.
**		(not including fade out time)
**	MessageFade (Float)
**		How long in seconds that messages are it takes for a message to fade.
**		(after normal message time)
**	MaxMessages (int)
**		How many messages may appear on screen at one time.
**	MaxHistory (int)
**		How many old messages are stored.
*/

[ChatMessageQueue]
Font			    = 0
FontSize		    = 14
TextColor		    = <255.0, 255.0, 255.0>
ChatColor		    = <255.0, 255.0, 255.0>
TeamChatColor	    = <0.0, 255.0, 255.0>
CheatColor		    = <255.0, 0.0, 255.0>
TransColor		    = <0.0, 255.0, 0.0>
MultiAnnounceColor	= <255.0, 255.0, 90.0>
BasePos 		    = (10, 42)
Width			    = 600
MessageTime 	    = 7.5
MessageFade 	    = 1.5
MaxMessages 	    = 3
MaxHistory		    = 3

[MultiChatMessageQueue]
Font			    = 0
FontSize		    = 14
TextColor		    = <255.0, 255.0, 255.0>
ChatColor		    = <255.0, 255.0, 255.0>
TeamChatColor	    = <0.0, 255.0, 255.0>
CheatColor		    = <255.0, 0.0, 255.0>
TransColor		    = <0.0, 255.0, 0.0>
MultiAnnounceColor	= <255.0, 255.0, 90.0>
BasePos 		    = (24,200)
Width			    = 600
MessageTime 	    = 7.5
MessageFade 	    = 1.5
MaxMessages 	    = 3
MaxHistory		    = 7

[PickupMessageQueue]
Font		= 0
FontSize	= 12
IconSize	= 24
TextColor	= <255.0, 255.0, 255.0>
BasePos 	= (320, 42)
Width		= 240
MessageTime = 5
MessageFade = 1
MaxMessages = 3
Justify		= 1

[SearchMessageQueue]
Font		= 0
FontSize	= 12
IconSize	= 24
TextColor	= <255.0, 255.0, 255.0>
BasePos 	= (200, 400)
Width		= 240
MessageTime = 5
MessageFade = 1
MaxMessages = 5

[RewardMessageQueue]
Font		= 1
FontSize	= 12
TextColor	= <255.0, 255.0, 255.0>
BasePos	    = (400, 240)
Width		= 400
MessageTime	= 7.5
MessageFade	= 1.5
MaxMessages	= 5
MaxHistory	= 10

[AnnouncementMessageQueue]
BasePos 	= (320, 80)
Font		= 0
FontSize	= 14
MessageTime = 4
MessageFade = 0.5
Width		= 400
MaxMessages = 2
MaxHistory	= 2
TextColor	= <90.0, 199.0, 255.0>

[MultiAnnouncementMessageQueue]
BasePos 	= (320 ,240)
Font		= 0
FontSize	= 22
MessageTime = 10
MessageFade = 1.5
Width		= 400
MaxMessages = 5
MaxHistory	= 2
TextColor	= <90.0, 199.0, 255.0>

[Transmission]
Font			= 0
FontSize		= 27
TextColor		= <255.0, 255.0, 90.0>
BasePos 		= (320, 160)
Width			= 400
Time			= 4
FadeTime		= 1
DiscMPFont		= 0
DiscMPFontSize	= 27
DiscMPTextColor	= <255.0, 255.0, 90.0>
DiscMPBasePos	= (320, 160)
DiscMPWidth		= 400
DiscMPTime		= 4
DiscMPFadeTime	= 1

[ChatInput]
Font			= 0
FontSize		= 12
Color			= <255.0, 255.0, 255.0>
BasePos 		= (95, 328)


/************************************************************************
**
**	             ----------[Mission Text Layout]----------
**
**  The MissionText definition sets the Attributes that manage the
**  "system log"-esque typed text in the upper-left quadrant of the
**  screen.
**
**  Font (Integer),
**  FontSize (Integer) (KAMod),
**  TextColor (Vector)
**      - The font ID, font height, and default color of the mission 
**      text.
**	NumLines (Integer)
**		- The amount of text lines that can be typed out before playing
**      the ScrollSound, since mission text doesn't actually scroll.
**	LetterDelay (Float)
**		- The time, in seconds, to wait between each typed letter of the
**      mission text.
**	LineScrollTime (Float)
**		- The time, in seconds, to wait between each typed line of the
**      mission text.
**	FadeDelay (Float)
**		- The time, in seconds, to wait before fading out completed
**      mission text scripts.
**	FadeTime (Float)
**		- The time, in seconds, reserved to fade out the mission text.
**	Pos (2D Point)
**		- The upper-left origin position of the mission text.
**	TypeSound (Path String)
**		- The sound effect played while a line is being typed.
**	ScrollSound (Path String)
**		- The sound effect played when a text line has finished being
**      typed.
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  LineDelay (Float)
*/
[MissionText]
Font			= 0
FontSize		= 12
TextColor		= <255.0, 155.0, 0.0>
NumLines		= 1
LetterDelay 	= 0.015
//LineDelay		= 0.2
LineScrollTime	= 0.25
FadeDelay		= 3.0
FadeTime		= 2.0
Pos 			= (100, 117)
TypeSound		= "interface\snd\type.wav"
ScrollSound 	= "interface\snd\enter.wav"


/************************************************************************
**
**	                ----------[Subtitle Layout]----------
**
**  The Subtitle definition sets Attributes pertaining to the subtitles
**  in the game. (Surprising, huh?)
**
**  Font (Integer),
**  FontSize (Integer)
**      - The font ID and font height of the subtitle text.
**      - For some reason, when these Settings were first added, their
**      names were all lowercase. The liberty has been taken to correct
**      that oversight, for the OCD-afflicted around the world. The game
**      does not appear to care, thankfully.
**	NumLines (Integer)
**		- The amount of text lines that the screen can display at once.
**	LineScrollTime (Float)
**		- The amount of time, in seconds, taken to scroll a single line,
**      for the longer subtitles that require it.
**	Width (Integer),
**	Pos (2D Point)
**      - The width and upper-left origin position of the subtitle text
**      displayed in cutscenes or other cinematics.
**	FullScreenWidth (Integer),
**	FullScreenPos (2D Point)
**      - The width and upper-left origin position of the subtitle text
**      displayed during gameplay. 
*/
[Subtitle]
font			= 0
fontsize		= 16
NumLines		= 3
LineScrollTime	= 0.5
Width			= 256
Pos 			= (200, 300)
FullScreenWidth = 256
FullScreenPos	= (200, 270)
TextColor		= <255.0, 255.0, 255.0>


/************************************************************************
**
**                  ----------[Scores Layout]----------
**
**  The Scores definitions assign Attributes pertaining to score
**  displays in Multiplayer. By default, the window is accessed by
**  holding the Tab key.
**
**  Note that although all of the below Categories use the same
**  Attributes, the Scores definition is NOT considered a list of
**  defaults. It is not known what the Scores Category is even for
**  (yet).
**
**  ---------------------------------------------------------------------
**  Documentation of this section is on hold until I can drag another
**  poor soul to sit in a multiplayer server and play disc games so I
**  can actually get into those lobbies and see the score windows...
**  ---------------------------------------------------------------------
**
**  TODO confirm that these never appear in singleplayer
*/

/*  -----[Scores Window (unknown usage)]-----
**  TODO what is this? (LDSO)
*/
[Scores]
Font			    = 0
FontSize		    = 14
BasePos			    = (32, 64)
PlayerTextColor	    = <255.0, 255.0, 255.0>
TextColor		    = <192.0, 192.0, 192.0>
ElimTextColor	    = <96.0, 96.0, 96.0>
ElimPlayerTextColor = <128.0, 128.0, 128.0>
FrameColor		    = <0.0, 64.0, 240.0>
FrameAlpha		    = 0.50

/*  -----[Scores Window for Multiplayer Light Cycle Modes]-----  */
[MultiplayerLightCycleScores]
Font			            = 0
FontSize		            = 14
BasePos			            = (190, 85)
PlayerTextColor	            = <255.0, 255.0, 255.0>
TextColor		            = <192.0, 192.0, 192.0>
ElimTextColor	            = <96.0, 96.0, 96.0>
ElimPlayerTextColor         = <128.0, 128.0, 128.0>
FrameColor		            = <0.0, 64.0, 240.0>
FrameAlpha		            = 0.50
FrameWidth		            = 275
FrameVBorder	            = 8
FrameHBorder	            = 8 // not hooked up
BorderSize		            = 16
InfoColumn1			        = 135
InfoColumn2			        = 130
InfoColumn3			        = 130
ScoreColumn1		        = 135
ScoreColumn2		        = 85
ScoreColumn3		        = 85
ScoreColumn4		        = 85
ScoreColumn5		        = 85
BackroundFrameColor         = <15.0, 11.0, 84.0>
BackroundFrameAlpha         = 0.50
BackroundBorderFrameColor   = <73.0, 157.0, 252.0>
BackroundBorderFrameAlpha   = 1.0
BackroundBorderFrameSize    = 2

/*  -----[Scores Window for Disc Arena/Disc Tournament]-----  */
[DiscScores]
Font			            = 0
FontSize		            = 12
BasePos		                = (32, 64)
KeyPos		                = (32, 400)
TextColor		            = <255.0, 255.0, 255.0>
ElimTextColor	            = <128.0, 128.0, 128.0>
FrameColor		            = <0.0, 64.0, 240.0>
FrameAlpha		            = 0.50
BackroundFrameColor         = <15.0, 11.0, 84.0>
BackroundFrameAlpha         = 0.50
BackroundBorderFrameColor   = <73.0, 157.0, 252.0>
BackroundBorderFrameAlpha   = 1.0
BackroundBorderFrameSize    = 2

[DiscMatches]
Font		= 0
FontSize	= 14
BasePos		= (100, 150)
TextColor	= <192.0, 192.0, 192.0>
FrameColor	= <0.0, 64.0, 240.0>
FrameAlpha	= 0.50


/************************************************************************
**
**	               ----------[Screen Overlays]----------
**
**  The Overlay definition assigns the set of overlays that the game can
**  reference at any time. In the case of TRON 2.0, this only concerns
**  the scopes for the LOL and Triangulate subroutines.
**
**  Documentation is awaiting further testing.
**  TODO this
**
**  A comment will be placed above each overlay Category to identify
**  it. Overlays 0 and 1 define the LOL & Triangulate scopes, and
**  Overlays 6 through 14 are all derivatives of those first two.
**
**  Overlay Categories 2 through 5 can be safely assumed to be unused in
**  TRON 2.0, likely left over from NOLF or a different Monolith game.
**
**	0 = LOL Scope
**	1 = Triangulate Scope
**	2 = "Super Soldier Mask" (Unused)
**	3 = Static (Unused)
**	4 = Camera (Unused)
**	5 = Camera Target (Unused)
**	6 = LOL Zoom In
**	7 = LOL Zoom Out
**	8 = LOL Loop
**	9 = Triangulate Zoom In
**	10 = Triangulate Zoom Out
**	11 = Triangulate Loop
**	12 = Corrupt Triangulate Zoom in
**	13 = Corrupt Triangulate Zoom out
**	14 = Corrupt Triangulate Loop
**
**  Scale# (Float)
**  Sprite# (Path String)
**  Model# (Path String)
**  Skin# (Path String)
**  Anim# (String)
**  Renderstyle# (Path String)
**  Alpha# (Float)
*/
[Overlay]
/*  -----[0: LOL Scope]-----  */
Scale0		= 0.15
Sprite0		= ""
//Model0	= "Interface\hud\Spr\zoomout.ltb"
//Skin0		= "Interface\hud\Spr\zoomout.dtx"

/*  -----[1: Triangulate Scope]-----  */
Scale1	= 0.25
Sprite1	= ""

/*  -----[6: LOL Zoom In]-----  */
Scale6			= 0.315
Model6			= "Interface\hud\screen_sniper.ltb"
Skin6			= "Interface\hud\screen_sniper.dtx"
Anim6			= "zoomin"
Renderstyle6	= "RS\Alpha_Additive_wglow.ltb"
Alpha6			= 0.8

/*  -----[7: LOL Zoom Out]-----  */
Scale7			= 0.315
Model7			= "Interface\hud\screen_sniper.ltb"
Skin7			= "Interface\hud\screen_sniper.dtx"
Anim7			= "zoomout"
Renderstyle7	= "RS\Alpha_Additive_wglow.ltb"
Alpha7			= 0.8

/*  -----[8: LOL Loop]-----  */
Scale8			= 0.315
Model8			= "Interface\hud\screen_sniper.ltb"
Skin8			= "Interface\hud\screen_sniper.dtx"
Anim8			= "loop"
Renderstyle8	= "RS\Alpha_Additive_wglow.ltb"
Alpha8			= 0.8

/*  -----[9: Triangulate Zoom In]-----  */
Scale9			= 0.315
Model9			= "Interface\hud\screen_triangulate.ltb"
Skin9			= "Interface\hud\screen_triangulate.dtx"
Anim9			= "zoomin"
Renderstyle9	= "RS\Alpha_Additive_wglow.ltb"
Alpha9			= 0.8

/*  -----[10: Triangulate Zoom Out]-----  */
Scale10			= 0.315
Model10			= "Interface\hud\screen_triangulate.ltb"
Skin10			= "Interface\hud\screen_triangulate.dtx"
Anim10			= "zoomout"
Renderstyle10	= "RS\Alpha_Additive_wglow.ltb"
Alpha10 		= 0.8

/*  -----[11: Triangulate Loop]-----  */
Scale11			= 0.315
Model11			= "Interface\hud\screen_triangulate.ltb"
Skin11			= "Interface\hud\screen_triangulate.dtx"
Anim11			= "loop"
Renderstyle11	= "RS\Alpha_Additive_wglow.ltb"
Alpha11 		= 0.8

/*  -----[12: Corrupt Triangulate Zoom In]-----  */
Scale12			= 0.315
Model12			= "Interface\hud\screen_triangulate.ltb"
Skin12			= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim12			= "zoomin"
Renderstyle12	= "RS\Alpha_Additive_wglow.ltb"
Alpha12			= 0.8

/*  -----[13: Corrupt Triangulate Zoom Out]----- */
Scale13			= 0.315
Model13			= "Interface\hud\screen_triangulate.ltb"
Skin13			= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim13			= "zoomout"
Renderstyle13	= "RS\Alpha_Additive_wglow.ltb"
Alpha13			= 0.8

/*  -----[14: Corrupt Triangulate Loop]-----  */
Scale14			= 0.315
Model14			= "Interface\hud\screen_triangulate.ltb"
Skin14			= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim14			= "loop"
Renderstyle14	= "RS\Alpha_Additive_wglow.ltb"
Alpha14			= 0.8


/************************************************************************
**
**	             ----------[Menu Piece Layout]----------
**
**  The MenuPiece definitions assign Attributes that create, as the name
**  implies, Menu Pieces, which (assumedly) are neat little packages of
**  textures/models that make animated Menu elements easier to
**  implement.
**
**  It's likely most of these have references in the source code, so it
**  is strongly not recommended to change any existing Menu Pieces.
**
**  TODO tips for a clearer definition? (LDSO)
**  TODO maybe give these all names? if i figure out what these are
**
**	Name (String)
**		- The programmer-friendly name for the Menu Piece.
**	Model (Path String)
**		- The model used for the Menu Piece. A Menu Piece cannot have
**      multiple model definitions.
**	Skin# (Path String)
**		- The skin used for the Menu Piece. A Menu Piece can have
**      multiple skin definitions.
**	RenderStyle# (Path String)
**		- The render style used for the Menu Piece. A Menu Piece can
**      have multiple render style definitions.
**	Pos (3D Point)
**      - The origin position of the Menu Piece. 
**      - Monolith says this Attribute must not be used if the Menu
**      Piece has a ParentPiece defined, but most of the Menu Pieces
**      below seem to ignore this supposed rule, so...
**	IntroAnim (String)
**		- The name of the intro animation that the Menu Piece will use.
**		- If there is an intro animation, the game attempts to play that
**      animation, and then play the loop animation. If a LoopAnim is
**      specified, the game will attempt to play that specific animation
**      rather than the animation called "loop".
**	LoopAnim (String)
**		- The name of the loop animation that the Menu Piece will use.
**      If a Menu Piece does not have this Attribute, it defaults to
**      using the LoopAnim named "loop".
**      - Fun fact: Monolith's original documentation states that if you
**      want to play a specific loop animation, just declare it in this
**      field, and quote, "all sorts of happiness will come to you".
**	ParentPiece (String)
**	    - The name of the parent piece that the Menu Piece will attach
**      itself to. Leave out this Attribute if none exists.
**	ParentSocket (String)
**		- The name of the parent socket that the Menu Piece will attach
**      itself to. Leave out this Attribute if none exists.
**      - TODO what's a socket? (LDSO)
**	Layer (Integer)
**		- The layer on which this model exists, for rendering order 
**      purposes (some games also refer to this as the "Z Layer").
**      Elements with lower numbers are rendered first, and behind 
**      whichever layers come after, regardless of their actual position 
**      in the Menu.
*/

[MenuPiece0]
Name			= "sub_hub"
Model		    = "Interface\Subroutines\models\subroutine_hub.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
Skin1			= "Interface\Subroutines\skins\subhub_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_Fullbright_blocker.ltb"
Pos 			= <0.0, 0.0, 308.0>
IntroAnim		= "show"
Layer			= 30

[MenuPiece1]
Name			= "servername"
Model			= "Interface\Subroutines\models\servername.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_commands.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
//Pos 		    = <0.0, 0.0, 321.0>
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
IntroAnim		= "show"
Layer			= 30

[MenuPiece2]
Name			= "sub_commands"
Model			= "Interface\Subroutines\models\commands.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_commands.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		    = <0.0, 0.0, 321.0>
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
IntroAnim		= "show"
Layer			= 10

[MenuPiece3]
Name			= "browser_top"
Model			= "Interface\Subroutines\models\browser_top.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 300.0>
LoopAnim		= "hid"
//ParentPiece	= "sub_hub"
//ParentSocket	= "skt_hub"
Layer			= 10

[MenuPiece4]
Name			= "browser_left"
Model			= "Interface\Subroutines\models\browser_left.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 300.0>
LoopAnim		= "hid"
Layer			= 10

[MenuPiece5]
Name			= "browser_right"
Model			= "Interface\Subroutines\models\browser_right.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 300.0>
LoopAnim		= "hid"
Layer			= 10

[MenuPiece6]
Name			= "buildpoints_bar"
Model			= "Interface\Subroutines\models\buildpoints_bar.ltb"
Skin0			= "Interface\Subroutines\skins\buildpoints_bar.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
//Pos 		    = <0.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
Layer			= 40

[MenuPiece7]
Name			= "rating1_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_1"
Layer			= 50

[MenuPiece8]
Name			= "rating1_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_1"
Layer			= 40

[MenuPiece9]
Name			= "rating1_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <-72.0, 53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_1l"
Layer			= 40

[MenuPiece10]
Name			= "rating1_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <72.0, 53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_1r"
Layer			= 40

[MenuPiece11]
Name			= "rating2_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_2"
Layer			= 50

[MenuPiece12]
Name			= "rating2_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_2"
Layer			= 40

[MenuPiece13]
Name			= "rating2_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <-72.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_2l"
Layer			= 40

[MenuPiece14]
Name			= "rating2_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <72.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_2r"
Layer			= 40

[MenuPiece15]
Name			= "rating3_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_3"
Layer			= 50

[MenuPiece16]
Name			= "rating3_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_3"
Layer			= 40

[MenuPiece17]
Name			= "rating3_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <-72.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_3l"
Layer			= 40

[MenuPiece18]
Name			= "rating3_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <72.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_3r"
Layer			= 40

[MenuPiece19]
Name			= "rating4_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, -26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_4"
Layer			= 50

[MenuPiece20]
Name			= "rating4_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, -26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_4"
Layer			= 40

[MenuPiece21]
Name			= "rating4_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <-72.0, -26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_4l"
Layer			= 40

[MenuPiece22]
Name			= "rating4_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <72.0, -26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_4r"
Layer			= 40

[MenuPiece23]
Name			= "rating5_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, -53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_5"
Layer			= 50

[MenuPiece24]
Name			= "rating5_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, -53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbar_5"
Layer			= 40

[MenuPiece25]
Name			= "rating5_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <-72.0, -53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_5l"
Layer			= 40

[MenuPiece26]
Name			= "rating5_button_right"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <72.0, -53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_ratbut_5r"
Layer			= 40

[MenuPiece27]
Name			= "lib_hi"
Model			= "Interface\Subroutines\models\seg_lib.ltb"
Skin0			= "Interface\Subroutines\skins\sys_hl.dtx"
RenderStyle0	= "RS\Alpha_Additive_fullbright.ltb"
LoopAnim		= "hl"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 20

[MenuPiece28]
Name			= "sys_hi"
Model			= "Interface\Subroutines\models\seg_sys_hl.ltb"
Skin0			= "Interface\Subroutines\skins\sys_hl.dtx"
RenderStyle0	= "RS\Alpha_Additive_fullbright.ltb"
LoopAnim		= "hl"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece29]
Name			= "sys_conflict"
Model			= "Interface\Subroutines\models\seg_sys_conflict.ltb"
Skin0			= "Interface\Subroutines\skins\sys_conflict.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece30]
Name			= "sys_alpha"
Model			= "Interface\Subroutines\models\seg_sys_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\sys_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece31]
Name			= "sys_beta"
Model			= "Interface\Subroutines\models\seg_sys_beta.ltb"
Skin0			= "Interface\Subroutines\skins\sys_beta.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece32]
Name			= "sys_gold"
Model			= "Interface\Subroutines\models\seg_sys_gold.ltb"
Skin0			= "Interface\Subroutines\skins\sys_gold.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece33]
Name			= "sys_badblock"
Model			= "Interface\Subroutines\icons\models\bad_block.ltb"
Skin0			= "Interface\Subroutines\icons\skins\bad_block.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 80

[MenuPiece34]
Name			= "sys_basecode"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 			= <0.0, 0.0, 319.9>
Layer			= 50

[MenuPiece35]
Name			= "sys_basecode_left"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece36]
Name			= "sys_basecode_middle"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece37]
Name			= "sys_basecode_right"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece38]
Name			= "optimizer"
Model			= "Props\models\optimizer.ltb"
Skin0			= "interface\subroutines\skins\optimizer_subroutinesocket.dtx"
Skin1			= "Props\skins\optimizer_2.dtx"
RenderStyle0	= "RS\menu_optimizer.ltb"
Pos 			= <0.0, 0.0, 0.0>
LoopAnim		= "liveloop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_opt"
Layer			= 40

[MenuPiece39]
Name			= "proc_progress"
Model			= "Interface\Subroutines\models\proc_progress.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
RenderStyle0	= "RS\Alpha_Additive_NoCulling_readz.ltb"
LoopAnim		= "progress"
Layer			= 51

[MenuPiece40]
Name			= "proc_left_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_port_waiting.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_add_1"
Layer			= 40

[MenuPiece41]
Name			= "proc_right_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_disinfect_waiting.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_add_2"
Layer			= 40

[MenuPiece42]
Name			= "proc_bottom_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_defrag_waiting.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_add_3"
Layer			= 40

[MenuPiece43]
Name			= "optring_alpha"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece44]
Name			= "optring_beta"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_beta.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece45]
Name			= "optring_gold"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_gold.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece46]
Name			= "foreign_sub"
Model			= "Interface\Subroutines\icons\models\foreign.ltb"
Skin0			= "Interface\Subroutines\icons\skins\foreign.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
layer			= 80

[MenuPiece47]
Name			= "foreign_ring"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece48]
Name			= "proc_working"
Model			= "Interface\Subroutines\models\proc_working.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "working"
Layer			= 90

[MenuPiece49]
Name			= "sys_alpha_hl"
Model			= "Interface\Subroutines\models\seg_sys_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\sys_alpha_hl.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece50]
Name			= "sys_beta_hl"
Model			= "Interface\Subroutines\models\seg_sys_beta.ltb"
Skin0			= "Interface\Subroutines\skins\sys_beta_hl.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece51]
Name			= "sys_gold_hl"
Model			= "Interface\Subroutines\models\seg_sys_gold.ltb"
Skin0			= "Interface\Subroutines\skins\sys_gold_hl.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece52]
Name			= "ratings_bar_surge"
Model			= "Interface\Subroutines\models\ratings_bar_surge.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_bar_surge.dtx"
RenderStyle0	= "RS\Alpha_Additive_wglow.ltb"
LoopAnim		= "loop"
//ParentPiece	= "sub_hub"
//ParentSocket	= "skt_ratbar_5"
Layer			= 60

[MenuPiece53]
Name			= "corruption_alpha"
Model			= "Interface\Subroutines\models\corruption_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece54]
Name			= "corruption_beta"
Model			= "Interface\Subroutines\models\corruption_beta.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece55]
Name			= "corruption_gold"
Model			= "Interface\Subroutines\models\corruption_gold.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece56]
Name			= "sub_hub_bg"
Model		    = "Interface\Subroutines\models\subroutine_hub_bg.ltb"
Skin0			= "Interface\Subroutines\skins\subhub_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		    = <0.0, 0.0, 321.0>
//ParentPiece	= "sub_hub"
//ParentSocket	= "skt_hub"
IntroAnim		= "show"
LoopAnim		= "shown"
Layer			= 35

[MenuPiece57]
Name			= "buildpoints_bar_fixed"
Model			= "Interface\Subroutines\models\buildpoints_bar_bg.ltb"
Skin0			= "Interface\Subroutines\skins\buildpoints_bar_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
//Pos 		    = <0.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
Layer			= 35

[MenuPiece58]
Name			= "corruption_lib"
Model			= "Interface\Subroutines\icons\models\corruption_lib.ltb"
Skin0			= "Interface\Subroutines\icons\skins\corruption_lib.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 90

[MenuPiece59]
Name			= "optimizer_bg"
Model			= "Interface\Subroutines\models\optimizer_bg.ltb"
Skin0			= "Interface\Subroutines\skins\optimizer_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
Layer			= 37

[MenuPiece60]
Name			= "browser_outline_top"
Model			= "Interface\Subroutines\models\browser_top.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_hub"
Layer			= 10

[MenuPiece61]
Name			= "browser_outline_left"
Model			= "Interface\Subroutines\models\browser_left.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
Layer			= 10

[MenuPiece62]
Name			= "browser_outline_right"
Model			= "Interface\Subroutines\models\browser_right.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
Layer			= 10

[MenuPiece63]
Name			= "dead_optimizer"
Model			= "Props\models\optimizer.ltb"
Skin0			= "Props\skins\optimizer_off1.dtx"
Skin1			= "Props\skins\optimizer_off2.dtx"
RenderStyle0	= "RS\menu_optimizer.ltb"
Pos 			= <0.0, 0.0, 0.0>
LoopAnim		= "liveloop"
ParentPiece		= "sub_hub"
ParentSocket	= "skt_opt"
Layer			= 40


/************************************************************************
**
**	           ----------[Screen Character Layout]----------
**
**  The Character element has one purpose: to display a spinning view of
**  the currently equipped Player & Light Cycle model.
**
**  In TRON 2.0, because these elements are used exclusively in player
**  customization Screens, they need to be able to dynamically change to
**  show whatever model or skin the player selects. They also need to be
**  spinning. As a result, in both Categories, pretty much all of these
**  Attributes (except for "Name" and "Pos") are just placeholders that
**  the game will override internally when they are loaded.
**
**  Name (String)
**      - The name of the Character element.
**  Model (Path String)
**      - The model to use for the Character element. Must be in .LTB
**      format.
**  Skin# (Path String)
**      - The texture to use for the skin of the Character element. Must
**      be in .DTX format.
**  Pos (3D Point)
**      - The origin position of the Character element.
**  Scale (Float)
**      - The initial scale of the Character element.
**  Rotation (Float)
**      - The initial rotation of the Character element, on the X axis.
*/

/*  -----[0: Multiplayer Player Setup Character]-----  */
[Character0]
Name		= "MPBase"
Model		= "chars\models\hero_action.ltb"
Skin0		= "chars\skins\CateAction.dtx"
Pos			= <0.0, -1.0, 20.0>
Scale		= 0.15
Rotation	= 0.0

/*  -----[1: Single Player Light Cycles Character]-----  */
[Character1]
Name		= "LightCycleBase"
Model		= "Props\Models\LightCycle.ltb"
Skin0		= "FX\Tex\specular.dtx"
Pos			= <-4.0, -1.0, 10.0>
Scale		= 0.075
Rotation	= 90.0


/************************************************************************
**
**	            ----------[Screen Lights Layout]----------
**
**  The Light definitions manage Attributes that create light objects
**  used in Screens. Because pretty much all Screens are technically
**  rendered as 3D spaces, any 3D models that render inside that Screen
**  will need a Light in order to display as they normally would ingame. 
**  The only major exceptions are Loading Screens, which are entirely
**  made up of 2D elements.
**
**  Pretty much all Screens in TRON 2.0 use the first definition Light0
**  as its Light. Light1 is used exclusively by the Player Setup Screen,
**  and Light2 is completely unused.
**
**  Name (String)
**      - The programmer-friendly name for the light object.
**  Pos (3D Point)
**      - The origin position for the light object.
**  Color (Vector)
**      - The color of the light itself.
**  Radius (Float)
**      - The effective distance of the light from its origin point.
*/

/*  -----[0: The Light Almost Every Screen Uses]-----  */
[Light0]
Name	= "Main0"
Pos 	= <0.0, 0.0, -20.0>
Color	= <255.0, 255.0, 255.0>
Radius	= 8000.0

/*  -----[1: The Light Only Used By The Multiplayer Player Setup Screen]-----
**  TODO figure out what difference that position change makes
*/
[Light1]
Name	= "test"
Pos 	= <0.0, 100.0, -100.0>
Color	= <255.0, 255.0, 255.0>
Radius	= 8000.0

/*  -----[2: The Light Used By Absolutely Nothing]-----  */
[Light2]
Name	= "test"
Pos 	= <100.0, -100.0, -100.0>
Color	= <255.0, 255.0, 255.0>
Radius	= 8000.0


/************************************************************************
**
**                ----------[Screen FX Layout]----------
**
**  The FX definitions assign Attributes that create FX objects used in
**  Screens. It's not known where the effects themselves originate when
**  referenced here.
**
**  Most of these FX are used in Screen transitions, as defined in the
**  "Screen Transition Declarations" section of this File.
**
**  TODO find out where the FX origin files are? Couldn't find anything
**  in FX.TXT (LDSO)
**  TODO maybe give names to each FX, if possible
**
**  Name (String)
**      - The programmer-friendly name for the FX object.
**  FXName (String)
**      - The name of the FX to display.
**  Pos (3D Point)
**      - The origin position of the FX object.
**  Loop (Boolean Integer)
**      - Specifies whether or not the FX will loop when displayed.
**      0: The FX will not loop.
**      1: The FX will loop indefinitely.
*/

[FX0]
Name	= "MainBackground"
FXName	= "TestBackFX"
Pos 	= <0.0, 0.0, 300.0>
Loop	= 1

[FX1]
Name	= "Burn"
FXName	= "Test_BurningFX"
Pos 	= <0.0, -15.0, 0.0>
Loop	= 0

[FX2]
Name	= "MENU_main_intro"
FXName	= "MENU_main_intro_bar"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 0

[FX3]
Name	= "MENU_main_shortin"
FXName	= "MENU_main_loop"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX4]
Name	= "MENU_main_loop"
FXName	= "MENU_main_loop"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX5]
Name	= "SUBS_subroutine_intro"
FXName	= "SUBS_subroutine_introa"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX6]
Name	= "SUBS_subroutine_loop"
FXName	= "SUBS_subroutine_loop"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 1

[FX7]
Name	= "MENU_single_intro"
FXName	= "MENU_single_intro"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 0

[FX8]
Name	= "MENU_single_shortin"
FXName	= "MENU_single_intro"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 0

[FX9]
Name	= "MENU_single_loop"
FXName	= "MENU_single_loop"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX10]
Name	= "MENU_single_main"
FXName	= "MENU_single_main"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX11]
Name	= "MENU_blankFX_700"
FXName	= "MENU_blankFX_700"
Pos 	= <0.0, 0.0, 20.0>
Loop	= 1

[FX12]
Name	= "MENU_multi_intro"
FXName	= "MENU_multi_intro"
Pos 	= <0.0, 0.0, 20.0>
Loop	= 1

[FX13]
Name	= "MENU_multi_loop"
FXName	= "MENU_multi_loop"
Pos 	= <0.0, 0.0, 20.0>
Loop	= 1

[FX14]
Name	= "MENU_multi_main"
FXName	= "MENU_multi_main"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX15]
Name	= "MENU_bgloop"
FXName	= "MENU_bgloop"
Pos 	= <0.0, 0.0, 25.0>
Loop	= 1

[FX16]
Name	= "MENU_options_intro"
FXName	= "MENU_options_intro"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX17]
Name	= "MENU_options_loop"
FXName	= "MENU_options_loop"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX18]
Name	= "MENU_options_main"
FXName	= "MENU_options_main"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX19]
Name	= "MENU_profile_intro"
FXName	= "MENU_profile_intro"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX20]
Name	= "MENU_profile_loop"
FXName	= "MENU_profile_loop"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX21]
Name	= "MENU_profile_main"
FXName	= "MENU_profile_main"
Pos 	= <0.0, 1.5, 17.3>
Loop	= 1

[FX22]
Name	= "SUBS_proc_port_waitintro"
FXName	= "SUBS_proc_port_waitintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX23]
Name	= "SUBS_proc_port_workintro"
FXName	= "SUBS_proc_port_workintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX24]
Name	= "SUBS_proc_disinfect_waitintro"
FXName	= "SUBS_proc_disinfect_waitintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX25]
Name	= "SUBS_proc_disinfect_workintro"
FXName	= "SUBS_proc_disinfect_workintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX26]
Name	= "SUBS_proc_defrag_waitintro"
FXName	= "SUBS_proc_defrag_waitintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX27]
Name	= "SUBS_proc_defrag_workintro"
FXName	= "SUBS_proc_defrag_workintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX28]
Name	= "SUBS_proc_shred_waitintro"
FXName	= "SUBS_proc_shred_waitintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX29]
Name	= "SUBS_proc_restore_waitintro"
FXName	= "SUBS_proc_restore_waitintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX30]
Name	= "SUBS_proc_restore_workintro"
FXName	= "SUBS_proc_restore_workintro"
Pos 	= <0.0, 0.0, 320.0>
Loop	= 0

[FX31]
Name    = "LOAD_Test"
FXName  = "LOAD_Test"
Pos     = <0.0, 0.0, 50.0>
Loop    = 1

[FX32]
Name	= "MENU_tronlogo"
FXName	= "MENU_TronLogo"
Pos 	= <18.0, 25.7, 26.0>
Loop	= 1

[FX33]
Name	= "SUBS_optimize"
FXName	= "SUBS_optimize"
Pos 	= <0.0, 0.0, 40.0>
Loop	= 0

[FX34]
Name	= "MENU_main_Jet_throw"
FXName	= "MENU_main_Jet_throw"
Pos 	= <2.75, 0.5, 32.0>
Loop	= 0

[FX35]
Name	= "MENU_KA_logo_dummy"
FXName	= "MENU_KA_logo_dummy"
Pos 	= <35.5, 24.7, 25.0>
Loop	= 0

[FX36]
Name	= "MENU_KA_logo"
FXName	= "MENU_KA_logo"
Pos 	= <35.5, 24.7, 25.0>
Loop	= 1

/*  -----[37: 16x9 Mask]-----
**  Added by the Killer App Mod. Creates black bars at the sides of the
**  screens. Appears only when the Killer App Mod is installed with a
**  16x9 resolution.
*/
[FX37]
Name	= "MENU_169_mask"
FXName	= "MENU_169_mask"
Pos 	= <0.0, 0.0, 323.0>
Loop	= 1


/************************************************************************
**
**	            ----------[Decision Window Layout]----------
**
**  The DecisionWindow definition manages Attributes pertaining to the
**  pop-up window providing gameplay choices to the player. This is the 
**  window that appears at the lower-left corner of the screen, to list
**  things like Archive Bin items.
**
**  TODO does DecisionWindow act as a default for all the numbered
**  definitions that come after it? (LDSO)
**
**	Pos (2D Point)
**		- The currently unidentified origin position of the window.
**      - TODO verify
**	Width (Integer)
**      - The total width of the window.
**  Font (Integer),
**  FontSize (Integer),
**  TextColor (Vector)
**      - The font ID, font height, and color of the window text.
**	TextOffset (2D Point)
**		- The offset of the text from the left side of the window.
**	Frame (Path String)
**		- The texture to use for the window frame.
**  Hollow (Integer),
**  Inscribe (Integer)
**      - Currently unidentified functions, potentially unused.
**      - TODO verify
**	NumColumns (Integer)
**		- The number of columns to use for the window.
**	RemoveItems (Boolean Integer)
**      - Determines whether a row of the window is removed or not when
**      an option is selected.
**		0: All available selections will remain persistent.
**		1: Selected rows will be removed.
**	RemoveWindow (Boolean Integer)
**      - Determines whether the window is closed or not when an option
**      is selected. A window will still be closed if all rows are
**      removed.
**		0: The window will remain open after a selection is made.
**		1: The window will be closed after a selection is made.
*/
[DecisionWindow]
Pos 		= (400, 60)
Font		= 1
FontSize	= 16
Width		= 280
TextOffset	= (8, 4)
TextColor	= <255.0, 255.0, 255.0>
Frame		= "interface\menu\sprtex\frame_solid.dtx"

/*  -----[0: Unknown Unnamed DecisionWindow]-----
**  TODO What is this? (LDSO)
*/
[DecisionWindow0]
Pos 			= (10, 60)
Font			= 1
FontSize		= 16
Width			= 280
TextOffset		= (8, 4)
TextColor		= <255.0, 255.0, 255.0>
Frame			= "interface\menu\sprtex\frame_solid.dtx"
NumColumns		= 1
RemoveItems		= 0
RemoveWindow	= 1

/*  -----[1: Unknown Unnamed DecisionWindow]-----
**  TODO What is this, and why does it have UV values? (LDSO)
*/
[DecisionWindow1]
Pos 			= (10, 60)
Font			= 1
FontSize		= 16
Width			= 240
TextOffset		= (8, 4)
TextColor		= <255.0, 255.0, 255.0>
Frame			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (10, 35, 25, 42)
UVTop			= (28, 35, 152, 42)
UVTopRight		= (166, 35, 164, 42)
UVLeft			= (10, 45, 25, 48)
UVCenter		= (28, 45, 152, 48)
UVRight			= (166, 45, 164, 48)
UVBottomLeft	= (10, 51, 25, 58)
UVBottom		= (28, 51, 152, 58)
UVBottomRight	= (166, 51, 164, 58)
NumColumns		= 1
RemoveItems		= 0
RemoveWindow	= 1

/*  -----[2: Archive Bin Item List]----- 
**  The item list that displays when an Archive Bin contains lootable
**  permissions or subroutines.
*/
[DecisionWindow2]
Pos 			= (10, 60)
Font			= 1
FontSize		= 16
Width			= 460
TextOffset		= (8, 4)
TextColor		= <255.0, 255.0, 255.0>
Frame			= "interface\menu\sprtex\frame_solid.dtx"
NumColumns		= 5
RemoveItems		= 1
RemoveWindow	= 0

/*  -----[3: Unknown "Commerce" DecisionWindow]-----  
**  What is this? (LDSO)
*/
[DecisionWindow3]
Pos 			= (10, 60)
Font			= 1
FontSize		= 16
Width			= 460
TextOffset		= (8, 4)
TextColor		= <255.0, 255.0, 255.0>
Frame			= "interface\menu\sprtex\frame_solid.dtx"
NumColumns		= 5
RemoveItems		= 0
RemoveWindow	= 1

/*  -----[4: Core Dump Item List]-----  
**  The item list that displays when a derezzed enemy has dropped any
**  lootable permissions or subroutines.
*/
[DecisionWindow4]
Pos 			= (10, 60)
Font			= 1
FontSize		= 16
Width			= 460
TextOffset		= (8, 4)
TextColor		= <255.0, 255.0, 255.0>
Frame			= "interface\menu\sprtex\frame_solid.dtx"
NumColumns		= 5
RemoveItems		= 1
RemoveWindow	= 0


/************************************************************************
**
**	              ----------[Screen Transitions]----------
**
**  The Transition Categories manage Attributes that specify transitions
**  between Screens. All transitions take precedence over default Screen
**  FX Attributes, so if a Screen has a transition defined here, any FX
**  Attributes that it would otherwise use are instead ignored in favor
**  of these.
**
**  When a transition occurs, the IntroFX/ShortIntroFX is played first,
**  followed by the LoopFX. If there is no IntroFX/ShortIntroFX, then
**  the LoopFX will begin immediately.
**
**  Although ShortIntroFX Attributes are considered alternatives to
**  IntroFX for Screens that are viewed more frequently, it appears that
**  in TRON 2.0, this is entirely redundant. Pretty much every Screen
**  transition in the Retail release that has both of these Settings
**  defined usually sets them to the same Value.
**  TODO Verify this
**
**  All of the Values in these Categories are Strings that require the 
**  names of the Screens & FX to use. Both must have been defined in
**  their respective sections of this File beforehand - see the "Screen 
**  Layout" section for Screens, and the "Screen FX Layout" section for
**  FX. 
**
**  Any duplicate Transition Categories are ignored, in favor of using
**  the FIRST defined one, and not the last.
**
**  TransitionFrom (String),
**  TransitionTo (String)
**      - The name of the Screen Layout either to transition from or to.
**      Every transition must have at least one of these two Attributes.
**      Transitions with both of these Attributes defined take the
**      highest priority for the transition between those two Screens.
**      - Transitions that have only a "From" Value become the default
**      transition when leaving that Screen.
**      - Transitions that have only a "To" Value become the default
**      transition when entering that Screen, basically replacing any
**      IntroFX that the Screen may have had prior.
**  IntroFX# (String),
**  ShortIntroFX# (String),
**  LoopFX# (String)
**      - The name of each FX to use for its respective function, as
**      detailed above.
*/

/*  -----[0: Any Screen ---> Main Menu Screen]-----  */
[Transition0]
TransitionTo	= "ScreenMain"
IntroFX0		= "MENU_main_intro"
LoopFX0 		= "MENU_main_loop"
IntroFX1		= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= "MENU_KA_logo_dummy"
LoopFX3			= "MENU_KA_logo"
IntroFX4		= "MENU_main_Jet_throw"
LoopFX4			= ""
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[1 & 2: Main Menu Screen <---> Single Player]-----  */
[Transition1]
TransitionFrom	= "ScreenMain"
TransitionTo	= "ScreenSingle"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_single_loop"
IntroFX1		= "MENU_single_intro"
ShortIntroFX1	= "MENU_single_intro"
LoopFX1 		= ""
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4 		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

[Transition2]
TransitionFrom	= "ScreenSingle"
TransitionTo	= "ScreenMain"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "menu_main_loop"
IntroFX1		= "MENU_single_main"
ShortIntroFX1	= "MENU_single_main"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4 		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[3 & 4: Single Player <---> Load Game]-----  */
[Transition3]
TransitionFrom	= "ScreenSingle"
TransitionTo	= "ScreenLoad"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition4]
TransitionFrom	= "ScreenLoad"
TransitionTo	= "ScreenSingle"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[5 & 6: Any Screen <---> Save Game]-----  */
[Transition5]
TransitionTo	= "ScreenSave"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition6]
TransitionFrom	= "ScreenSave"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[7: Any Screen ---> Subroutines]-----  */
[Transition7]
TransitionTo	= "ScreenSubroutines"
IntroFX0		= "SUBS_subroutine_intro"
ShortIntroFX0	= "SUBS_subroutine_intro"
LoopFX0 		= "SUBS_subroutine_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"

/*  -----[8: Any Screen ---> Multiplayer]-----  */
[Transition8]
TransitionTo	= "ScreenMulti"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= "MENU_multi_intro"
ShortIntroFX1	= "MENU_multi_intro"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3			= "MENU_tronlogo"
IntroFX4 		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[9: Multiplayer ---> Main Menu Screen]----- */
[Transition9]
TransitionFrom	= "ScreenMulti"
TransitionTo	= "ScreenMain"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_main_loop"
IntroFX1		= "MENU_multi_main"
ShortIntroFX1	= "MENU_multi_main"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3			= "MENU_tronlogo"
IntroFX4 		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[10 & 11: Any Screen <---> Player Setup]-----  */
[Transition10]
TransitionTo	= "ScreenPlayer"
IntroFX0		= "MENU_multisub_intro"
ShortIntroFX0	= "MENU_multisub_intro"
LoopFX0 		= "MENU_multisub_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition11]
TransitionFrom	= "ScreenPlayer"
IntroFX0		= "MENU_multisub_multi"
ShortIntroFX0	= "MENU_multisub_multi"
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3 		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[12 & 13: Any Screen <---> Join Internet/LAN Game]-----  */
[Transition12]
TransitionTo	= "ScreenJoinServerList"
IntroFX0		= "MENU_multisub_intro"
ShortIntroFX0	= "MENU_multisub_intro"
LoopFX0 		= "MENU_multisub_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition13]
TransitionFrom	= "ScreenJoinServerList"
IntroFX0		= "MENU_multisub_multi"
ShortIntroFX0	= "MENU_multisub_multi"
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[14 & 15: Any Screen <---> Game Over]-----  */
[Transition14]
TransitionTo	= "ScreenFailure"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multisub_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition15]
TransitionFrom	= "ScreenFailure"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[16 & 17: Any Screen <---> Host]-----  */
[Transition16]
TransitionTo	= "ScreenHost"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition17]
TransitionFrom	= "ScreenHost"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[18 & 19: Any Screen <---> Host → Maps Tab]-----
**  Interesting that this tab requires its own transition.
*/
[Transition18]
TransitionTo	= "ScreenHostMaps"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition19]
TransitionFrom	= "ScreenHostMaps"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[20 & 21: Main Menu Screen <---> Options]-----  */
[Transition20]
TransitionFrom	= "ScreenMain"
TransitionTo	= "ScreenOptions"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_options_loop"
IntroFX1		= "MENU_options_intro"
ShortIntroFX1	= "MENU_options_intro"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

[Transition21]
TransitionFrom	= "ScreenOptions"
TransitionTo	= "ScreenMain"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_main_loop"
IntroFX1		= "MENU_options_main"
ShortIntroFX1	= "MENU_options_main"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[22 & 23: Any Screen <---> Display]-----  */
[Transition22]
TransitionTo	= "ScreenDisplay"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition23]
TransitionFrom	= "ScreenDisplay"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[24 & 25: Any Screen <---> Sound]-----  */
[Transition24]
TransitionTo	= "ScreenAudio"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition25]
TransitionFrom	= "ScreenAudio"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[26 & 27: Any Screen <---> Controls]-----  */
[Transition26]
TransitionTo	= "ScreenControls"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition27]
TransitionFrom	= "ScreenControls"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[28 & 29: Any Screen <---> Configure Controls]-----  */
[Transition28]
TransitionTo	= "ScreenConfigure"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition29]
TransitionFrom	= "ScreenConfigure"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[30 & 31: Any Screen <---> Mouse]-----  */
[Transition30]
TransitionTo	= "ScreenMouse"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition31]
TransitionFrom	= "ScreenMouse"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[32 & 33: Any Screen <---> Keyboard]-----  */
[Transition32]
TransitionTo	= "ScreenKeyboard"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition33]
TransitionFrom	= "ScreenKeyboard"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[34 & 35: Any Screen <---> Game (Options)]-----  */
[Transition34]
TransitionTo	= "ScreenGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition35]
TransitionFrom	= "ScreenGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[36 & 37: Any Screen <---> Crosshair]-----  */
[Transition36]
TransitionTo	= "ScreenCrosshair"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition37]
TransitionFrom	= "ScreenCrosshair"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[38 & 39: Any Screen <---> Performance]-----  */
[Transition38]
TransitionTo	= "ScreenPerformance"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition39]
TransitionFrom	= "ScreenPerformance"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[40 & 41: Main Menu Screen <---> Profile]-----  */
[Transition40]
TransitionFrom	= "ScreenMain"
TransitionTo	= "ScreenProfile"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_profile_loop"
IntroFX1		= "MENU_profile_intro"
ShortIntroFX1	= "MENU_profile_intro"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

[Transition41]
TransitionFrom	= "ScreenProfile"
TransitionTo	= "ScreenMain"
IntroFX0		= "MENU_blankFX_700"
ShortIntroFX0	= "MENU_blankFX_700"
LoopFX0 		= "MENU_main_loop"
IntroFX1		= "MENU_profile_main"
ShortIntroFX1	= "MENU_profile_main"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_bgloop"
IntroFX3		= ""
LoopFX3		    = "MENU_tronlogo"
IntroFX4		= ""
LoopFX4			= "MENU_KA_logo"
IntroFX5		= ""
LoopFX5			= "MENU_169_mask"

/*  -----[42 & 43: Any Screen <---> Host → Connection Tab]-----  */
[Transition42]
TransitionTo	= "ScreenHostConnection"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition43]
TransitionFrom	= "ScreenHostConnection"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[44 & 45: Any Screen <---> Join Internet/LAN Game → Server Info Tab]-----  */
[Transition44]
TransitionTo	= "ScreenServerInfo"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multisub_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition45]
TransitionFrom	= "ScreenServerInfo"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[46 & 47: Any Screen <---> Unknown Screen "ScreenSecurity"]-----
**  The original title seems to imply this Screen is accessed via the
**  Multiplayer Screen. But I still cannot find it.
*/
[Transition46]
TransitionTo	= "ScreenSecurity"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition47]
TransitionFrom	= "ScreenSecurity"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[48 & 49: Any Screen <---> Team Select]-----  */
[Transition48]
TransitionTo	= "TeamSelect"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition49]
TransitionFrom	= "TeamSelect"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  From here, you start to see that there are redundant transitions
**  that had been defined before. It's not explained why these appear
**  multiple times, but it's still not recommended to remove anything.
*/
/*  -----[50: Any Menu ---> Load Game]-----  */
[Transition50]
TransitionTo	= "ScreenLoad"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[51: Any Menu ---> Options]-----  */
[Transition51]
TransitionTo	= "ScreenOptions"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_options_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1			= "MENU_bgloop"
IntroFX2		= ""
ShortIntroFX2	= ""
LoopFX2 		= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[52: Any Menu ---> Unused Screen "ScreenTilt"]-----
**  This is the only time ScreenTilt is named. It's definitely an unused
**  screen definition that persisted down here. Monolith referred to it
**  as "Network Security".
*/
[Transition52]
TransitionTo	= "ScreenTilt"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_blankFX_700"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_KA_logo"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_169_mask"

/*  -----[53: Any Menu ---> Team Select]-----  */
[Transition53]
TransitionTo	= "TeamSelect"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_blankFX_700"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_KA_logo"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_169_mask"

/*  -----[54: Any Menu <---> Host]-----  */
[Transition54]
TransitionTo	= "ScreenHostGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition55]
TransitionFrom	= "ScreenHostGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multi_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2		    = "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  Redundancies end here for a while. */
/*  -----[56 & 57: Single Player <---> Light Cycles → Circuit Play Tab]-----  */
[Transition56]
TransitionFrom	= "ScreenSingle"
TransitionTo	= "ScreenLightCycleCircuit"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition57]
TransitionFrom	= "ScreenLightCycleCircuit"
TransitionTo	= "ScreenSingle"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[58 & 59: Light Cycles → Circuit Play Tab <---> Light Cycles Tab]-----  */
[Transition58]
TransitionFrom	= "ScreenLightCycleCircuit"
TransitionTo	= "ScreenLightCyclePlayerConfig"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition59]
TransitionFrom	= "ScreenLightCyclePlayerConfig"
TransitionTo	= "ScreenLightCycleCircuit"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[60 & 61: Light Cycles → Circuit Play Tab <---> Custom Settings Tab]-----  */
[Transition60]
TransitionFrom	= "ScreenLightCycleCircuit"
TransitionTo	= "ScreenLightCycleCustomGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition61]
TransitionFrom	= "ScreenLightCycleCustomGame"
TransitionTo	= "ScreenLightCycleCircuit"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[62 & 63: Light Cycles → Circuit Play Tab <---> Custom Play Tab]-----  */
[Transition62]
TransitionFrom	= "ScreenLightCycleCircuit"
TransitionTo	= "ScreenLightCycleCustomMap"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition63]
TransitionFrom	= "ScreenLightCycleCustomMap"
TransitionTo	= "ScreenLightCycleCircuit"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[64 & 65: Light Cycles → Light Cycles Tab <---> Custom Settings Tab]-----  */
[Transition64]
TransitionFrom	= "ScreenLightCyclePlayerConfig"
TransitionTo	= "ScreenLightCycleCustomGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition65]
TransitionFrom	= "ScreenLightCycleCustomGame"
TransitionTo	= "ScreenLightCyclePlayerConfig"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[66 & 67: Light Cycles → Light Cycles Tab <---> Custom Play Tab]-----  */
[Transition66]
TransitionFrom	= "ScreenLightCyclePlayerConfig"
TransitionTo	= "ScreenLightCycleCustomMap"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition67]
TransitionFrom	= "ScreenLightCycleCustomMap"
TransitionTo	= "ScreenLightCyclePlayerConfig"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[68 & 69: Light Cycles → Custom Settings Tab <---> Custom Play Tab]-----  */
[Transition68]
TransitionFrom	= "ScreenLightCycleCustomGame"
TransitionTo	= "ScreenLightCycleCustomMap"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

[Transition69]
TransitionFrom	= "ScreenLightCycleCustomMap"
TransitionTo	= "ScreenLightCycleCustomGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[70: Any Screen ---> All Loading Screens]-----  */
[Transition70]
TransitionTo	= "LoadScreenDefault"
IntroFX0		= "MENU_main_intro"
LoopFX0 		= "MENU_main_loop"
IntroFX1		= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[71: Unspecified Screen ---> Light Cycles → Circuit Play Tab]-----  
**  TransitionFrom is blank - is this used? (LDSO)
*/
[Transition71]
TransitionFrom	= ""
TransitionTo	= "ScreenLightCycleCircuit"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[72: Any Screen ---> Light Cycle Victory Screen]-----  */
[Transition72]
TransitionTo	= "ScreenLightCycleVictory"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_multisub_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[73: Unspecified Screen ---> Light Cycles → Custom Settings Tab]-----  
**  TransitionFrom is blank - is this used? (LDSO)
*/
[Transition73]
TransitionFrom	= ""
TransitionTo	= "ScreenLightCycleCustomGame"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"

/*  -----[74: Unspecified Screen ---> Light Cycles → Custom Play Tab]-----  
**  TransitionFrom is blank - is this used? (LDSO)
*/
[Transition74]
TransitionFrom	= ""
TransitionTo	= "ScreenLightCycleCustomMap"
IntroFX0		= ""
ShortIntroFX0	= ""
LoopFX0 		= "MENU_single_loop"
IntroFX1		= ""
ShortIntroFX1	= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2		= ""
LoopFX2			= "MENU_tronlogo"
IntroFX3		= ""
LoopFX3			= "MENU_KA_logo"
IntroFX4		= ""
LoopFX4			= "MENU_169_mask"


/************************************************************************
**
**	            ----------[Miscellaneous Layout]----------
**
**  The Miscellaneous definition sets Attributes for interface components
**  either not covered under other definitions, or couldn't be properly
**  implemented in the definition they belong to.
**
**  Because it's difficult to pinpoint where each of these individual
**  Attributes are, documentation here will be completed during a separate
**  round of testing. Until then, it cannot be confirmed whether or not
**  any of them are used or not.
**  TODO incomplete documentation here. Test & KAMod verification.
**  TODO any insight on which of these are used? I got ObjectiveRect and
**  IOCameraRect but can't figure out any of the others (LDSO)
**  
**
**  DialogFrame (Path String)
**      -
**  DialogFontFace (Integer),
**  DialogFontSize (Integer)
**      -
**  FailStringPos (2D Point)
**      - 
**  FailScreenDelay (Float)
**      -
**  DeathDelay (Float)
**      -
**  TintTime (Float)
**      -
**  HUDChooserHColor (Vector)
**      - 
**  CrosshairGapMin (Integer),
**  CrosshairGapMax (Integer)
**      -
**  CrosshairBarMin (Integer),
**  CrosshairBarMax (Integer)
**      -
**  PreturbRotationEffect (Integer)
**      -
**  PreturbIncreaseSpeed (Integer),
**  PreturbDecreaseSpeed (Integer)
**      - 
**  PreturbWalkPercent (Float)
**      -
**  MessageTime (Float)
**      - 
**  MessageFade (Float)
**      -
**  MaxMessages (Integer)
**      -
**  PopupTextRect (Rectangle)
**      -
**  ObjectiveRect (Rectangle) (KAMod)
**      - 
**  Team1Color (Vector),
**  Team2Color (Vector)
**      - 
**  IOCameraRect (Rectangle) (KAMod)
**      - 
**  IOCameraFOVX (Float),
**  IOCameraFOVY (Float)
**      - 
**  TimerSize (Integer)
**      -
**  TimerPos (2D Point) (KAMod)
**      - 
**
**  ---<SAFELY DEPRECATED SETTINGS>---
**  FailScreenBackground (Path String)
**  NightVisionModelColor (Vector)
**  NightVisionScreenTint (Vector)
**  InfraredModelColor (Vector)
**  InfraredLightScale (Vector?)
**  MineDetectScreenTint (Vector)
**  WeaponPickupColor (Vector)
**  AmmoPickupColor (Vector)
**  SubtitleTint (Vector)
**  HealthTint (Vector)
**  ArmorTint (Vector)
**  AmmoTint (Vector)
**  PopupTint (Vector)
*/
[Miscellaneous]
DialogFrame 			= "interface\menu\sprtex\frame_solid.dtx"
DialogFontFace			= 1
DialogFontSize			= 14
FailScreenBackground	= "interface\missionfailure.pcx"
FailStringPos			= (320,200)
FailScreenDelay 		= 5.0
DeathDelay				= 5.0
NightVisionModelColor	= <32.0, 128.0, 32.0>
NightVisionScreenTint	= <0.0, 255.0, 0.0>
InfraredModelColor		= <96.0, 32.0, 0.0>
InfraredLightScale		= <255.0, 0.0, 0.0>
MineDetectScreenTint	= <224.0, 224.0, 0.0>
WeaponPickupColor		= <80.0, 40.0, 128.0>
AmmoPickupColor 		= <80.0, 40.0, 128.0>
TintTime				= 2.000000
HUDChoserHColor 		= <255.0, 255.0, 255.0>
CrosshairGapMin 		= 5
CrosshairGapMax 		= 25
CrosshairBarMin 		= 8
CrosshairBarMax 		= 32
PerturbRotationEffect	= 2
PerturbIncreaseSpeed	= 3
PerturbDecreaseSpeed	= 1
PerturbWalkPercent		= 0.33
MessageTime 			= 9.0
MessageFade 			= 0.75
MaxMessages 			= 5
PopupTextRect			= (20,80,620,340)
ObjectiveRect			= (80,40,560,300)
SubtitleTint			= <255.0, 255.0, 128.0>
HealthTint				= <255.0, 128.0, 128.0>
ArmorTint				= <128.0, 128.0, 255.0>
AmmoTint				= <240.0, 240.0, 128.0>
PopupTint				= <255.0, 255.0, 255.0>
Team1Color				= <64.0, 64.0, 255.0>
Team2Color				= <255.0, 64.0, 64.0>
IOCameraRect			= (269,105,371,277)
IOCameraFOVX			= 70.0
IOCameraFOVY			= 60.0
TimerSize				= 24
TimerPos				= (300,100)

