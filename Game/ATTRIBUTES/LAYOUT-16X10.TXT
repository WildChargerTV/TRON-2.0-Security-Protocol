/************************************************************************
**                             --[LAYOUT]--
**
**  IMPORTANT: This is the 16:10 version of LAYOUT.TXT.
**
**  The Layout file, as the name implies, specifies attributes used for
**  the game's menus, HUD, fonts, and other custom elements. These
**  attributes include, but are not limited to, screen position,
**  text/element color, and element scale.
**
**  This is a big file. So big, in fact, that to have left it in the
**  state Monolith originally provided it in would have proven way too
**  confusing. In the interest of overall clarity as well as to ensure
**  the documentation would be for things that mattered, a significant
**  amount of unnecessary things were outright removed, with testing
**  performed to ensure the game would still run properly after their
**  removal.
**
**  For this reason, it's important to know that if using this layout 
**  file has resulted in anything breaking, that a clean copy is ALWAYS 
**  available in the "tcdg" folder, inside the game's installation 
**  directory. So, should you encounter any issues, report them to me on 
**  GitHub, and then revert to the clean copy until it's fixed.
**
**  Also, please note that because of the sheer size of this file, it's
**  almost impossible to ensure all of the documentation uses consistent
**  verbage and structure the whole way through. If anything sounds too
**  confusing, feedback is also welcomed on the GitHub. Just make sure
**  that the suggestion is specific enough to be feasible to implement.
**
**  See the Table of Contents to find specific sections of the file more
**  easily.
**
**  Values that have been modified specifically for TRON 2.0: Security
**  Protocol will be labeled as such using a single-line comment placed
**  directly on that value's line.
**
**  The first pass going through this file broke a few things. Now, I
**  expected as such, but that doesn't mean it isn't a bit frustrating.
**  I'll be doing a second pass from a clean copy. Being thorough is
**  important, after all.
**  TODO Leave fonts alone for now. Testing can be done later.
**  TODO Great job, moron, you somehow misaligned the ingame chat menu.
**  Gotta figure out why that happened
**  TODO A random graphical glitch was introduced where the Ball
**  Launcher may randomly fail to "wrap around" the player's arm. This
**  effect is inconsistent and not influenced by anything specifically,
**  yet.
**  TODO Whoops, the active subroutine icons stretch off to the right
**  now..
*/


/************************************************************************
**
**                            Table of Contents
**
**  This file is over 6,000 lines long! Although it'd be impossible to
**  add link references to a raw text file, this "Table of Contents"
**  will provide the exact names of the sections of this file that can
**  be slapped into a Find prompt. That should work, right?
**
**  TODO the table of contents, dummy (soonTM)
*/


/************************************************************************
**
**                           Basic Screen Layout
**
**  The BasicLayout definition specifies positions, sizes, and various
**  other attributes for common menu screen components. Although it 
**  doesn't technically set "default values", none of these values are 
**  ever overridden when a menu screen uses them.
**
**	HelpRect (Rectangle)
**      - The space allocated to display the menu "tooltip" text. 
**      Appears at the lower-middle section of the screen when most, if
**      not all, menu options are hovered.
**      - This setting is managed by the Killer App Mod.
**  HelpFont (Integer),
**  HelpSize (Integer)
**      - The font ID and text height of the main menu "tooltip" text.
**      - HelpSize is managed by the Killer App Mod.
**	BackPos (Point)
**		- The upper-left origin position of the Quit button in the main
**      menu.
**      - TODO re-test this. "Common" screen components? Gotta be more
**      than just this right????
**      - This setting is managed by the Killer App Mod.
**  BackFont (Integer),
**  BackSize (Integer)
**      - The font ID and text height of the back button text. Also 
**      applies to the OK button in the Options menu.
**      - TODO re-test this
**  SliderTex (Path)
**      - The texture used for menu sliders (e.g. the mouse sensitivity
**      option). Notably does not apply to all arrow buttons that aren't
**      attached to a slider.
**  ArrowBackTex (Path),
**  ArrowBackTexH (Path)
**      - The texture used for the back button, when not highlighted and
**      highlighted respectively.
**  ArrowBackPos (Point)
**      - The upper-left origin position of the back button.
**      - This setting is managed by the Killer App Mod.
**	BossRect (Rectangle)
**		- The space allocated to display the boss health bar.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  HUDFont (Integer)
**      - The font ID used in unknown areas.
**      - What is this???
**	NextPos (Point)
**		- The upper-left origin position of the "next" item.
**      - This setting is not used in TRON 2.0(?).
**  MainPos (Point)
**      - The upper-left origin position of the "main" item.
**      - This setting is not used in TRON 2.0(?).
**	BackColor (Vector)
**      - The color used for menu background fills.
**      - This setting is not used in TRON 2.0.
**  BackSprite (Path)
**      - The sprite used for the menu background.
**      - This setting is not used in TRON 2.0.
**  BackSpriteScale (Float)
**      - The scale of the BackSprite.
**      - This setting is not used in TRON 2.0.
**	LoadStringPos (Point)
**		- The upper-middle origin position of the name of the world
**		displayed on the loading screen.
**      - LoadingScreenDefault manages this, why is it here?
**	LoadPhotoPos (Point)
**		- The upper-left origin position of the photo of the world
**		displayed on the loading screen.
**      - LoadingScreenDefault manages this, why is it here?
*/
[BasicLayout]
HelpRect		    = (194, 442, 500, 470)
HelpFont		    = 1
HelpSize		    = 16
//HUDFont 		    = 1
BackPos 		    = (560, 366)
BackFont		    = 0
BackSize		    = 18
//NextPos 		    = (0, 0)
//MainPos 		    = (0, 0)
//BackColor		    = <185.0, 205.0, 95.0>
//BackSprite		= ""
//BackSpriteScale   = 0.5
SliderTex		    = "interface\menu\sprtex\slider.dtx"
ArrowBackTex	    = "interface\menu\sprtex\menubutton_bg.dtx"
ArrowBackTexH	    = "interface\menu\sprtex\menubutton_bg_hl.dtx"
ArrowBackPos	    = (10, 365)
//LoadStringPos	    = (320, 420)
//LoadPhotoPos	    = (350, 180)
BossRect		    = (160, 90, 480, 100)


/************************************************************************
**
**                              Screen Layout
**
**  The Screen Layout definitions specify positions, sizes, and various
**  other attributes of menu screen components.
**
**  The GenericScreen section defines default values which will be used
**  by all of the screen definitions made after it, unless overridden.
**
**  Individual screens also have custom values specified in their
**  section that are used in addition to the GenericScreen definitions.
**  These custom values will have their definitions given as they appear
**  above their section headers.
**
**	TitlePos (Point)
**	    - The upper-left origin position of the menu title string. Also
**      applies to the current chapter title in Single Player loading
**      screens.
**      - This setting is managed by the Killer App Mod.
**	TitleFont (Integer),
**	TitleSize (Integer)
**		- The default font ID and text height of the menu title string.
**      Also applies to the current chapter title in Single Player
**      loading screens.
**	PageRect (Rectangle)
**		- The space allocated to act as a general container for the main
**      contents of the menu. It doesn't seem to restrict a lot of the
**      elements, but it's impossible to know for certain.
**      - This setting is managed by the Killer App Mod.
**	FontFace (Integer),
**	FontSize (Integer)
**		- The default font ID and text height of all menu text.
**	ItemSpace (Integer)
**		- The default line spacing between each specific menu item.
**	MusicIntensity (Integer)
**		- Specifies what the music intensity should be for the current
**		menu screen.
**      - In TRON 2.0, there is only one "intensity" for the menu music.
**      Intensity 1 is silence. Intensity 2 is the menu music. Keeping
**      this set to 2 is advised.
**  SelectedColor (Vector),
**  NonSelectedColor (Vector),
**  DisabledColor (Vector)
**      - The default colors used for menu button text, when selected/
**      highlighted, not selected/highlighted, and unable to be 
**      selected/highlighted, in that order.
**  ListFontSize (Integer)
**      - The default text height used for various lists throughout the
**      game.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  MouseFX (Path?)
**      - The FX used for the cursor?
**      - This setting does not appear to be used in TRON 2.0.
*/
[GenericScreen]
TitlePos			= (24, 8)
TitleFont			= 1
TitleSize			= 22
PageRect			= (54, 148, 585, 385)
FontFace			= 0
FontSize			= 27
ItemSpace			= 0
MusicIntensity		= 2
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <255.0, 113.0, 113.0> // SecurityProtocol
DisabledColor		= <180.0, 180.0, 200.0>
//MouseFX 			= ""
ListFontSize		= 20

/*  -----[Main Menu]-----
**  VersionPos (Point)
**      - The upper-middle origin position of the text showing the
**      game's current version number and custom branch name.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenMain]
TitlePos	= (0,0)
PageRect	= (200,118,585,355)
ItemSpace	= 1
VersionPos	= (545,25)
Light0		= "Main0"

/*  -----[Single Player Menu]-----
**  DiffRect (Rectangle)
**      - The space allocated to display the difficulty selector for a
**      new game.
**      - This setting is managed by the Killer App Mod.
**  CustomRect (Rectangle)
**      - The space allocated to display unknown contents.
**      - What is this used for? Listing custom maps? I forgot how to
**      bring that menu up. Oops.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenSingle]
PageRect		= (450, 170, 25, -5)
ItemSpace		= 1
ListFontSize    = 18
DiffRect		= (120, 130, 356, 250)
CustomRect		= (24, 107, 440, 417)
Light0			= "Main0"

/*  -----[Load Game Menu]-----
**  Applies to both the [Single Player -> Load Game] menu as well as the
**  load menu that appears following the Game Over screen.
**
**  SmallFontSize (Integer)
**      - The text height of the text listing all available save games.
**  Indent (Integer)
**      - Determines the indent of the bounding box listing saves from
**      the left side of PageRect(?).
**  NameWidth (Integer),
**  TimeWidth (Integer)
**      - The total widths of the columns listing save file names and
**      creation dates respectively.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenLoad]
PageRect		= (44, 55, 460, 345)
FontSize		= 16
ItemSpace		= 3
SmallFontSize	= 12
Indent			= 0
NameWidth		= 300
TimeWidth		= 125
Light0			= "Main0"

/*  -----[Single Player -> Light Cycles Menu]-----
**  TabRect (Rectangle)
**      - The space allocated to display the tabs utilized by this menu.
**      The space is divided evenly amongst each of the tabs.
**      - This setting is managed by the Killer App Mod.
**  BodyRect (Rectangle)
**      - The default space allocated to display the main body box for
**      the tabs utilized by this menu.
**      - Unused by proxy - each tab has a TabBodyRect value that will
**      override this value.
**  ColumnWidth (Integer)
**      - Sets the width of the first column in the "Custom Settings"
**      tab. Notably does not affect the text in that column; seems to
**      only be here to force the column holding the controls away from
**      the text.
**  CommandPos (Point)
**      - The upper-left origin position of the commands to Create New,
**      Rename, and Delete new custom configuration presets. Displayed
**      beneath AvailRect.
**      - This setting is managed by the Killer App Mod.
**  AvailRect (Rectangle)
**      - The space allocated to display the box listing player-defined
**      custom configuration presets. Appears in the middle-right area
**      of the screen when the "Custom Play" and "Custom Settings" tabs
**      are being displayed.
**      - This setting is managed by the Killer App Mod.
**  ConfigTitlePos (Point)
**      - The upper-left origin position of the "Custom Configuration"
**      text displayed above AvailRect.
**      - This setting is managed by the Killer App Mod.
**  NamePos (Point)
**      - The upper-left origin position of the Player Name text.
**      - This setting is managed by the Killer App Mod.
**  NameColumn (Integer)
**      - The total width of the Player Name string. Includes text
**      wrapping.
**      - This setting is managed by the Killer App Mod.
**  NameWidth (Integer)
**      - The width of the current Player Name and Light Cycle model.
**      Does not include text wrapping.
**      - This excludes the "Player Name:" and "Current Light Cycle:"
**      text and only applies to the labels directly following them.
**  CycleNamePos (Point)
**      - The total width of the Current Light Cycle string. Includes
**      text wrapping.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  ConfigurationPos (Point)
**      - Unknown function.
**      - What is this? Tried to set it to (0,0) and nothing happened
**  GameTypePos (Point)
**      - Unknown function.
**      - Either this is unused or ConfigurationPos is unused. Neither
**      one seems to do anything.
**  TabColor (Vector)
**      - The color used as the tab background?
**      - Yet another thing that does nothing...
**  TabAlpha (Float)
**      - The alpha of the TabColor?
**      - I feel like I'm missing something.
*/
[ScreenBaseLightCycle]
PageRect			= (280, 100, 550, 400)
FontSize			= 18
ItemSpace			= 1
TabRect				= (47, 110, 497, 120)
BodyRect			= (40, 160, 493, 400)
//ConfigurationPos  = (250, 50)
//GameTypePos		= (250, 70)
ColumnWidth 		= 200
//TabColor			= <16.0, 16.0, 64.0>
//TabAlpha			= 0.9
CommandPos			= (534, 280)
AvailRect			= (508, 153, 615, 275)
ConfigTitlePos	    = (508, 135)
NamePos				= (54, 45)
NameColumn			= 118
NameWidth 			= 330
CycleNamePos		= (54, 65)
Light0				= "Main0"

/*  -----[Single Player -> Light Cycles -> Circuit Play Tab]-----
**  AvailRect (Rectangle)
**      - The space allocated to display the box listing all the Light
**      Cycle circuit options.
**  TabBodyRect (Rectangle)
**      - The space allocated for the entire box underneath the tab.
**      - This setting is managed by the Killer App Mod.
**      - So is BodyRect just a required default definition that gets
**      overridden?
**  RestrictionPos (Point)
**      - The upper-left origin position of the "Light Cycles Permitted"
**      text.
**      - This setting is managed by the Killer App Mod.
**  LivesPos (Point)
**      - The upper-left origin position of the "Lives" text, including
**      the dynamic number of lives following it.
**      - This setting is managed by the Killer App Mod.
**  WavesPos (Point)
**      - The upper-left origin position of the "Waves" text, including
**      the dynamic number of waves following it.
**      - This setting is managed by the Killer App Mod.
**  ImagePos (Point)
**      - The upper-left origin position of the selected circuit's
**      thumbnail image.
**      - This setting is managed by the Killer App Mod.
**  ImageRect (Rectangle)
**      - The space allocated to display the selected circuit's
**      thumbnail image.
**      - Unlike a traditional Rectangle declaration, this one has its
**      first two values covered by ImagePos, meaning the first two
**      values of this Rectangle are always 0. The last two values then
**      determine the cutoff point for the image box.
**      - This setting is managed by the Killer App Mod.
**  RegularPos (Point)
**      - The upper-left origin position of the "Light Cycle" text, as
**      well as the dynamic text beneath it informing the player whether
**      or not Light Cycles are permitted in the selected Circuit.
**      - Note that the dynamic text cannot be shifted vertically, only
**      horizontally.
**      - This setting is managed by the Killer App Mod.
**  SuperPos (Point)
**      - The upper-left origin position of the "Super Light Cycle"
**      text, as well as the dynamic text beneath it informing the
**      player whether or not Super Light Cycles are permitted in the
**      selected Circuit.
**      - Note that the dynamic text cannot be shifted vertically, only
**      horizontally.
**      - This setting is managed by the Killer App Mod.
**  CompletedCircuitColor (Vector),
**  UncompletedCircuitColor (Vector)
**      - The text color of a specific listed Circuit name when it has,
**      or has not, been completed respectively at least once by the
**      player.
**  LaunchPos (Point),
**  LaunchTex (Path),
**  LaunchTexH (Path)
**      - These values make up the "Play" button. LaunchPos sets the
**      upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**      - LaunchPos is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  AddPos (Point)
**      - Unknown function.
**  CommandPos (Point)
**      - Unknown function.
**  SelectRect (Rectangle)
**      - Unknown function.
**  InfoPos (Point)
**      - Unknown function. Unused?
*/
[ScreenLightCycleCircuit]
FontSize			    = 18
TabBodyRect			    = (40, 160, 615, 400)
//AddPos				= (54, 148)
AvailRect			    = (60, 148, 255, 316)
//CommandPos			= (345, 158)
//SelectRect			= (445, 158, 595, 385)
RestrictionPos		    = (260, 155)
LivesPos			    = (260, 173)
WavesPos			    = (260, 190)
//InfoPos				= (260, 260)
ImagePos			    = (260, 210)
ImageRect			    = (0, 0, 315, 113)
RegularPos			    = (405, 135)
SuperPos			    = (495, 135)
CompletedCircuitColor	= <251.0, 193.0, 193.0> // SecurityProtocol
UncompletedCircuitColor	= <255.0, 74.0, 74.0> // SecurityProtocol
LaunchPos			    = (500, 365)
LaunchTex			    = "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			    = "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				    = "Main0"

/*  -----[Single Player -> Light Cycles -> Light Cycles Tab]-----
**  The name is redundant. This menu lets the player choose their Light
**  Cycle model & color.
**
**  TabBodyRect (Rectangle)
**      - The space allocated for the entire box underneath the tab.
**      - This setting is managed by the Killer App Mod.
**  Character (String)
**      - The string ID of the Character definition that will display 
**      the rotating Light Cycle model for this menu.
**      - See the "Menu Character Layout" section for more details.
**  LabelPos (Point)
**      - The upper-left origin position of the "Light Cycle" text, seen
**      normally to the upper-left of the tab body box.
**      - This setting is managed by the Killer App Mod.
**  BarWidth (Integer)
**      - The total width of the bars used to display Light Cycle stats.
**  StatsPos (Point)
**      - The upper-left origin position of the entire Light Cycle stats
**      module, including the bars and the label text.
**      - This setting is managed by the Killer App Mod.
**  TypeLeftArrowPos (Point),
**  TypeTextPos (Point),
**  TypeRightArrowPos (Point)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently active Light Cycle type,
**      with the text sandwiched between the left and right arrows.
**      - These settings are managed by the Killer App Mod.
**  ShadeLeftArrowPos (Point),
**  ShadeTextPos (Point),
**  ShadeRightArrowPos (Point)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently active Light Cycle color,
**      with the text sandwiched between the left and right arrows.
**      - These settings are managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  AddPos (Point)
**      - Unknown function.
**  AvailRect (Rectangle)
**      - Unknown function.
**  CommandPos (Point)
**      - Unknown function.
**  SelectRect (Rectangle)
**      - Unknown function.
**  LightCycleBackgroundPos (Point)
**      - Unused. This set the origin position of the Light Cycle
**      background image that later became deprecated.
**  LightCycleBackgroundRect (Rectangle)
**      - Unused. This assumedly allocated the bottom and right-side
**      cutoffs for the Light Cycle background image that later became
**      deprecated.
*/
[ScreenLightCyclePlayerConfig]
FontSize			        = 18
//AddPos				    = (54, 148)
//AvailRect			        = (200, 158, 350, 385)
//CommandPos			    = (200, 188)
//SelectRect			    = (445, 158, 595, 385)
TabBodyRect			        = (40, 160, 615, 400)
Character			        = "LightCycleBase"
LabelPos					= (60, 130)
//LightCycleBackgroundPos	= (60, 195)
//LightCycleBackgroundRect	= (0, 0, 250, 155)
BarWidth					= 200
StatsPos				    = (400, 130)
TypeLeftArrowPos		    = (50, 290)
TypeTextPos				    = (70, 290)
TypeRightArrowPos		    = (300, 290)
ShadeLeftArrowPos		    = (50, 310)
ShadeTextPos			    = (70, 310)
ShadeRightArrowPos		    = (300, 310)
Light0				        = "Main0"

/*  -----[Single Player -> Light Cycles -> Custom Play Tab]-----
**  AvailRect (Rectangle)
**      - The space allocated to display the list of available maps to
**      add to the custom game.
**      - This setting is managed by the Killer App Mod.
**  CommandPos (Point)
**      - The upper-left origin position of the button group holding the
**      controls to add and remove maps for the custom game.
**      - This setting is managed by the Killer App Mod.
**  SelectRect (Rectangle)
**      - The space allocated to display the list of maps added to the
**      custom game.
**      - This setting is managed by the Killer App Mod.
**  TabBodyRect (Rectangle)
**      - The space allocated for the entire box underneath the tab.
**      - This setting is managed by the Killer App Mod.
**  LaunchPos (Point),
**  LaunchTex (Path),
**  LaunchTexH (Path)
**      - These values make up the "Play" button. LaunchPos sets the
**      upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**      - LaunchPos is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  AddPos (Point)
**      - Unknown function.
*/
[ScreenLightCycleCustomMap]
FontSize	= 18
//AddPos	= (54, 148)
AvailRect	= (60, 148, 230, 313)
CommandPos	= (225, 188)
SelectRect	= (320, 148, 490, 313)
TabBodyRect	= (40, 160, 493, 400)
LaunchPos	= (500,365)
LaunchTex	= "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH	= "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0		= "Main0"

/*  -----[Single Player -> Light Cycles -> Custom Settings Tab]-----
**  CommandPos (Point)
**      - The upper-left origin position of the entire list of options.
**      - This setting is managed by the Killer App Mod.
**  TabBodyRect (Rectangle)
**      - The space allocated for the entire box underneath the tab.
**      - This setting is managed by the Killer App Mod.
**  BodyRect (Rectangle)
**      - The space allocated to display the pop-up box listing all
**      available Light Cycle powerups. These values are limited to the
**      bounding box of TabBodyRect and will not visually stretch any
**      further.
**      - This setting is managed by the Killer App Mod.
**  LCPowerupListIndent (Point)
**      - The upper-left origin position of the text listing all
**      available Light Cycle powerups. These values are limited to the
**      bounding box of BodyRect and will not visually go any further.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  AddPos (Point)
**      - Unknown function.
**  AvailRect (Rectangle)
**      - Unknown function.
**  SelectRect (Rectangle)
**      - Unknown function.
*/
[ScreenLightCycleCustomGame]
FontSize			= 18
//AddPos			= (54, 148)
//AvailRect			= (200, 208, 380, 385)
CommandPos			= (55,158)
//SelectRect		= (415, 208, 595, 385)
TabBodyRect			= (40, 160, 493, 400)
BodyRect			= (110, 85, 530, 375)
LCPowerupListIndent	= (50, 10)
Light0				= "Main0"

/*  -----[Light Cycle Victory Screen]-----
**  This is the screen that shows up when you've beaten all of the Light
**  Cycle circuits. It displays similarly to a Game Over screen, but
**  with different text references.
**
**  VictoryId (Integer)
**      - The ID of a string in CRES.DLL of text to display for the
**      victory message.
**  VictoryStringRect (Rectangle)
**      - The space allocated to display the victory message.
**  VictoryStringSize (Integer)
**      - The text height of the victory message.
**  HelpStringPos (Point)
**      - The upper-left origin position of the text telling the player
**      to use the Escape key to return to the previous menu.
**  HelpStringSize (Integer)
**      - The text height of the text telling the player to use the
**      Escape key to return to the previous menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  Delay (Float)
**      - Unknown function. Unused?
*/
[ScreenLightCycleVictory]
//MouseFX			= ""
//Delay				= 10.0
VictoryId			= 2561
VictoryStringRect	= (20, 200, 620, 360)
VictoryStringSize	= 24
HelpStringPos		= (160, 360)
HelpStringSize		= 12
Light0				= "Main0"

/*  -----[Multiplayer Menu]-----
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenMulti]
PageRect	= (8, 150, 150, 387)
FontSize	= 24
ItemSpace   = 1
Light0		= "Main0"

/*  -----[Multiplayer -> Player Setup Menu]-----
**  Character (String)
**      - The string ID of the Character definition that will display 
**      both the rotating Light Cycle model, as well as the rotating
**      player model, for this menu.
**      - See the "Menu Character Layout" section for more details.
**  GameTypePos (Point)
**      - The upper-left origin position of the Game Type toggle, which
**      is used to switch between customizing the player's character and
**      Light Cycle models for multiplayer.
**      - This setting is managed by the Killer App Mod.
**  NamePos (Point)
**      - The upper-left origin position of the Player Name setting,
**      which lets the player set their name in multiplayer modes.
**      - This setting is managed by the Killer App Mod.
**  NameColumn (Integer)
**      - The total width of the Player Name string. Includes text
**      wrapping.
**  NameWidth (Integer)
**      - The width of the current Player Name. Does not include text 
**      wrapping.
**  BandwidthPos (Point)
**      - The upper-left origin position of the Bandwidth toggle, which
**      is used to switch between different bandwidth types for
**      multiplayer.
**      - This setting is managed by the Killer App Mod.
**  BandwidthColumn (Integer)
**      - The total width of the Bandwidth string. Includes text
**      wrapping.
**  BandwidthWidth (Integer)
**      - Unused function. Unlike the Name and Band2 rows, this row does
**      not rely on a manually-input custom value, making this space 
**      unnecessary. It's only staying here for consistency.
**  Band2Pos (Point)
**      - The upper-left origin position of the Bandwidth (custom)
**      setting, which lets the player set their own bandwidth value.
**      - This setting is managed by the Killer App Mod.
**  Band2Column (Integer)
**      - The total width of the Bandwidth (custom) string. includes
**      text wrapping.
**  Band2Width (Integer)
**      - The width of the current custom bandwidth value. Does not
**      include text wrapping.
**  ModelTextPos (Point),
**  ModelLeftArrowPos (Point),
**  ModelRightArrowPos (Point)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the currently used player or Light Cycle 
**      model, with the text sandwiched between the left and right 
**      arrows.
**      - These settings are managed by the Killer App Mod.
**  ColorTextPos (Point),
**  ColorLeftArrowPos (Point),
**  ColorRightArrowPos (Point)
**      - The upper-left origin positions of the buttons that make up
**      the setting controlling the active color/skin applied to the 
**      current player or Light Cycle model, with the text sandwiched 
**      between the left and right arrows.
**      - These settings are managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenPlayer]
PageRect			= (190, 220, 400, 460)
FontSize			= 18
Character			= "MPBase"
GameTypePos			= (200, 30)
NamePos				= (200, 50)
NameColumn			= 200
NameWidth 			= 220
BandwidthPos		= (200, 70)
BandwidthColumn		= 200
BandwidthWidth 	    = 200
Band2Pos			= (200, 90)
Band2Column			= 200
Band2Width 			= 200
ModelTextPos		= (205, 325)
ModelLeftArrowPos	= (185, 325)
ModelRightArrowPos	= (440, 325)
ColorTextPos		= (205, 345)
ColorLeftArrowPos	= (185, 345)
ColorRightArrowPos	= (440, 345)
Light0				= "Main0"
Light1				= "test"

/*  -----[Multiplayer -> Join Internet/LAN Game -> Server List Tab]-----
**  Counts as both the base menu as well as the menu for the first tab.
**
**  TabRect (Rectangle)
**      - The space allocated to be divided evenly amongst the tabs.
**      - This setting is managed by the Killer App Mod.
**  BodyRect (Rectangle)
**      - The space allocated to display the main body of the box for
**      this tab.
**      - This setting is managed by the Killer App Mod.
**  DedicatedColumn (Integer),
**  NameColumn (Integer),
**  PingColumn (Integer),
**  PlayersColumn (Integer),
**  TypeColumn (Integer),
**  MapColumn (Integer)
**      - These values determine the widths of the columns, but it's not
**      known exactly HOW these values work, either with each other or 
**      the greater menu layout.
**      - DedicatedColumn is managed by the Killer App Mod.
**      - TODO understand how the hell these columns work????
**  TablePos (Point)
**      - The upper-left origin position of the box holding the server
**      listing. Includes column headers.
**      - This setting is managed by the Killer App Mod.
**  ListRect (Rectangle)
**      - The space allocated to display the box holding the server
**      listing?
**      - TODO why are these values being so finnicky?
**      - This setting is managed by the Killer App Mod.
**  PortPos (Point)
**      - The upper-left origin position of the "Join Specific IP"
**      button (Internet menu) and the Network Port text (LAN menu).
**      - This setting is managed by the Killer App Mod.
**  PortColumnWidth (Integer)
**      - The total width of the column holding the player's current
**      network port, with the text justified to the right (LAN menu).
**      - Further verification needed. This may also apply to the "Join
**      Specific IP" button but would have no effect there since there
**      is no text that comes after that button.
**  IPColumnWidth (Integer)
**      - The total width of the column holding the "Join Specific IP"
**      button (Internet menu). Includes text wrapping.
**  FilterPos (Point),
**  FilterPingPos (Point),
**  FilterPlayerPos (Point),
**  FilterTypePos (Point)
**      - The upper-left origin positions of the various filters. The
**      first value, FilterPos, just positions the "Filters:" text, and
**      the remaining values position the filters themselves.
**      - These settings are managed by the Killer App Mod.
**  StatusPos (Point)
**      - The upper-left origin position of the Status indicator (both
**      menus).
**      - This setting is managed by the Killer App Mod.
**  GameSpyPos (Point),
**  GameSpyWidth (Integer)
**      - The upper-left origin position and total width of the GameSpy
**      logo. Changing the width scales height accordingly to maintain 
**      aspect ratio.
**      - GameSpyPos is managed by the Killer App Mod.
**  LaunchPos (Point),
**  LaunchTex (Path),
**  LaunchTexH (Path)
**      - These values make up the "Join game" button. LaunchPos sets
**      the upper-left origin position. LaunchTex and LaunchTexH set the
**      button's texture when not highlighted/highlighted respectively.
**      - LaunchPos is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  TabColor (Vector)
**      - Unused function?
**  TabAlpha (Float)
**      - Unused function?
**  JoinPos (Point)
**      - Unused function?
**  LockColumn (Integer)
**      - Unused function?
**  PlayerFilterColumn (Integer)
**      - Unused function?
**  PingFilterColumn (Integer)
**      - Unused function?
**  DedicatedFilterColumn (Integer)
**      - Unused function?
**  FilterDedicatedPos (Point)
**      - Unused funcion? (Does this filter exist?)
*/
[ScreenJoinServerList]
PageRect			    = (180, 100, 550, 400)
FontSize			    = 18
BodyRect			    = (20, 75, 620, 435)
TabRect				    = (54, 40, 550, 75)
//TabColor			    = <16.0, 16.0, 64.0>
//TabAlpha			    = 0.9
//JoinPos				= (540, 440)
//LockColumn			= 0
DedicatedColumn		    = 35
NameColumn			    = 35
PingColumn			    = 210
PlayersColumn		    = 260
TypeColumn			    = 320
MapColumn			    = 420
//PlayerFilterColumn	= 0
//PingFilterColumn		= 200
//DedicatedFilterColumn = 400
TablePos			    = (38, 65)
ListRect			    = (30, 85, 597, 321)
PortPos				    = (50, 338)
PortColumnWidth		    = 110
IPColumnWidth			= 150
FilterPos			    = (50, 320)
FilterPingPos			= (100, 320)
FilterPlayerPos			= (200, 320)
FilterTypePos			= (350, 320)
FilterDedicatedPos		= (450, 320)
StatusPos			    = (310, 338)
GameSpyPos			    = (180, 4)
GameSpyWidth		    = 175
LaunchPos			    = (500, 365)
LaunchTex			    = "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			    = "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				    = "Main0"

/*  -----[Multiplayer -> Join Internet/LAN Game -> Server Info Tab]-----
**  RefreshPos (Point)
**      - The upper-left origin position of the Refresh button.
**  LeftPlayerWidth (Integer)
**      - The total width of the column displaying player names. Does
**      not include text wrapping.
**  RightPlayerWidth (Integer)
**      - Unknown function. May handle a second column of player names,
**      but verifying this is extremely hard. Or score?
**  LeftInfoWidth (Integer)
**      - The total width of the column that displays the names of
**      different server attributes. Does not include text wrapping.
**  RightInfoWidth (Integer)
**      - The total width of the column that displays server attributes.
**      Does not include text wrapping.
**  LeftColumnPos (Point)
**      - The upper-left origin position of the left column (displaying
**      the list of online players).
**      - This setting is managed by the Killer App Mod.
**  RightColumnPos (Point)
**      - The upper-left origin position of the right column (displaying
**      server properties).
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  BodyRect (Rectangle)
**      - Unused function.
**      - But why?
**  TabRect (Rectangle)
**      - Unused function.
**  JoinPos (Point)
**      - Unused function.
*/
[ScreenServerInfo]
PageRect			= (180, 100, 550, 400)
FontSize			= 18
RefreshPos			= (610, 30)
//BodyRect			= (20, 75, 620, 435)
//TabRect			= (54, 50, 550, 75)
//JoinPos			= (540, 440)
LeftPlayerWidth		= 130
RightPlayerWidth    = 130
LeftInfoWidth		= 170
RightInfoWidth		= 150
LeftColumnPos		= (40, 65)
RightColumnPos		= (300, 65)
Light0				= "Main0"

/*  -----[Multiplayer -> Host Menu]-----
**  TabRect (Rectangle)
**      - The space allocated to be divided evenly amongst the tabs.
**      - This setting is managed by the Killer App Mod.
**  TabAlpha (Float)
**      - The opacity of the background for both the tabs and the box
**      beneath them.
**  ConfigurationPos (Point)
**      - The upper-left origin position of the string displaying the
**      server's current configuration.
**      - This setting is managed by the Killer App Mod.
**  GameTypePos (Point)
**      - The upper-left origin position of the string displaying the
**      server's current game type.
**      - This setting is managed by the Killer App Mod.
**  ColumnWidth (Integer)
**      - The total width of the column listing the available options
**      to modify. Includes text wrapping.
**  BodyRect (Rectangle)
**      - The space allocated to display the entire box underneath the
**      tabs.
**      - This setting is managed by the Killer App Mod.
**  CommandPos (Point)
**      - The upper-left origin position of the commands to Create New,
**      Rename, and Delete new custom configuration presets. Displayed
**      beneath AvailRect.
**      - This setting is managed by the Killer App Mod.
**  AvailRect (Rectangle)
**      - The space allocated to display the box listing player-defined
**      custom configuration presets. Appears in the middle-right area
**      of the screen when the "Custom Play" and "Custom Settings" tabs
**      are being displayed.
**      - This setting is managed by the Killer App Mod.
**  ConfigTitlePos (Point)
**      - The upper-left origin position of the "Custom Configuration"
**      text displayed above AvailRect.
**      - This setting is managed by the Killer App Mod.
**  LaunchPos (Point)
**      - The upper-left origin position of the "Launch" button.
**      - This setting is managed by the Killer App Mod.
**  LaunchTex (Path)
**      - The texture used for the "Launch" button, when not
**      highlighted.
**  LaunchTexH (Path)
**      - The texture used for the "Launch" button, when highlighted.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  TabColor (Vector)
**      - Unused function.
*/
[ScreenHost]
PageRect			= (280, 100, 550, 400)
ItemSpace			= 1
TabRect				= (225, 70, 575, 80)
//TabColor			= <16.0, 16.0, 64.0>
TabAlpha			= 0.9
ConfigurationPos	= (210, 26)
GameTypePos			= (210, 46)
ColumnWidth 		= 200
BodyRect			= (210, 110, 620, 435)
CommandPos			= (34, 290)
AvailRect			= (8, 113, 158, 285)
ConfigTitlePos		= (8, 95)
LaunchPos			= (500, 365)
LaunchTex			= "interface\menu\sprtex\menubutton_bg.dtx"
LaunchTexH			= "interface\menu\sprtex\menubutton_bg_hl.dtx"
Light0				= "Main0"

/*  -----[Multiplayer -> Host -> Connection Tab]-----
**  CommandPos (Point)
**      - The upper-left origin position of the entire server options
**      list.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenHostConnection]
FontSize			= 18
CommandPos			= (235, 88)
Light0				= "Main0"

/*  -----[Multiplayer -> Host -> Game Tab]-----
** CommandPos (Point)
**      - The upper-left origin position of the entire game options
**      list.
**      - This setting is managed by the Killer App Mod.
**  LCPowerupListIndent (Point)
**      - Likely unused function. The Light Cycle Powerup list has its
**      own coordinates and changing this seems to do nothing.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenHostGame]
FontSize			= 18
CommandPos			= (235, 88)
LCPowerupListIndent	= (50, 10)
Light0				= "Main0"

/*  -----[Multiplayer -> Host -> Maps Tab]-----
**  AvailRect (Rectangle)
**      - The space allocated to display the list of available maps to
**      add to the server.
**      - This setting is managed by the Killer App Mod.
**  CommandPos (Point)
**      - The upper-left origin position of the button group holding the
**      controls to add and remove maps for the server.
**      - This setting is managed by the Killer App Mod.
**  SelectRect (Rectangle)
**      - The space allocated to display the list of maps added to the
**      server.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  AddPos (Point)
**      - Unused function.
*/
[ScreenHostMaps]
FontSize	= 18
//AddPos	= (54, 148)
AvailRect	= (220, 108, 370, 353)
CommandPos	= (365, 158)
SelectRect	= (465, 108, 615, 353)
Light0		= "Main0"

/*  -----[Options Menu]-----
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenOptions]
PageRect	= (84, 130, 556, 250)
ItemSpace	= 1
Light0		= "Main0"

/*  -----[Options -> Display Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenDisplay]
PageRect	= (120, 100, 556, 220)
ItemSpace	= 1
ColumnWidth = 200
SliderWidth	= 240
Light0		= "Main0"

/*  -----[Options -> Sound Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  EAXImageTexture (Path)
**      - The texture used to display the EAX logo.
**  EAXImageRect (Rectangle)
**      - The space allocated to display the EAX logo.
**      - Unlike a traditional Rectangle declaration, this one has its
**      first two values covered by EAXImagePos, meaning the first two
**      values of this Rectangle are always 0. The last two values then
**      determine the cutoff point for the image box.
**  EAXImagePos (Point)
**      - The upper-left origin position of the EAX logo.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenAudio]
PageRect		= (84, 100, 556, 220)
ItemSpace		= 1
ColumnWidth 	= 240
SliderWidth 	= 240
EAXImageTexture	= "Interface\Menu\art\EAX_ADVANCEDHD_4BLACK.dtx"
EAXImageRect	= (0, 0, 96, 48)
EAXImagePos		= (450, 240)
Light0			= "Main0"

/*  -----[Options -> Controls Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenControls]
PageRect	= (84, 100, 556, 220)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  -----[Options -> Controls -> Configure Controls Menu]-----
**  MoveControlPos (Point)
**      - The upper-left origin position of the four buttons used to
**      switch between the control groups.
**      - This setting is managed by the Killer App Mod.
**  ListRect (Rectangle)
**      - The space allocated to display the list of controls that the
**      player can modify.
**      - This setting is managed by the Killer App Mod.
**  ListFontSize (Integer)
**      - The text height of the text listing the controls that the
**      player can modify.
**  ActionWidth (Integer)
**      - The width of the list column displaying the names of controls
**      that the player can modify. Includes text wrapping.
**  EqualsWidth (Integer)
**      - Probably the width of the space between the control names and
**      their bindings. Further verification needed.
**  CommandWidth (Integer)
**      - The width of the list column displaying the current bindings
**      of the controls that the player can modify. Includes text 
**      wrapping.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenConfigure]
PageRect		= (54, 100, 200, 220)
ItemSpace		= 1
ListFontSize	= 16
MoveControlPos	= (54, 100)
ListRect		= (225, 60, 585, 325)
ActionWidth 	= 240
EqualsWidth 	= 10
CommandWidth	= 133
Light0			= "Main0"

/*  -----[Options -> Controls -> Mouse Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenMouse]
PageRect	= (54, 88, 585, 325)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  -----[Options -> Controls -> Keyboard Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenKeyboard]
PageRect	= (54, 88, 585, 325)
ItemSpace	= 1
ColumnWidth = 300
SliderWidth = 240
Light0		= "Main0"

/*  -----[Options -> Controls -> Configure Joystick/Gamepad Menu]-----
**  
**  HeaderFontSize (Integer)
**      - The text height of the "Axis" and "Action" column header text.
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenJoystick]
PageRect		= (76, 120, 585, 325)
FontSize		= 18
HeaderFontSize	= 18
ColumnWidth		= 250
Light0			= "Main0"

/*  -----[Options -> Game Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenGame]
PageRect	= (84, 73, 556, 233)
FontSize 	= 18
ItemSpace	= 3
ColumnWidth = 280
SliderWidth = 200
Light0		= "Main0"

/*  -----[Options -> Performance Menu]-----
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  DisplayRect (Rectangle)
**      - The space allocated to display the Display options pop-up box.
**      - This setting is managed by the Killer App Mod.
**  DisplayColumn (Integer)
**      - The total width of the column used to display the names of the
**      settings inside the Display options pop-up box. Does not include
**      text wrapping, but does not cut off the text either.
**  SFXRect (Rectangle)
**      - The space allocated to display the Special effects options
**      pop-up box.
**      - This setting is managed by the Killer App Mod.
**  SFXColumn (Integer)
**      - The total width of the column used to display the names of the
**      settings inside the Special effects options pop-up box. Does not
**      include text wrapping, but does not cut off the text either.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  TextureRect (Rectangle)
**      - Unused function.
**  TextureColumn (Integer)
**      - Unused function.
**  TextureSlider (Integer)
**      - Unused function.
*/
[ScreenPerformance]
PageRect		= (54, 95, 556, 245)
ItemSpace		= 5
ListFontSize	= 18
ColumnWidth 	= 180
SliderWidth 	= 200
DisplayRect 	= (420, 96, 550, 303)
DisplayColumn   = 160
SFXRect 		= (420, 96, 550, 303)
SFXColumn		= 136
//TextureRect 	= (340, 150, 550, 380)
//TextureColumn	= 160
//TextureSlider	= 110
Light0			= "Main0"

/*  -----[Crosshair Options Menu(?)]-----
**  Am I blind? I couldn't find this one. Unless it's tucked under the
**  Display menu? I'm not going in there to find out.
**  ColumnWidth (Integer)
**      - The total width of the column used to display the names of the
**      menu's settings.
**  SliderWidth (Integer)
**      - The width of any slider bars in the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenCrosshair]
PageRect	= (84, 130, 556, 280)
ItemSpace	= 10
ColumnWidth = 240
SliderWidth = 240
Light0		= "Main0"

/*  -----[Profile Menu]-----
**  ProfileNamePos (Point)
**      - The upper-left origin position of the list of menu options.
**      - This setting is managed by the Killer App Mod.
**  DialogSize (Point)
**      - Although it functions as a Point, if set to 0, it does not set
**      the box to the top left of the screen. More understanding is
**      needed.
**      - This setting is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  DialogPos (Point)
**      - Unknown function.
*/
[ScreenProfile]
ItemSpace		= 1
ProfileNamePos	= (14, 130)
//DialogPos		= (450, 221)
DialogSize		= (300, 248)
Light0			= "Main0"

/*  -----[Subroutines Menu: General]-----
**  Quite a bit of the Subroutines menu (accessed by pressing F1 ingame)
**  has been modified by the Killer App Mod whilst making the game work
**  in widescreen. Unless you really know what you're doing, it is not
**  recommended to touch any of these values.
**
**  Due to the inherent complexity of the menu, it has been split up
**  into multiple sections.
**
**  ClearPos (Point)
**      - The upper-left origin position of the Clear button at the
**      bottom-right corner of the screen.
**      - This setting is managed by the Killer App Mod.
**  SysNamePos (Point)
**      - The upper-left origin position of the name of the chapter the
**      player is currently in.
**      - This setting is managed by the Killer App Mod.
**  VersionSize (Integer)
**      - The text height of the text displaying the player's current
**      version number.
**  VersionPos (Point)
**      - The upper-middle origin position of the text displaying the
**      player's current version number.
**      - This setting is managed by the Killer App Mod.
**  OptimizerHitRect (Rectangle)
**      - Unused function.
**  Piece# (String)
**      - The string ID of a Piece to use for the menu.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  CompilePos (Point)
**      - Unused function.
**  HelpRect (Rectangle)
**      - Unused function?
*/
[ScreenSubroutines]
PageRect		    = (0, 0, 200, 200)
FontSize			= 18
ClearPos			= (512, 332)
//CompilePos	    = (0, 0)
SysNamePos		    = (60, 2)
//HelpRect		    = (2000, 1000, 0, 0)
VersionSize		    = 18
VersionPos		    = (320, 120)
OptimizerHitRect    = (288, 208, 352, 272)
Piece0			    = "sub_hub"
Piece1			    = "servername"
Piece2			    = "sub_commands"
Piece3			    = "sub_hub_bg"
Piece4			    = "buildpoints_bar_fixed"
Light0			    = "Main0"

/*  -----[Subroutines Menu: Tooltips]-----
**  These values concern the tooltip that appears when moving the cursor
**  over applicable text. It seems that the position of each tooltip is
**  predefined and not modifiable. These values manage things that apply
**  to all tooltips.
**
**  ToolTipFontSize (Integer)
**      - The text height of the tooltip text.
**  ToolTipTogglePos (Point)
**      - The upper-left origin position of the setting at the bottom-
**      right of the screen that lets the player choose whether or not
**      tooltips should appear.
**      - This setting is managed by the Killer App Mod.
**  ToolTipToggleFontSize (Integer)
**      - The text height of the setting at the bottom-right of the
**      screen that lets the player choose whether or not tooltips
**      should appear.
**  ToolTipTitlePos (Point)
**      - The upper-left origin position of the "Show Tooltips:" text at
**      the bottom-right of the screen.
**      - This setting is managed by the Killer App Mod.
**  ToolTipTitleFontSize (Integer)
**      - The text height of the "Show Tooltips:" text at the bottom-
**      right of the screen.
**  ToolTipColor (Vector)
**      - The color of the special highlighted text at the beginning of
**      the tooltip, confirming the definition that it is currently
**      displaying.
**  ToolTipFrameColor (Vector)
**      - The background color used for the tooltip box. (This is NOT
**      the color of the border.)
**  ToolTipAlpha (Float)
**      - The opacity of the background color used for the tooltip box.
**  ToolTipWidth (Float)
**      - The total width of the tooltip box.
*/
ToolTipFontSize			= 14
ToolTipTogglePos		= (436, 374)
ToolTipToggleFontSize	= 18
ToolTipTitlePos			= (483, 359)
ToolTipTitleFontSize	= 18
ToolTipColor		    = <255.0, 135.0, 135.0> // SecurityProtocol
ToolTipFrameColor	    = <100.0, 0.0, 0.0> // SecurityProtocol
ToolTipAlpha		    = 0.85
ToolTipWidth		    = 200.0

/*  -----[Subroutines Menu: Build Notes]-----
**  These values concern the build note count that appears at the lower-
**  middle section of the screen.
**
**  BuildNoteCountColor (Vector)
**      - Unused function?
**  BuildNoteCountSize (Integer)
**      - The text height of the text keeping track of the total amount
**      of build notes that the player has collected.
**  BuildNoteCountPos (Point)
**      - The upper-middle origin position of the text keeping track of
**      the total amount of build notes that the player has collected.
**      - This setting is managed by the Killer App Mod.
**  BuildNoteCountStringId (Integer)
**      - The string ID from CRES.DLL to display as the build note
**      counter.
**  BuildNoteIconSpacer (Integer)
**      - The width of the space between the build note icon and the
**      build note counter text.
**  BuildNoteIconTexture (Path)
**      - Unused function. Although pointing it to a different texture
**      will display the texture near the center of the screen, this is
**      not recommended, as the position of that texture cannot change.
**  BuildNoteIconScalar (Float)
**      - The scale of the BuildNoteIconTexture.
*/
BuildNoteCountColor	    = <255, 255, 255>
BuildNoteCountSize	    = 14
BuildNoteCountPos	    = (321, 274)
BuildNoteCountStringId	= 3229
BuildNoteIconSpacer	    = 8
BuildNoteIconTexture    = "interface\hud\buildnote_hudicon_dummy.dtx"
BuildNoteIconScalar     = 1.0

/*  -----[Subroutines Menu: Arrows]-----
**  This is fairly self-explanatory, so instead of repeating the same
**  thing ten times, this'll be simplified. These values allocate the
**  space used to display the arrows next to the five rows of skills:
**  Health, Energy, Weapon Efficiency, Transfer Rate, and Processor.
**  These arrows only appear when the player gets their version number
**  upgraded, and disappear once all available build notes are spent.
**  One line declares the left arrow, the next declares the right, and
**  so on, and so forth.
**
**  All of these are managed by the Killer App Mod.
*/
ArrowLeftRect0	= (245, 180, 269, 194)
ArrowRightRect0	= (371, 180, 395, 194)
ArrowLeftRect1  = (245, 206, 269, 220)
ArrowRightRect1	= (371, 206, 395, 220)
ArrowLeftRect2	= (245, 233, 269, 247)
ArrowRightRect2	= (371, 233, 395, 247)
ArrowLeftRect3	= (245, 260, 269, 274)
ArrowRightRect3	= (371, 260, 395, 274)
ArrowLeftRect4	= (245, 286, 269, 300)
ArrowRightRect4	= (371, 286, 395, 300)

/*  -----[Save Game Menu]-----
**  SmallFontSize (Integer)
**      - The text height of the text listing all available save games.
**  Indent (Integer)
**      - Determines the indent of the bounding box listing saves from
**      the left side of PageRect.
**  NameWidth (Integer)
**      - The total width of the column listing save file names.
**  TimeWidth (Integer)
**      - The total width of the column listing save file creation dates.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenSave]
PageRect		= (140, 60, 585, 280)
FontSize		= 16
ItemSpace		= 3
SmallFontSize   = 12
Indent			= 0
NameWidth		= 300
TimeWidth		= 125
Light0			= "Main0"

/*  -----[Game Over Menu]-----
**  FailStringRect (Rectangle)
**      - The space allocated to display the Game Over text.
**      - This setting is managed by the Killer App Mod.
**  FailStringSize (Integer)
**      - The text height of the Game Over text.
**  HelpStringPos (Point)
**      - The position of the text that tells the player either to
**      QuickLoad or go to the Load screen.
**      - This setting is managed by the Killer App Mod.
**  HelpStringSize (Integer)
**      - The text height of the text that tells the player either to
**      QuickLoad or go to the Load Screen.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  Delay (Float)
**      - Unknown function. Unused?
*/
[ScreenFailure]
//MouseFX		= ""
//Delay			= 10.0
FailStringRect	= (20, 200, 620, 360)
FailStringSize	= 24
HelpStringPos	= (160, 360)
HelpStringSize	= 12
Light0			= "Main0"

/*  -----[Team Select Menu]-----
**  This is the Team Select menu for Disc Arena, Disc Tournament, and 
**  Light Cycles (both Free-For-All and Team).
**
**  PlayerTextColor (Vector)
**      - The text color of whichever line is currently displaying the
**      player's information. Includes all player stats, not just the
**      player name.
**  TextColor (Vector)
**      - The text color of all the other lines that aren't displaying
**      the player's information.
**  FrameColor (Vector)
**      - The background color of the bar at the top of the menu holding
**      the column names.
**  FrameAlpha (Float)
**      - The opacity of the bar at the top of the menu holding the
**      column names.
**  HeaderFontSize (Integer)
**      - The text height of the column header text.
**  TeamRect (Rectangle)
**      - The space allocated to display the menu of players currently
**      on a team.
**      - This setting is managed by the Killer App Mod.
**  TeamColumn (Integer),
**  MatchesWonColumn (Integer),
**  PlayerColumn (Integer),
**  GamesWonColumn (Integer),
**  PingColumn (Integer)
**      - The widths of all the columns that make up the list inside
**      TeamRect.
**      - PlayerColumn & GamesWonColumn are managed by the Killer App
**      Mod.
**  SpectatorRect (Rectangle)
**      - The space allocated to display the menu of players currently
**      spectating the game.
**      - This setting is managed by the Killer App Mod.
**  SpectatorColumn (Integer),
**  SpectatorPingColumn (Integer)
**      - The widths of both columns that make up the list inside
**      SpectatorRect.
**      - SpectatorColumn is managed by the Killer App Mod.
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[TeamSelect]
ListFontSize	    = 12
PlayerTextColor	    = <255.0, 255.0, 255.0>
TextColor		    = <192.0, 192.0, 192.0>
FrameColor		    = <240.0, 0.0, 0.0> // SecurityProtocol
FrameAlpha		    = 0.5
HeaderFontSize	    = 14
TeamRect		    = (32, 30, 440, 406)
TeamColumn		    = 80
MatchesWonColumn	= 100
PlayerColumn		= 133
GamesWonColumn		= 55
PingColumn		    = 40
SpectatorRect		= (460, 30, 620, 406)
SpectatorColumn		= 115
SpectatorPingColumn	= 25
Light0				= "Main0"

/*  -----[Team Derez Team Select Menu]-----
**  This is the Team Select menu for specifically Team Derez.
**
**  PlayerTextColor (Vector)
**      - The text color of whichever line is currently displaying the
**      player's information. Includes all player stats, not just the
**      player name.
**  TextColor (Vector)
**      - The text color of all the other lines that aren't displaying
**      the player's information.
**  FrameColor (Vector)
**      - The background color of the bar at the top of the menu holding
**      the column names.
**  FrameAlpha (Float)
**      - The opacity of the bar at the top of the menu holding the
**      column names.
**  HeaderFontSize (Integer)
**      - The text height of the column header text.
**  TeamRect (Rectangle)
**      - The space allocated to display the menu of players currently
**      on a team.
**      - This setting is managed by the Killer App Mod.
**  TeamColumn (Integer)
**      - The total width of the "Team" column (for the team's name).
**  RoundsWonColumn (Integer)
**      - The total width of the "Rounds Won" column.
**      - This setting is managed by the Killer App Mod.
**  PlayerColumn (Integer)
**      - The total width of the "Players" column (for player names).
**      - This setting is managed by the Killer App Mod.
**  FragsColumn (Integer)
**      - The total width of the "Derezzes" column.
**  PingColumn (Integer)
**      - The total width of the "Ping" column.
**  SpectatorRect (Rectangle)
**      - The space allocated to display the menu of players currently
**      spectating the game.
**      - This setting is managed by the Killer App Mod.
**  SpectatorColumn (Integer)
**      - The total width of the "Spectators" column (for player names).
**      - This setting is managed by the Killer App Mod.
**  SpectatorPingColumn (Integer)
**      - The total width of the "Ping" column (for spectators).
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[TDMTeamSelect]
ListFontSize	    = 12
PlayerTextColor	    = <255.0, 255.0, 255.0>
TextColor		    = <192.0, 192.0, 192.0>
FrameColor		    = <0.0, 64.0, 240.0>
FrameAlpha		    = 0.5
HeaderFontSize	    = 14
TeamRect		    = (20, 64, 440, 440)
TeamColumn		    = 120
RoundsWonColumn	    = 80
PlayerColumn		= 120
FragsColumn		    = 60
PingColumn		    = 40
SpectatorRect		= (460, 64, 620, 440)
SpectatorColumn		= 115
SpectatorPingColumn	= 25
Light0				= "Main0"

/*  -----[Unknown Menu "ScreenSecurity"]-----
**  I can't believe they predicted my mod when they made the game.
**  But seriously, what is this menu? It seems empty. Commenting out the
**  entire menu does not crash the game. Maybe unused?
**
**  Light# (String)
**      - The string ID of a Light to use for the menu.
*/
[ScreenSecurity]
//MouseFX   = "none"
Light0	    = "Main0"

/*  -----[Loading Screens]-----
**  Loading screens all use the same setup, with LoadScreenDefault
**  setting the default attributes that the successive loading screens
**  override. 
**  TODO identify and name all of the loading screens
**
**  TitleColor (Vector)
**      - The color of the current chapter name.
**  LevelPos (Point),
**  LevelFont (Integer),
**  LevelSize (Integer),
**  LevelColor (Vector)
**      - The upper-left origin position, font ID, text height, and 
**      color of the current level name, in that order.
**      - LevelPos is managed by the Killer App Mod.
**  ContinuePos (Point),
**  ContinueFont (Integer),
**  ContinueSize (Integer),
**  ContinueColor (Vector)
**      - The upper-left origin position, font ID, text height, and
**      color of the "press any key to continue" string.
**      - ContinuePos is managed by the Killer App Mod.
**  PreLoopFX# (String)
**      - The string ID of a PreLoopFX to use for the menu.
**  LoadScale# (String)
**      - The string ID of a LoadScale to use for the menu.
**  PostScale# (String)
**      - The string ID of a LoadScale to use for the menu.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  BriefingFont (Integer)
**      - Unused function. Deprecated from NOLF briefing screens.
**  BriefingSize (Integer)
**      - Unused function. Deprecated from NOLF briefing screens.
**  BriefingRect (Rectangle)
**      - Unused function. Deprecated from NOLF briefing screens.
**  BriefingColor (Vector)
**      - Unused function. Deprecated from NOLF briefing screens.
*/
[LoadScreenDefault]
TitlePos		= (40, 50)
TitleFont		= 1
TitleSize		= 24
TitleColor		= <255.0, 255.0, 255.0>
LevelPos		= (40, 75)
LevelFont		= 1
LevelSize		= 20
LevelColor		= <255.0, 255.0, 255.0>
//BriefingFont	= 1
//BriefingSize	= 16
//BriefingRect	= (50, 120, 310, 350)
//BriefingColor	= <255.0, 255.0, 255.0>
ContinuePos		= (40, 415)
ContinueFont	= 1
ContinueSize	= 24
ContinueColor   = <0.0, 0.0, 0.0>
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "loadingBackground_sprite"
LoadScale2		= "loadingModel"

[LoadScreenC01]
TitleColor		= <0.0, 32.0, 96.0>
//BriefingColor	= <0.0, 0.0, 0.0>
LoadScale0		= "LoadTest"
LoadScale1		= "loadingBit"

[LoadScreenM01]
PreLoopFX0	= "LOAD_Test"
LoadScale0	= "LoadTest"
LoadScale1	= "LoadingBackground_sprite"
LoadScale2	= "Loading_Mission_M01"
LoadScale3	= "loadingModel"
PostScale0	= "LoadingBackground_sprite"
PostScale1	= "Loading_Mission_M01"

[LoadScreenM02]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M02"

[LoadScreenM03]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M03"

[LoadScreenM04]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M04"

[LoadScreenM05]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M05"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M05"

[LoadScreenM06]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M06"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M06"

[LoadScreenM07]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M07"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M07"

[LoadScreenM08]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M08"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M08"

[LoadScreenM09]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M09"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M09"

[LoadScreenM10]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M10"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M10"

[LoadScreenM11]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M11"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M11"

[map0]
NameId			= 9699
LevelNameId		= 9700
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_map0"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_map0"

[LC_01s01]
NameId			= 9699
LevelNameId		= 9704
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_01s01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_01s01"


[LC_01s02]
NameId			= 9699
LevelNameId		= 9708
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_01s02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_01s02"


[LC_01s03]
NameId			= 9699
LevelNameId		= 9713
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_01s03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_01s03"


[LC_01s04]
NameId			= 9699
LevelNameId		= 9702
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_01s04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_01s04"


[LC_02s01]
NameId			= 9699
LevelNameId		= 9701
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_02s01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_02s01"


[LC_02s02]
NameId			= 9699
LevelNameId		= 9705
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_02s02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_02s02"


[LC_02s03]
NameId			= 9699
LevelNameId		= 9716
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_02s03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_02s03"


[LC_02s04]
NameId			= 9699
LevelNameId		= 9711
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_02s04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_02s04"


[LC_03s01]
NameId			= 9699
LevelNameId		= 9703
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_03s01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_03s01"


[LC_03s02]
NameId			= 9699
LevelNameId		= 9709
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_03s02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_03s02"


[LC_03s03]
NameId			= 9699
LevelNameId		= 9712
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_03s03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_03s03"


[LC_03s04]
NameId			= 9699
LevelNameId		= 9714
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_03s04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_03s04"


[LC_04s01]
NameId			= 9699
LevelNameId		= 9706
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_04s01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_04s01"


[LC_04s02]
NameId			= 9699
LevelNameId		= 9710
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_04s02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_04s02"


[LC_04s03]
NameId			= 9699
LevelNameId		= 9715
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_04s03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_04s03"


[LC_04s04]
NameId			= 9699
LevelNameId		= 9707
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_LC_04s04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_LC_04s04"


[DiscArena01]
LevelNameId		= 2549
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena01"


[DiscArena02]
LevelNameId		= 2550
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena02"


[DiscArena03]
LevelNameId		= 2551
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena03"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena03"


[DiscArena04]
LevelNameId		= 2552
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena04"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena04"


[DiscArena05]
LevelNameId		= 2553
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena05"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena05"


[LightCycleDefault]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_Mission_M02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_Mission_M02"


[MultiplayerLightcycleDefault]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena02"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena02"


[DiscArenaDefault]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena01"


[DiscTournamentDefault]
PreLoopFX0		= "LOAD_Test"
LoadScale0		= "LoadTest"
LoadScale1		= "LoadingBackground_sprite"
LoadScale2		= "Loading_DiscArena01"
LoadScale3		= "loadingModel"
PostScale0		= "LoadingBackground_sprite"
PostScale1		= "Loading_DiscArena01"


/************************************************************************
**
**	                            Font Layout
**
**  In TRON 2.0, pretty much all dynamic text in the game uses the same
**  font. Additionally, the font system used in TRON 2.0 is completely
**  unique to it, as it goes completely unused in any Lithtech Engine
**  games both before and after it. This makes the ability to create and
**  manage these fonts almost entirely impossible, as no font editing
**  tool was ever released, officially or otherwise. Setting any font
**  path to reference a .TTF file will not make the game work with it.
**
**  As such, the only fonts available to use are ones that are already
**  in the game files, and have a .FFA, .FFB, and .DTX file associated
**  with them. Besides the TwenCen font and its aliased version, the
**  two other usable fonts are TronConsole and TronFont. The only way to
**  modify any of these fonts is to modify their respective .DTX files.
**
**  Font# (Path)
**      - The font file used by the game. Must be in .FFB format.
**  FontSize# (Integer)
**      - The intended text height of the font file. This should always
**      be set to the size indicated in the name of the font file.
*/
[Fonts]
Font0			= "Interface\Fonts\TwenCen_20.ffb"
FontSize0		= 20
Font1			= "Interface\Fonts\TwenCen_20.ffb"
FontSize1		= 20
Font2			= "Interface\Fonts\TwenCen_20.ffb"
FontSize2		= 20
Font3			= "Interface\Fonts\TwenCen_20.ffb"
FontSize3		= 20
Font4			= "Interface\Fonts\TwenCen_20.ffb"
FontSize4		= 20
Font5			= "Interface\Fonts\TwenCen_20_Aliased.ffb" 
FontSize5		= 10


/************************************************************************
**
**	                             HUD Layout
**
**  The HUDLayout definitions specify positions and sizes for in-game
**  interface components. The first definition, HudLayout0, demands that
**  most of the valid arguments be defined. These values are then treated
**  as defaults for all of the other HUDLayouts. For example, HUDLayout1
**  does not have a defined BarHeight or TextHeight, and will therefore
**  use HudLayout0's BarHeight and TextHeight as a fallback.
**
**  Definitions for each setting will be provided in their respective
**  sections.
**
**	LayoutName (Integer)
**      - The string ID used to identify the layout configuration.
**      - DO NOT CHANGE - String ID does NOT reference CRES.DLL and
**      the actual source is not known.
**	UseAmmoBar (Integer)
**      - Boolean value that determines if the ammo display is visible.
**		- 0 hides the ammo bar, 1 shows the ammo bar.
**      - TRON 2.0 does not use traditional ammo, so this should always
**      be set to 0.
**      
*/
[HUDLayout0]
LayoutName	    = 385
UseAmmoBar	    = 0

/*  -----[Armor Indicator]-----
**  This is the graphic at the bottom-right that tells you what pieces
**  of armor you're currently wearing.
**
**  ArmorOffset (Point)
**      - The offset of the armor display from the lower-right corner
**      of the screen.
**      - Monolith note: All bitmaps used are specified in
**      SUBROUTINES.TXT. (What does this have to do with armor?)
*/
ArmorOffset	= (10, 10)

/*  -----[Health & Energy]-----
**  These are self-explanatory - they control the Health & Energy bars.
**  Does not include the Permissions ring between them.
**
**	BarHeight (Integer)
**		- The total height used for the Health & Energy bars.
**      - This setting is managed by the Killer App Mod.
**	HealthBarWidth (Integer),
**  EnergyBarWidth (Integer)
**      - The total width used for the Health & Energy bars.
**  HealthTex (Rectangle)
**      - The space allocated to display the Health bar foreground (the
**      bright red layer).
**  HealthFGOffset (Point)
**      - The offset of the Health bar foreground (the bright red layer)
**      from the lower-middle point of the screen.
**  HealthBGTex (Rectangle)
**      - The space allocated to display the Health bar background (the
**      dark red layer as well as the little blue line around it).
**  HealthBGOffset (Point)
**      - The offset of the Health bar background (the dark red layer as
**      well as the little blue line around it) from the lower-middle
**      point of the screen.
**  EnergyTex (Rectangle)
**      - The space allocated to display the Energy bar foreground (the
**      bright green layer).
**  EnergyFGOffset (Point)
**      - The offset of the Energy bar foreground (the bright green
**      layer) from the lower-middle point of the screen.
**  EnergyBGTex (Rectangle)
**      - The space allocated to display the Energy bar background (the
**      dark green layer as well as the little blue line around it).
**  EnergyBGOffset (Point)
**      - The offset of the Energy bar background (the dark green layer
**      as well as the little blue line around it) from the lower-middle
**      point of the screen.
**  TextHeight (Integer)
**      - The text height of the Health & Energy indicator text.
**  HealthEnergyFont (Integer),
**  HealthEnergyFontSize (Integer)
**      - The font ID and text height of the Health & Energy indicators.
**  HealthTextOffset (Point),
**  EnergyTextOffset (Point)
**      - The offset of the Health & Energy indicators from the lower-
**      middle point of the screen.
**
**  ---[SAFELY DEPRECATED VALUES]---
**	BarScale (Float?)
**		- The number of pixels per point in the Health and Energy HUD
**      bars?
**      - Changing this value appears to have no effect.
**  HealthBlinkTime (Integer)
**      - Unknown function. Health doesn't blink, even when taking
**      damage...?
**  HealthBlinkTex (Rectangle)
**      - Unknown function. Health doesn't blink, even when taking
**      damage...?
**  EnergyDeficitTex (Rectangle)
**      - Unknown function. Was it possible at one point to have
**      a negative energy level?
*/
BarHeight				= 14
//BarScale				= 1
HealthBarWidth			= 158
//HealthBlinkTime		= 2
EnergyBarWidth			= 158
HealthTex				= (118, 146, 254, 159)
HealthFGOffset			= (67, -20)
HealthBGTex				= (2, 233, 254, 251)
HealthBGOffset			= (0, -25)
//HealthBlinkTex		= (349, 441, 509, 451)
EnergyTex				= (118, 161, 254, 174)
EnergyFGOffset			= (-65, -20)
EnergyBGTex				= (3, 200, 253, 217)
EnergyBGOffset			= (0, -25)
//EnergyDeficitTex		= (118, 175, 254, 185)
TextHeight				= 20
HealthEnergyFont		= 0
HealthEnergyFontSize 	= 32
HealthTextOffset		= (60, -15)
EnergyTextOffset 		= (-60, -15)

/*  -----[Weapon Indicator]-----
**  This is just the small single box at the top-right corner of the
**  screen that lets the player know what their currently equipped
**  weapon is.
**
**  WeaponIndicatorAnimTime (Float)
**      - Unknown function. It has something to do with the transition
**      between seeing all of the weapons to just seeing the currently
**      equipped one, but changing this value did not really make it
**      easier to understand.
**  WeaponIndicatorOffset (Point)
**      - The offset of the currently equipped weapon indicator from the
**      (almost) upper-left corner of the screen.
**  WeaponIndicatorIconOffset (Point)
**      - The offset of the currently equipped weapon's icon from the
**      lower-right corner of the indicator box that contains it.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  WeaponIndicatorBox (Rectangle)
**      - Unknown function.
**  WeaponIndicatorTex (Path)
**      - Unknown function.
*/
//WeaponIndicatorBox		= (70, 75, 116, 116)
//WeaponIndicatorTex		= "interface\hud\hud.dtx"
WeaponIndicatorAnimTime	    = 0.25
WeaponIndicatorOffset		= (10, 10)
WeaponIndicatorIconOffset	= (-7, -12)

/*  -----[Weapon Chooser]-----
**  This is the larger graphic that appears when the player wants to
**  change their currently equipped weapon.
**
**  ChooserTex (Path),
**  ChooserTexHi (Path)
**      - The texture used as the background box for an available
**      weapon, when not highlighted and highlighted respectively.
**      - ChooserTexHi is reused for the Weapon Indicator.
**  ChooserCorruptTex (Path),
**  ChooserCorruptTexHi (Path)
**      - The texture used as the background box for an available, but
**      corrupted weapon, when not highlighted and highlighted
**      respectively.
**  ChooserEmptyTex (Path)
**      - The texture used as the background box for an unavailable
**      weapon, when not highlighted. Only appears when the player has
**      insufficient energy to use that weapon.
**  ChooserEmptyTexHi (Path)
**      - The texture used as the background box for an unavailable
**      weapon, when highlighted. The player isn't able to highlight
**      weapons they can't use, so this is technically an unused value.
**  ChooserTextColor (Vector),
**  ChooserTextSize (Integer)
**      - The color and text height of the string displaying the name of
**      the currently highlighted weapon.
**  ChooserBoxSize (Size)
**      - The defined width and height of each available weapon box.
**      Does not affect the texture size, just the box itself.
**      - This setting is managed by the Killer App Mod.
**  ChooserSpacing (Width, Height)
**      - The defined width and height of the spacing between each
**      available weapon box.
**  ChooserIconOffset (Point)
**      - The offset of an available weapon's icon from the lower-right
**      corner of the chooser box that contains it.
**  ChooserMargin (Point)
**      - The (scalable?) offset of the weapon chooser from the upper-
**      right corner of the screen.
**  ClassNumber# (Path),
**  ClassNumberHi# (Path)
**      - These point to the textures used to indicate the numbers of
**      the available weapon classes (4 in total), when not highlighted
**      and highlighted respectively.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  ChooserTextAlpha (Float)
**      - Probably the alpha of the text displaying the name of the
**      currently highlighted weapon. Changing it did nothing.
**  ChooserUVTitleBox (Rectangle)
**      - Unknown function.
**  ChooserTitleHight (Integer)
**      - Unknown function. Maybe the chooser box used to have a title?
**  ChooserIntroTime (Float)
**      - Unknown function. It seems the fade-in is managed elsewhere.
**  ChooserOutroTime (Float)
**      - Unknown function. It seems the fade-out is managed elsewhere.
*/
ChooserTex			    = "interface\hud\currentweapon.dtx"
ChooserTexHi			= "interface\hud\currentweapon_hl.dtx"
ChooserCorruptTex		= "interface\hud\currentweapon_corrupt.dtx"
ChooserCorruptTexHi		= "interface\hud\currentweapon_corrupt_hl.dtx"
ChooserEmptyTex			= "interface\hud\currentweapon_empty.dtx"
ChooserEmptyTexHi		= "interface\hud\currentweapon_empty_hl.dtx"
//ChooserTextAlpha		= 1.0
ChooserTextColor		= <255.0, 149.0, 0.0> // SecurityProtocol
ChooserTextSize			= 24
//ChooserUVTitleBox		= (117, 18, 254, 43)
ChooserBoxSize			= (46, 42)
ChooserSpacing			= (0, 6)
ChooserIconOffset		= (-7, -12)
ChooserMargin			= (10,10) // SecurityProtocol
//ChooserTitleHeight	= 0
//ChooserIntroTime		= 0.5
//ChooserOutroTime		= 0.5
ClassNumber1			= "Interface\hud\currentweaponTab_1.dtx"
ClassNumber2			= "Interface\hud\currentweaponTab_2.dtx"
ClassNumber3			= "Interface\hud\currentweaponTab_3.dtx"
ClassNumber4			= "Interface\hud\currentweaponTab_4.dtx"
ClassNumberHi1			= "Interface\hud\currentweapon_hlTab_1.dtx"
ClassNumberHi2			= "Interface\hud\currentweapon_hlTab_2.dtx"
ClassNumberHi3			= "Interface\hud\currentweapon_hlTab_3.dtx"
ClassNumberHi4			= "Interface\hud\currentweapon_hlTab_4.dtx"

/*  -----[New Objective Indicator]-----
**  I'm leaving this in, but not sure if it's actually used, assuming
**  that it references the UPDATE_FLASH texture. It doesn't seem to be
**  visible anywhere.
**
**  ObjectiveOffsetChris (Point)
**      - Chris' silly little objective indicator. Pay it no mind.
**      - Seriously, don't bother looking at it. Just.. move on.
**      - ...
**      - Why are you still reading this? Go modify a different value,
**      this one's off-limits.
**  ObjectiveOffset (Point)
**      - The offset of the new objective indicator.
*/  
ObjectiveOffsetChris	= (8, -264)
ObjectiveOffset			= (8, -40)

/*  -----[Pings]-----
**  These are for the pings that pop up on the left side of the screen
**  when certain events happen, like getting new subroutines, getting an
**  I/O node message, or getting a new objective.
**
**  PingIconSize (Width, Height)
**      - The defined width and height of the ping icon boxes. Does not
**      affect the texture size, just the boxes themselves.
**      - This setting is managed by the Killer App Mod.
**  PingStartPoint (Point)
**      - The upper-left origin position of the ping list.
**      - This setting is managed by the Killer App Mod.
**  PingSpacing (Width, Height)
**      - The defined width and height of the spacing between ping icon
**      boxes.
**  PingBlinkCount (Integer)
**      - The amount of times a ping will blink when it pops up.
**
**  ---[SAFELY DEPRECATED VALUES]---
**  PingFontNum (Integer)
**      - Unused function. Pings don't use text.
**  PingFontSize (Integer)
**      - Unused function. Pings don't use text.
**  PingBlinkTime (Float)
**      - Unused function. This seems to be managed elsewhere.
*/
PingIconSize		= (130, 65)
PingStartPoint		= (6, 105)
PingSpacing			= 0
//PingFontNum		= 0
//PingFontSize		= 0
PingBlinkCount		= 4
//PingBlinkTime		= 0.5

/*  -----[Permission Set Indicator]-----
**  This is the permission ring at the center of the screen. It's unique
**  in that it's one of the few elastic elements - meaning the width and
**  height can be different and the entire HUD element is able to scale
**  accordingly.
**
**  PsetOffset (Point)
**      - The offset of the permission set indicator from the lower-
**      middle point of the screen.
**  PsetWidth (Integer),
**  PsetHeight (Integer)
**      - The width and height of the permission set indicator.
*/
PsetOffset	= (0,0) // SecurityProtocol
PsetWidth	= 80 // SecurityProtocol
PsetHeight	= 80 // SecurityProtocol

/*  -----[Crosshair Text Elements]-----
**  This isn't about the crosshair itself; rather, it's meant to be for
**  the stuff around the crosshair. The Activation Text is the yellow
**  text beneath the crosshair that shows up when something can be
**  interacted with, and the Info Text is... something.
**
**  ActivationTextPos (Point)
**      - The upper-left origin position of the activation text.
**      - This setting is managed by the Killer App Mod.
**  ActivationTextSize (Integer)
**      - The text height of the activation text.
**  ActivationTextJustify (Integer)
**      - The justification value of the activation text.
**      - TODO figure out what the justification values are and/or mean
**  ActivationTextAlpha (Float)
**      - The opacity of the activation text.
**  ActivationTextColor (Vector)
**      - The color of the activation text.
**  ActivationTextDisAlpha (Integer)
**      - The opacity of the activation text, when disabled.
**      - Is this used?
**  ActivationTextDisColor (Vector)
**      - The color of the activation text, when disabled.
**      - Is this used?
**
**  Info Text is I guess used? What is this?
**  InfoTextPos (Point)
**      - This setting is managed by the Killer App Mod.
**  InfoTextSize (Integer)
**  InfoTextWidth (Integer)
**  InfoTextJustify (Integer)
**  InfoTextAlpha (Integer?)
**  InfoTextColor (Vector)
**  InfoTextBadAlpha (Integer?)
**  InfoTextBadColor (Vector)
**  
**  ---[SAFELY DEPRECATED VALUES]---
**  Deprecated all of the debug text values. It seems to have been a dev
**  feature removed before the retail release went out, so there's no
**  reason to keep them around. The values are below, but won't have
**  definitions.
**  DebugTextPos (Point)
**  DebugTextSize (Integer)
**  DebugTextJustify (Integer)
**  DebugTextAlpha (Float)
**  DebugTextColor (Vector)
*/
ActivationTextPos		= (320, 255)
ActivationTextSize		= 14
ActivationTextJustify	= 2
ActivationTextAlpha		= 1.0
ActivationTextColor		= <255.0, 255.0, 0.0>
ActivationTextDisAlpha  = 255
ActivationTextDisColor	= <128.0, 128.0, 128.0>
//DebugTextPos			= (360,100)
//DebugTextSize			= 12
//DebugTextJustify		= 0
//DebugTextAlpha	    = 1.0
//DebugTextColor		= <255.0, 255.0, 255.0>
InfoTextPos			    = (320, 275)
InfoTextSize			= 12
InfoTextWidth			= 200
InfoTextJustify			= 2
InfoTextAlpha			= 128
InfoTextColor			= <255.0, 255.0, 0.0>
InfoTextBadAlpha	    = 128
InfoTextBadColor		= <255.0, 64.0, 64.0>

/*  -----[Data Log]-----
**  What's this?
**
**  DataLogRect (Rectangle)
**  DataLogFontSize (Integer)
**  DataLogHeaderFontSize (Integer)
**  DataLogFrame (Path)
*/
DataLogRect			    = (150, 50, 490, 400)
DataLogFontSize			= 20
DataLogHeaderFontSize	= 18
DataLogFrame			= "interface\hud\hud.dtx"

/*  -----[Profiler Subroutine Text]-----
**  This is the text for the Profiler subroutine.
**
**  ProfilerPos (Point)
**      - The lower-right origin position of the Profiler text.
**  ProfilerTextSize (Integer)
**      - The text height of the Profiler text.
*/
ProfilerPos			= (370, 240)
ProfilerTextSize	= 16

/*  -----[LOL & Triangulate Subroutine Zoom Values]-----
**  The exact unit of measurement used for the FOV zoom is unknown, but
**  the effect is consistent at least. When Triangulate is equipped, the
**  game moves between the three zoom values for Triangulate. When the
**  LOL is equipped, the game uses the single zoom value for the LOL.
**
**  When BOTH subroutines are equipped, and the player zooms in with the
**  LOL, it will initially use the LOL zoom value; however, if the
**  player zooms in further and then zooms back out to the first value,
**  the game will instead use the first Triangulate value rather than
**  going back to the LOL value. This resets every time the zoom is
**  exited.
**
**  FOVZoomLOL (Float)
**      - The designated FOV zoom value when the player scopes in with
**      the LOL.
**  FOVZoomTriangulate# (Float)
**      - The designated FOV zoom values when the player scopes in with
**      Triangulate. 3 maximum values permitted.
*/
FOVZoomLOL			    = 30.0
FOVZoomTriangulate1		= 20.0
FOVZoomTriangulate2		= 7.0
FOVZoomTriangulate3		= 3.0

/*  -----[Distance Icon]-----
**  What's this?
**
**  DistanceIconPos (Point)
**  DistanceIconBlinkSpeed (Float)
**  DistanceIconAlpha (Float)
**  DistanceIconFadeOutSpeed (Float)
*/
DistanceIconPos			= (294, 336)
DistanceIconBlinkSpeed		= 6.0
DistanceIconAlpha		= 0.8
DistanceIconFadeOutSpeed	= 1.0

/*  -----[Light Cycle HUD Elements]-----
**  The HUD is completely different while using a Light Cycle. Luckily,
**  this is one of the very few areas where Monolith provided the exact
**  definition for all of these values!
**
** ---[Powerups]---
**  PowerupIconPos (Point)
**      - The "true center" origin position of the player's currently
**      stored powerup.
**  PowerupIconTexture# (Path)
**      - The textures used to display the icon for each powerup.
**      - The texture names can speak for themselves, but here's the
**      list anyways:
**      Powerup 0: Shield Break
**      Powerup 1: Turbo Boost
**      Powerup 2: Wall Spike
**      Powerup 3: Missile
**      Powerup 4: Wall Extender
**      Powerup 5: Turbo Curse
**      Powerup 6: Grab
**      Powerup 7: Wall Reset
**      Powerup 8: Force Use
*/
PowerupIconPos		= (320, 32)
PowerupIconTexture0	= "Interface\HUD\LC_pickup_Shield.dtx"
PowerupIconTexture1	= "Interface\HUD\LC_pickup_TurboBoost.dtx"
PowerupIconTexture2	= "Interface\HUD\LC_pickup_TrailSpike.dtx"
PowerupIconTexture3	= "Interface\HUD\LC_pickup_Missle.dtx"
PowerupIconTexture4	= "Interface\HUD\LC_pickup_WallExtender.dtx"
PowerupIconTexture5	= "Interface\HUD\LC_pickup_TurboCurse.dtx"
PowerupIconTexture6	= "Interface\HUD\LC_pickup_Grab.dtx"
PowerupIconTexture7	= "Interface\hud\LC_pickup_Reset.dtx"
PowerupIconTexture8	= "Interface\HUD\LC_pickup_ForceUse.dtx"

/*  ---[Lives]---
**  Lives are only used in the Single Player Light Cycle Circuits.
**
**  LivesIconPos (Point)
**      - The upper-right origin position of the lives icon.
**  LivesTextOffset (Integer)
**      - The offset of the lives text to the left of the lives icon.
**  LivesTextHeight (Integer)
**      - The text height of the lives text.
*/
LivesIconPos	= (625, 0)
LivesTextOffset	= 4	
LivesTextHeight	= 16

/*  ---[Roster]---
**  This is the list showing the remaining competitors in the current
**  race.
**
**  RosterPosition (Point)
**      - The upper-left origin position of the entire roster list.
**      - This setting is managed by the Killer App Mod.
**  RosterTextHeight (Integer)
**      - The text height of the names on the roster.
**  RosterTextOffset (Integer)
**      - The offset of the roster names to the left of their respective
**      icons.
**  RosterLineOffset (Integer)
**      - The vertical spacing between roster lines.
**  RosterEnableIconScaling (Integer)
**      - Boolean value. Decides whether roster icon scaling is enabled
**      or not.
**  RosterIconBaseSizeIfScalingIsEnabled (Size)
**      - The defined minimum width and height of a roster icon. Only
**      used if RosterEnableIconScaling is set to 1.
**      - This setting is managed by the Killer App Mod.
*/
RosterPosition					= (6, 46)
RosterTextHeight				= 14
RosterTextOffset				= 4
RosterLineOffset				= 4
RosterEnableIconScaling			= 1
RosterIconBaseSizeIfScalingIsEnabled= (26, 16)

/*  ---[Intro]---
**  Not sure what this is?
**
**  IntroMasterPos (Point)
**      - The upper-middle origin position of the intro frame.
**  IntroVFrameBorder (Integer),
**  IntroHFrameBorder (Integer)
**      - The vertical and horizontal distance between the intro text
**      and frame.
**  IntroTitleHeight (Integer),
**  IntroEntryHeight (Integer)
**      - The text height of the title and entry text.
**  IntroTitleSpace (Integer)
**      - The vertical space between the title and the top of the first
**      entry.
**  IntroEntrySpace (Integer)
**      - The vertical spacing between entries.
**  IntroHeaderOffset (Integer),
**  IntroValueOffset (Integer)
**      - The offset of the header and value texts from the center of
**      the screen.
**      - These settings are managed by the Killer App Mod.
**  IntroValueTime (Float)
**      - The amount of time, in seconds, to show the intro screen for.
**  IntroFrameBackground (Path)
**      - The texture used for the intro frame background.
**      - Potentially unused.
**   IntroTexturedFrameName (String)
**      - The name of the TexturedFrame object used for the intro frame.
**      - For more details, see the "Textured Frames Layout" section.
**      - Potentially unused.
*/
IntroMasterPos					= (320, 8)
IntroVFrameBorder				= 6
IntroHFrameBorder				= 10
IntroTitleHeight				= 22
IntroEntryHeight				= 16
IntroTitleSpace					= 6
IntroEntrySpace					= 6
IntroHeaderOffset				= -81
IntroValueOffset				= 49
IntroValueTime					= 4.0
IntroFrameBackground			= "interface\menu\sprtex\frame_solid.dtx"
IntroTexturedFrameName			= "lightcycle_start"

/*  ---[Speedometer]---
**  SpeedometerPos (Point)
**      - The upper-left origin position of the speedometer.
**      - This setting is managed by the Killer App Mod.
**  SpeedometerFontNum (Integer),
**  SpeedometerTextHeight (Integer)
**      - The font ID and text height of the speedometer text.
**  SpeedometerVBorder (Integer),
**  SpeedomederHBorder (Integer)
**      - The vertical and horizontal distance between the speedometer
**      text and frame border. (Text is horizontally offset from the
**      right side.)
**      - These settings are managed by the Killer App Mod.
**  SpeedometerFrameWidth (Integer),
**  SpeedometerFrameHeight (Integer)
**      - The total width and height of the speedometer frame.
**      - These settings are managed by the Killer App Mod.
**  SpeedometerFrameBackground (Path)
**      - The texture used for the speedometer frame background.
**      - Potentially unused.
**  SpeedometerTexturedFrameName (String)
**      - The name of the TexturedFrame object used for the speedometer
**      frame.
**      - For more details, see the "Textured Frames Layout" section.
**      - Potentially unused.
*/
SpeedometerPos					= (34, 8)
SpeedometerFontNum				= 4
SpeedometerTextHeight			= 24
SpeedometerVBorder				= 3
SpeedometerHBorder				= -23
SpeedometerFrameWidth			= 26
SpeedometerFrameHeight			= 24
SpeedometerFrameBackground		= "interface\hud\frame_lightcycle.dtx"
SpeedometerTexturedFrameName	= "lightcycle_speedometer"

/*  -----[HUD Layout 1]-----
**  Was this kept around for anything?
**  Hold off on documentation
*/
[HUDLayout1]
ArmorOffset				                = (-64, -128)
HealthEnergyFontSize 	                = 0
HealthBarWidth			                = 0
EnergyBarWidth			                = 0
HealthBGTex				                = (0, 0, 0, 0)
EnergyBGTex				                = (0, 0, 0, 0)
WeaponIndicatorOffset	                = (-64, 0)
PingIconSize			                = (0,0)
PsetWidth				                = 0
PsetHeight				                = 0
ActivationTextPos		                = (320, -16)
InfoTextPos			                    = (320, -16)
ProfilerTextSize	                    = 0
PowerupIconTexture0		                = "Interface\HUD\Reticle.dtx"
PowerupIconTexture1		                = "Interface\HUD\Reticle.dtx"
PowerupIconTexture2				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture3				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture4				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture5				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture6				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture7				        = "Interface\HUD\Reticle.dtx"
PowerupIconTexture8				        = "Interface\HUD\Reticle.dtx"
LivesIconPos					        = (0, -32)
LivesTextHeight					        = 0
RosterTextHeight				        = 0
RosterIconBaseSizeIfScalingIsEnabled    = (0, 0)
IntroTitleHeight				        = 0
IntroEntryHeight				        = 0
SpeedometerTextHeight			        = 0
DistanceIconAlpha		                = 0


/************************************************************************
**
**	                        Player Version Number
**  
**  The VersionNumber definition manages the HUD element displaying the
**  player's name and  current version number. For the build note count
**  beneath it, see the next section below.
**
**  When the player picks up a Build Note, the game will perform either
**  a major or a minor upgrade. A major upgrade occurs when the first of
**  the three numbers increments. A minor upgrade occurs when the second
**  or the third numbers increment.
**
**	Position (Point)
**      - The upper-left origin position of the version number.
**	Font (Integer)
**		- The font ID of the version number.
**	FontSize (Integer)
**		The pixel height of the version number.
**	BaseColor (Vector)
**		- The color of the version number text.
**	MinorUpgradeColor (Vector),
**	MajorUpgradeColor (Vector)
**      - The colors that the text will flash to when the player's
**      version number is upgraded. 
**	MinorUpgradeLoops (Integer),
**	MajorUpgradeLoops (Integer)
**		- The amount of times the text will flash to the respective
**      upgrade color.
**	MinorUpgradeLoopLength (Float),
**	MajorUpgradeLoopLength (Float)
**		- The amount of time, in seconds, that the text will take to
**      perform a single flash to the respective upgrade color.
*/
[VersionNumber]
Position		        = (10, 5)
Font			        = 0
FontSize		        = 16
BaseColor		        = <255.0, 90.0, 90.0> // SecurityProtocol
MajorUpgradeColor	    = <255.0, 255.0, 255.0>
MinorUpgradeColor	    = <255.0, 255.0, 255.0>
MajorUpgradeLoops	    = 10
MinorUpgradeLoops	    = 10
MajorUpgradeLoopLength	= 1.0
MinorUpgradeLoopLength	= 0.7

/************************************************************************
**
**	                         Build Note Counter
**
**  The BuildNoteCount definition manages the HUD element displaying the
**  amount of build notes that the player can get on the current map.
**  
**  AnchorPos (Point)
**      - The upper-left origin position of the build note counter.
**  IconTexture (Path)
**      - The texture used for the build note icon to the left of the
**      counter.
**  TextSize (Integer)
**      - The pixel height of the build note counter text.
**  BaseColor (Vector)
**      - The color of the build note counter text.
*/
[BuildNoteCount]
AnchorPos	= (12, 22)
IconTexture = "interface\hud\buildnote_hudicon.dtx"
TextSize	= 16
BaseColor	= <255.0, 90.0, 90.0> // SecurityProtocol


/************************************************************************
**
**	                        I/O Node HUD Elements
**
**  The IONodeCam definition manages the HUD elements used for I/O Node
**  calls. There are two main pieces to it: Piece 1 is for the frame and
**  the ring decoration to its sides, and Piece 2 is for the static
**  inside the frame and (assumedly) the glow of the decoration.
**
**  Understanding how these I/O Nodes work ingame is a bit difficult, so
**  it's unlikely the definitions provided here will explain it well or
**  are even fully accurate, especially in the case of Piece2.
**
**	Center (Point)
**      - This defines the "center of the screen" that the HUD Pieces
**      will use for reference.
**	Piece1Tex (Path)
**      - The texture to use for the first I/O Node HUD Piece.
**	Piece1MinAlpha (Float),
**	Piece1MaxAlpha (Float)
**      - The highest and lowest opacity value that Piece1 will
**      fluctuate between.
**	Piece1Period (Float)
**      - The amount of time, in seconds, that Piece1 will take to
**      perform a single fluctuation.
**	Piece1Radius (Float)
**      - The width of the Piece1Tex, which makes up half of the frame.
**      The game will use this same width value when mirroring the
**      texture.
**      - This setting is managed by the Killer App Mod.
**	Piece2Tex (Path)
**      - The texture to use for the second I/O Node HUD Piece.
**	Piece2MinRadius	(Float),
**	Piece2MaxRadius (Float)
**      - The highest and lowest width value that Piece2 will fluctuate
**      between when performing a flicker.
**      - These settings are managed by the Killer App Mod.
**	Piece2MinInterval (Float),
**	Piece2MaxInterval (Float)
**      - The highest and lowest time, in seconds, that Piece2 will wait
**      between flickers.
**	Piece2MinFlickers (Integer),
**	Piece2MaxFlicker (Integer)
**      - The highest and lowest amount of times Piece2 will flicker
**      between the minimum and maximum radius?
**	Piece2FlickerTime (Float)
**      - The amount of time, in seconds, that Piece2 will take to
**      perform a single flicker.
*/
[IONodeCam]
Center			    = (320, 357)
Piece1Tex			= "Interface\hud\IONode_hud.dtx"
Piece1MinAlpha		= 0.27
Piece1MaxAlpha		= 0.36
Piece1Period		= 3.0
Piece1Radius		= 216.0
Piece2Tex			= "Interface\hud\IONode_static.dtx"
Piece2MinRadius		= 214.0
Piece2MaxRadius		= 230.0
Piece2MinInterval	= 0.01
Piece2MaxInterval	= 0.25
Piece2MinFlickers	= 12
Piece2MaxFlicker	= 22
Piece2FlickerTime	= 0.04


/************************************************************************
**
**	                            Single String
**
**  The SingleString definition prints a persistent announcement to the
**  screen in multiplayer. This is the big yellow text that usually
**  shows up between rounds or between games.
**
**	Position (Point),
**  DiscMPPosition (Point)
**		- The upper-left origin position of the text. For Disc Arena and
**      Disc Tournament modes, use DiscMPPosition. For all other modes,
**      use Position.
**      - These settings are managed by the Killer App Mod.
**	Font (Integer),
**	FontSize (Integer),
**  FontColor (Vector)
**		- The font ID, pixel height, and color of the text.
*/
[SingleString]
Position = (320, 165)
DiscMPPosition = (320, 165)
Font = 0
FontSize = 27
FontColor = <255.0, 255.0, 90.0>


/************************************************************************
**
**	                    Utility Subroutine Chooser
**
**  It seems like this is a HUD element, but I can't find any evidence
**  of it existing anywhere. Commenting out this entire section does
**  nothing. What is this? Monolith's original notes are below but do
**  not really help to explain anything.
**
**  Documentation unavailable.
**
**	There are two attributes defined under HudLayout0 :
**	ChooserTextAlpha
**	ChooserTextColor
**
**	All of the subroutine bitmaps are defined in Subroutines.txt
*/
[SubroutineChooser]
OpenTime			= 2.0
CloseTime			= 2.0
FontSize			= 14
BoxSize				= (40, 40)
Spacing				= 42
CursorSize			= (128, 32)
TopLine				= 56
BackgroundTex		= "interface\hud\hud.dtx"
BackgroundTexUV		= (154, 113, 182, 141)
BadBackgroundTex	= "interface\hud\utilitybg_corrupt.dtx"
BadBackgroundTexUV	= (2, 2, 30, 30)
CursorTex			= "interface\hud\hud.dtx"
CursorTexUV			= (117, 45, 254, 70)


/************************************************************************
**
**	                    Objective Progress (Tab Menu)
**
**  The ProgressBox definition manages the pop-up box accessed by
**  pressing and holding the Tab key. This box displays all of the
**  objectives the player has received, whether completed or otherwise,
**  on the current map. It appears toward the bottom-left corner of the
**  screen.
**
**  Note that this does not apply to chooser boxes that appear in the
**  same place (e.g. the prompts to skip tutorials).
**  
**  ProgressRect (Rectangle)
**      - The space allocated to display the objective progress menu.
**  HUDOffset (Integer)
**      - 
**  TitleFont (Integer),
**  TitleFontSize (Integer),
**  TitleAlpha (Float),
**  TitleColor (Vector)
**      - The font ID, pixel height, opacity, and color of both the
**      "Objective" header and the "Tasks" subheader.
**      - TitleFontSize is managed by the Killer App Mod.
**  ObjectiveFont (Integer),
**  ObjectiveFontSize (Integer)
**      - The font ID and pixel height of all objective text.
**      - ObjectiveFontSize is managed by the Killer App Mod.
**  ObjectiveAlpha (Float),
**  ObjectiveColor (Vector)
**      - The opacity and color of incomplete objective text.
**  CompletedObjectiveAlpha (Float),
**  CompletedObjectiveColor (Vector)
**      - The opacity and color of complete objective text.
**  SecondaryObjectiveAlpha (Float),
**  SecondaryObjectiveColor (Vector)
**      - The opacity and color of secondary objective text.
**  ObjectiveSpacing (Integer)
**      - The designated spacing between objective lines.
*/
[ProgressBox]
ProgressRect			    = (10, 250, 250, 480)
HUDOffset				    = 42
TitleFont				    = 1
TitleFontSize			    = 28
TitleAlpha				    = 1.0
TitleColor				    = <255.0, 255.0, 255.0>
ObjectiveFont			    = 0
ObjectiveFontSize		    = 24
ObjectiveAlpha			    = 0.75
ObjectiveColor			    = <255.0, 255.0, 255.0>
CompletedObjectiveAlpha 	= 0.75
CompletedObjectiveColor 	= <128.0, 128.0, 128.0>
SecondaryObjectiveAlpha 	= 0.75
SecondaryObjectiveColor 	= <255.0, 255.0, 255.0>
ObjectiveSpacing			= 8

/* ---[UV Box Values]---
**  There's a lotta stuff to look at here. For now just know it's
**  responsible for holding all the stuff in the box exactly where it
**  is.
**  
**  TODO what does UV stand for?
**  TODO documentation for this section... all of this seems to work
**  with itself but good luck knowing if most of these have a visible
**  difference
*/
UVBoxLeftInset			    = (32, 0, 56, 14)
UVBoxLeftFullInset		    = (4, 0, 28, 14)
UVBoxLeftBigInset		    = (32, 0, 56, 14)
UVBoxLeftBigFullInset		= (4, 0, 28, 14)
UVSeparator			        = (117, 15, 254, 16)
UVProgressEmpty			    = (55, 155, 102, 158)
UVProgressFull			    = (6, 155, 53, 158)
UVFrameTopLeft		= ( 1, 128, 4, 153 )
UVFrameTop		= ( 6, 128, 101, 153 )
UVFrameTopRight		= ( 103, 128, 115, 153 )
UVFrameLeft		= ( 1, 155, 4, 158 )
UVFrameCenter		= ( 0, 0, 0, 0 )
UVFrameRight		= ( 0, 0, 0, 0 )
UVFrameBottomLeft	= ( 1, 160, 4, 163 )
UVFrameBottom		= ( 6, 160, 101, 163 )
UVFrameBottomRight	= ( 103, 160, 115, 163 )
UVBoxTopLeft		= ( 1, 165, 13, 170 )
UVBoxTop		= ( 15, 165, 98, 170 )
UVBoxTopRight		= ( 100, 165, 115, 170 )
UVBoxLeft		= ( 1, 172, 13, 175 )
UVBoxCenter		= ( 15, 172, 98, 175 )
UVBoxRight		= ( 100, 172, 115, 175 )
UVBoxBottomLeft	= ( 1, 177, 13, 188 )
UVBoxBottom		= ( 15, 177, 98, 188 )
UVBoxBottomRight	= ( 100, 177, 115, 188 )


/************************************************************************
**
**                      Procedural Indicator
**
**  The ProceduralHUD definition is responsible for listing subroutines
**  that are active underneath the currently equipped weapon, along the
**  right side of the screen. Holding the Tab key also shows the names
**  of those subroutines.
**
**  Or is it? None of these values are doing anything and they seem to
**  be pulling values from the Weapon Chooser. The text color is
**  representative of this. So... what is this, then?
**
**  FrameTex (Path)
**      - The texture used for the frame around each active subroutine.
**  TopBound (Integer)
**      - Unknown function.
**  Font (Integer),
**  FontSize (Integer),
**  Alpha (Float),
**  Color (Vector)
**      - The font ID, pixel height, opacity, and color of the text that
**      names each active subroutine when the player holds the Tab key.
**  Spacing (Integer)
**      - The amount of vertical space between each procedural.
**  IconWidth (Integer),
**  IconHeight (Integer)
**      - The width and height of each procedural.
**  IconOffset (Integer)
**      - The offset of the procedural indicator from the right side of
**      the screen.
*/
[ProceduralHUD]
FrameTex		= "interface\hud\procindicator_frame.dtx"
TopBound		= 60
Font			= 0
FontSize		= 24
Alpha			= 1.0
Color			= <165, 233.0, 255.0>
Spacing			= 40
IconWidth		= 39
IconHeight		= 39
IconOffset		= 44 // From right edge of screen (positive is left)

/*  ---[Progress Bar Settings]---
**  TODO Unsure how to test these? Where does this show up?
**  
**  EmptyBarTex (Path),
**  FullBarTex (Path)
**      - 
**  
*/
EmptyBarTex		= "interface\hud\procindicator_bg.dtx"
FullBarTex		= "interface\hud\procindicator_bg_full.dtx"
/*//Small bar--->
PBarXOffset		= 61  // From the left edge of Icon (positive is left)
PBarYOffset		= -3   // From top of Icon (negative is down)
PBarWidth		= 64
PBarHeight		= 8
*/
/*//Big Bar--->
PBarXOffset		= 61  // From the left edge of Icon (positive is left)
PBarYOffset		= -3   // From top of Icon (negative is down)
PBarWidth		= 64
PBarHeight		= 31
*/
//Tiny Bar--->
PBarXOffset		= -3  // From the left edge of Icon (positive is left)
PBarYOffset		= 1   // From top of Icon (negative is down)
PBarWidth		= 31
PBarHeight		= 4

StringXOffset	= 10  // From the left edge of the progress bar (positive is left)
StringYOffset	= -16 // From top of progress bar (negative is down)


/************************************************************************
**
**	                      Textured Frames Layout
**
**  The TexturedFrame defitions can be used by practically any HUD
**  element in order to draw a nicely textured box or frame on screen.
**  The game obviously uses these to some degree, just not here. Not
**  in this file, anyway.
**
**	TODO what does UV stand for??? again
**  
**  Name (String),
**  Texture (Path)
**      - The name and texture of the textured frame.
**  Hollow (Integer)
**      - Untested. Assumed:
**      - Boolean value. Tells the game if the textured frame is hollow.
**  Inscribe (Integer)
**      - Unknown function.
**  Margins (Integer)
**      - Unknown function.
*/
[TexturedFrame0]
// includes a black border
Name			= "Basic"
Texture			= "Interface\hud\chooser_box.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 0, 164, 14, 171 )
UVTop			= ( 14, 164, 99, 171 )
UVTopRight		= ( 99, 164, 116, 171 )
UVLeft			= ( 0, 171, 14, 176 )
UVCenter		= ( 14, 171, 99, 176 )
UVRight			= ( 99, 171, 116, 176 )
UVBottomLeft		= ( 0, 176, 14, 189 )
UVBottom		= ( 14, 176, 99, 189 )
UVBottomRight		= ( 99, 176, 116, 189 )

[TexturedFrame1]
// includes a black border
Name			= "datalogframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 1
Margins			= ( 4, 25, 0, 0)
UVTopLeft		= ( 117, 72, 120, 97 )
UVTop			= ( 121, 72, 206, 97 )
UVTopRight		= ( 207, 72, 254, 97 )
UVLeft			= ( 117, 98, 120, 103 )
UVCenter		= ( 0, 0, 0, 0 )
UVRight			= ( 0, 0, 0, 0 )
UVBottomLeft		= ( 117, 104, 120, 111 )
UVBottom		= ( 133, 104, 206, 111 )
UVBottomRight		= ( 207, 104, 254, 111 )


[TexturedFrame2]
// includes a black border
Name			= "datalogbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 183, 113, 193, 126 )
UVTop			= ( 194, 113, 238, 126 )
UVTopRight		= ( 238, 113, 254, 126 )
UVLeft			= ( 183, 127, 193, 131 )
UVCenter		= ( 194, 127, 238, 131 )
UVRight			= ( 238, 127, 254, 131 )
UVBottomLeft		= ( 183, 132, 193, 143 )
UVBottom		= ( 194, 132, 238, 143 )
UVBottomRight		= ( 239, 132, 254, 143 )

[TexturedFrame3]
// includes a black border
Name			= "ionodebox"
Texture			= "Interface\hud\ionode.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 0, 27, 55, 65 )
UVTop			= ( 55, 27, 200, 65 )
UVTopRight		= ( 200, 0, 255, 65 )
UVLeft			= ( 0, 65, 195, 74 )
UVCenter		= ( 195, 65, 202, 74 )
UVRight			= ( 202, 65, 255, 13 )
UVBottomLeft		= ( 0, 74, 195, 255 )
UVBottom		= ( 195, 74, 202, 255 )
UVBottomRight		= ( 202, 74, 255, 255 )

//--Are we using this ?
[TexturedFrame4]
Name			= "subtitle"
Texture			= "Interface\hud\subtitles.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 0, 0, 13, 9 )
UVTop			= ( 13, 0, 18, 9 )
UVTopRight		= ( 18, 0, 31, 9 )
UVLeft			= ( 0, 9, 13, 13 )
UVCenter		= ( 13, 9, 18, 13 )
UVRight			= ( 18, 9, 31, 13 )
UVBottomLeft		= ( 0, 13, 13, 26 )
UVBottom		= ( 13, 13, 18, 26 )
UVBottomRight		= ( 18, 13, 31, 31 )

[TexturedFrame5]
Name			= "chooserframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 0
UVTopLeft		= ( 1, 116, 4, 149 )
UVTop			= ( 7, 116, 99, 149 )
UVTopRight		= ( 100, 116, 115, 149 )
UVLeft			= ( 1, 150, 4, 151 )
UVCenter		= ( 0, 0, 0, 0 )
UVRight			= ( 0, 0, 0, 0 )
UVBottomLeft		= ( 1, 152, 4, 163 )
UVBottom		= ( 7, 152, 99, 163 )
UVBottomRight		= ( 100, 152, 115, 163 )
Margins			= ( 4, 26, 15, 4)


[TexturedFrame6]
Name			= "chooserbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 1, 165, 13, 170 )
UVTop			= ( 15, 165, 98, 170 )
UVTopRight		= ( 100, 165, 115, 170 )
UVLeft			= ( 1, 172, 13, 175 )
UVCenter		= ( 15, 172, 98, 175 )
UVRight			= ( 100, 172, 115, 175 )
UVBottomLeft		= ( 1, 177, 13, 188 )
UVBottom		= ( 15, 177, 98, 188 )
UVBottomRight		= ( 100, 177, 115, 188 )
Margins			= ( 13, 5, 15, 11)

[TexturedFrame7]
Name			= "chooserwarn"
Texture			= "Interface\hud\chooser_frame_warn.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 1, 1, 11, 11 )
UVTop			= ( 13, 1, 18, 11 )
UVTopRight		= ( 20, 1, 30, 11 )
UVLeft			= ( 1, 13, 11, 18 )
UVCenter		= ( 13, 13, 18, 18 )
UVRight			= ( 20, 13, 30, 18 )
UVBottomLeft		= ( 1, 20, 11, 30 )
UVBottom		= ( 13, 20, 18, 30 )
UVBottomRight		= ( 20, 20, 30, 30 )

[TexturedFrame8]
Name			= "chooserboxwarn"
Texture			= "Interface\hud\chooser_box_warn.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 1, 1, 12, 12 )
UVTop			= ( 13, 1, 18, 12 )
UVTopRight		= ( 19, 1, 30, 12 )
UVLeft			= ( 1, 13, 12, 19 )
UVCenter		= ( 13, 13, 18, 19 )
UVRight			= ( 19, 13, 30, 19 )
UVBottomLeft		= ( 1, 20, 12, 30 )
UVBottom		= ( 13, 20, 18, 30 )
UVBottomRight		= ( 19, 20, 30, 30 )

[TexturedFrame9]
Name			= "weaponchooserframe"				//--Are we using this?
Texture			= "Interface\hud\weapon_chooser.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 0, 0, 9, 26 )
UVTop			= ( 9, 0, 98, 26 )
UVTopRight		= ( 98, 0, 127, 34 )
UVLeft			= ( 0, 34, 8, 60 )
UVCenter		= ( 0, 0, 0, 0 )
UVRight			= ( 119, 34, 127, 60 )
UVBottomLeft		= ( 0, 60, 9, 63 )
UVBottom		= ( 9, 60, 119, 63 )
UVBottomRight		= ( 119, 60, 127, 63  )

[TexturedFrame10]
Name			= "lightcycle_speedometer"
Texture			= "Interface\hud\frame_lightcycle.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 1, 1, 42, 15 )
UVTop			= ( 43, 1, 53, 15 )
UVTopRight		= ( 54, 1, 63, 15 )
UVLeft			= ( 1, 16, 42, 53 )
UVCenter		= ( 43, 16, 53, 53 )
UVRight			= ( 54, 16, 63, 53 )
UVBottomLeft	= ( 1, 54, 42, 63 )
UVBottom		= ( 43, 54, 53, 63 )
UVBottomRight	= ( 53, 54, 63, 63 )

[TexturedFrame11]
Name			= "lightcycle_start"
Texture			= "Interface\hud\frame_lightcycle_start.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= ( 1, 1, 9, 12 )
UVTop			= ( 10, 1, 28, 12 )
UVTopRight		= ( 29, 1, 63, 12 )
UVLeft			= ( 1, 13, 9, 54 )
UVCenter		= ( 10, 13, 28, 54 )
UVRight			= ( 29, 13, 63, 54 )
UVBottomLeft	= ( 1, 55, 9, 63 )
UVBottom		= ( 10, 55, 28, 63 )
UVBottomRight	= ( 29, 55, 63, 63 )

/*
[TexturedFrame10]
Name			= "Basic"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (10, 35, 27, 44)
UVTop			= (28, 35, 154, 44)
UVTopRight		= (166, 35, 166, 44)
UVLeft			= (10, 45, 27, 50)
UVCenter		= (28, 45, 154, 50)
UVRight			= (166, 45, 166, 50)
UVBottomLeft		= (10, 51, 27, 60)
UVBottom		= (28, 51, 154, 60)
UVBottomRight		= (166, 51, 166, 60)


[TexturedFrame11]
// includes a black border
Name			= "datalogframe"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 1
Inscribe		= 0
UVTopLeft		= (71, 93, 126, 231)
UVTop			= (126, 193, 139, 222)
UVTopRight		= (139, 166, 194, 231)
UVLeft			= (0, 193, 23, 238)
UVCenter		= (0,0,0,0)
UVRight			= (61, 193, 71, 238)
UVBottomLeft		= (0, 238, 23, 255)
UVBottom		= (23, 238, 61, 255)
UVBottomRight		= (61, 238, 71, 255)

[TexturedFrame12]
// includes a black border
Name			= "datalogbox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (23, 193, 40, 210)
UVTop			= (40, 193, 48, 210)
UVTopRight		= (48, 193, 61, 210)
UVLeft			= (23, 210, 40, 221)
UVCenter		= (40, 210, 48, 221)
UVRight			= (48, 210, 61, 221)
UVBottomLeft		= (48, 221, 61, 238)
UVBottom		= (48, 221, 61, 238)
UVBottomRight		= (48, 221, 61, 238)

[TexturedFrame13]
// includes a black border
Name			= "ionodebox"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (71, 93, 126, 231)
UVTop			= (126, 193, 139, 222)
UVTopRight		= (139, 166, 194, 231)
UVLeft			= (204, 0, 399, 9)
UVCenter		= (400, 0, 407, 9)
UVRight			= (408, 0, 511, 9)
UVBottomLeft		= (204, 9, 399, 196)
UVBottom		= (204, 9, 399, 196)
UVBottomRight		= (204, 9, 399, 196)

[TexturedFrame14]
Name			= "subtitle"
Texture			= "Interface\hud\hud.dtx"
Hollow			= 0
Inscribe		= 1
UVTopLeft		= (220, 197, 233, 210)
UVTop			= (234, 197, 247, 210)
UVTopRight		= (248, 197, 261, 210)
UVLeft			= (220, 211, 233, 224)
UVCenter		= (234, 211, 247, 224)
UVRight			= (248, 211, 261, 224)
UVBottomLeft		= (220, 225, 233, 243)
UVBottom		= (234, 225, 247, 243)
UVBottomRight		= (248, 225, 261, 243)
*/

/************************************************************************
**
**	                             Menu Layout
**
**  The Menu definition declares default values that are shared by all
**  in-game menus, and cannot be overridden by specific menus.
**
**  This definition - which was from Monolith - is pretty deceptive.
**  Most of the values here are for the pause menu, and the ones that
**  aren't confirmed to be for the pause menu are unconfirmed to be even
**  used at all. Sure, they're never overridden by anything else. But
**  that could just be because nothing else uses them at all.
**
**	Position (Integer)
**      - This is less of a position and more of an offset, since it's
**      an integer instead of a point. It's the offset of the body of
**      the pause menu from the left side of the screen - but scalable, 
**      unlike most offsets. 
**  Size (Size)
**      - The defined width and height of the body of the pause menu -
**      - This setting is managed by the Killer App Mod.
**  Frame (Path),
**  FrameTip (Path)
**      - The textures used to display the body of the pause menu. 
**      FrameTip is used to show the fading out at the bottom of the
**      menu.
**  BarPosition (Point)
**      - The upper-left origin position of the bar at the top of the
**      pause menu.
**  BarSize (Size)
**      - The defined width and height of the bar at the top of the
**      pause menu.
**  BarFont (Integer),
**  BarFontSize (Integer)
**      - The font ID and text height of the tab buttons on the pause
**      menu bar.
**  BarSpacing (Integer)
**      - The horizontal spacing between each of the buttons on the
**      pause menu bar. Also applies to the spacing of the first item
**      from the left side of the bar.
**  BarSelectColor (Vector)
**      - The text color of the buttons on the pause menu bar, when
**      highlighted.
**  Bar (Path),
**  BarTip (Path)
**      - The textures used to display the bar at the top of the pause
**      menu. BarTip is used to show the fading out to the bar's right
**      side.
**  SlideInTime (Float),
**  SlideOutTime (Float)
**      - The amount of time, in seconds, that it takes to display the
**      entry and exit sliding animations for the pause menu.
**  SlideInSound (Path),
**  SlideOutSound (Path)
**      - The sounds used for opening and closing the pause menu.
**  UpArrow (Path),
**  UpArrowH (Path)
**      - The textures used for the menu's up arrow, when not
**      highighted and highlighted respectively.
**      - Potentially unused?
**  DownArrow (Path),
**  DownArrowH (Path)
**      - The textures used for the menu's down arrow, when not
**      highlighted and highlighted respectively.
**      - Potentially unused?
**  SelectedColor (Vector),
**  NonSelectedColor (Vector),
**  DisabledColor (Vector)
**      - The text color for not hightlighted, highlighted, and disabled
**      text respectively.
**      - Potentially unused?
*/
[Menu]
Position			= 320
Size				= (280, 200)
Frame				= "interface\menu\menubar_tile.dtx"
FrameTip			= "interface\menu\menubar_tip.dtx"
BarPosition			= (320, 4)
BarSize				= (312, 25)
BarFont				= 1
BarFontSize			= 16
BarSpacing			= 16
BarSelectColor		= <192.0, 192.0, 0.0>
Bar					= "interface\menu\menudown_tile.dtx"
BarTip				= "interface\menu\menudown_tip.dtx"
SlideInTime			= 0.25
SlideOutTime		= 0.25
SlideInSound		= "interface\snd\menuopen.wav"
SlideOutSound		= "interface\snd\menuclose.wav"
UpArrow				= "interface\menu\sprtex\arrowup.dtx"
UpArrowH			= "interface\menu\sprtex\arrowup_h.dtx"
DownArrow			= "interface\menu\sprtex\arrowdn.dtx"
DownArrowH			= "interface\menu\sprtex\arrowdn_h.dtx"
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <255.0, 113.0, 113.0> // SecurityProtocol
DisabledColor		= <180.0, 180.0, 200.0>

/************************************************************************
**
**	                         Generic Menu Layout
**
**  The GenericMenu definition declares default values that are shared
**  by all in-game menus, but can be overridden by specific menus.
**  
**  Same deal as the previous definition; pretty much only applies to
**  the pause menu, and whatever values aren't might not be used at all.
**  Further clarification may be needed.
**
**  Size (Size)
**      - Unknown function.
**      - This setting is managed by the Killer App Mod.
**  FontSize (Integer)
**      - The text height of the buttons on the body of the pause menu.
**      - This setting is managed by the Killer App Mod.
**  TitleSize (Integer)
**      - The text height of any title text on the pause menu.
**      - Potentially unused?
**      - This setting is managed by the Killer App Mod.
**  Indent (Point)
**      - The indent, both horizontal and vertical, of the buttons on
**      the body of the pause menu.
**  SelectedColor (Vector),
**  NonSelectedColor (Vector),
**  DisabledColor (Vector)
**      - The text color of the buttons on the body of the pause menu,
**      when highlighted, not highlighted, and disabled, respectively.
**      - The disabled color is unused by proxy, since there aren't any
**      pause menu buttons that are ever disabled.
*/
[GenericMenu]
Size				= (240,200)
FontSize			= 20
TitleSize			= 25
Indent				= (12,28)
SelectedColor		= <255.0, 255.0, 255.0>
NonSelectedColor	= <0.0, 0.0, 0.0>
DisabledColor		= <95.0, 95.0, 95.0>


/************************************************************************
**
**	                        Custom Menu Layouts
**
**  The custom menu definitions declare values for specific menus that
**  may override values set under GenericMenu.
**
**  There's only one menu here... is it even used?
*/
[MenuPlayer]
Size				= (280,240)
NameWidth			= 90
LevelWidth			= 70
PopupSize			= (200,160)
PopupFrame			= "interface\menu\sprtex\frame_interlace.dtx"



/************************************************************************
**
**	                        Miscellaneous Layout
**
**  The Miscellaneous definition sets values for interface components
**  not covered under other definitions.
**
**  
**
**	MessageBoxTexture (Path)
**		- The name of the DTX to use for background art on the Message Box.
**	FailScreenBackground (String)
**		The name of the pcx to use for background art on the Mission
**		Failure screen.
**
**	FailStringPos (Point)
**
**		The position of the text string on the Mission Failure screen.
**		This point is relative to a 640x480 resolution and will be scaled
**		for other resolutions.
**
**	FailScreenDelay (Float)
**
**		How long (in seconds) to wait on the Mission Failure screen.
**
**	DeathDelay (Float)
**
**		How long (in seconds) to wait after player dies before showing the 
**      Mission Failure screen.
**
**	NightVisionModelColor (Vector)
**
**		Color to add to models while using night vision <r, g, b>
**
**	NightVisionScreenTint (Vector)
**
**		Color to tint the screen while using night vision <r, g, b>
**
**	WeaponPickupColor (Vector)
**
**		Color to tint the screen when a weapon is picked up <r, g, b>
**
**	AmmoPickupColor (Vector)
**
**		Color to tint the screen when a weapon is picked up <r, g, b>
**
**	TintTime (Float)
**
**		Duration in seconds of screen tint when weapons or ammo are picked up
**
**	HelpFont (String)
**
**		Name of the bitmap font to use rollover help.
**
**	SmallFontBase (String)
**
**		Base name of the bitmap font set used for small text.
**
**	MediumFontBase (String)
**
**		Base name of the bitmap font set used for medium text.
**
**	LargeFontBase (String)
**
**		Base name of the bitmap font set used for large text.
**
**	TitleFont (String)
**
**		Name of the bitmap font to use for screen titles.
**
**	MessageTime (Float)
**
**		How long in seconds that messages are displayed.
**		(includes fade out time)
**
**	MessageFade (Float)
**
**		How long in seconds that messages are it takes for a message to fade.
**		(included in total message time)
**
**	MaxMessages (int)
**
**		How many messages may appear on screen at one time.
**
*/

[Miscellaneous]
DialogFrame 			= "interface\menu\sprtex\frame_solid.dtx"
DialogFontFace			= 1
DialogFontSize			= 14
FailScreenBackground	= "interface\missionfailure.pcx"
FailStringPos			= (320,200)
FailScreenDelay 		= 5.0
DeathDelay				= 5.0
NightVisionModelColor	= <32.0, 128.0, 32.0>
NightVisionScreenTint	= <0.0, 255.0, 0.0>
InfraredModelColor		= <96.0, 32.0, 0.0>
InfraredLightScale		= <255.0, 0.0, 0.0>
MineDetectScreenTint	= <224.0, 224.0, 0.0>
WeaponPickupColor		= <80.0, 40.0, 128.0>
AmmoPickupColor 		= <80.0, 40.0, 128.0>
TintTime				= 2.000000
HUDChoserHColor 		= <255.0, 255.0, 255.0>
CrosshairGapMin 		= 5
CrosshairGapMax 		= 25
CrosshairBarMin 		= 8
CrosshairBarMax 		= 32
PerturbRotationEffect	= 2
PerturbIncreaseSpeed	= 3
PerturbDecreaseSpeed	= 1
PerturbWalkPercent		= 0.33
MessageTime 			= 9.0
MessageFade 			= 0.75
MaxMessages 			= 5
PopupTextRect			= (20,80,620,340)
ObjectiveRect			= (80,40,560,300)
SubtitleTint			= <255.0, 255.0, 128.0>
HealthTint				= <255.0, 128.0, 128.0>
ArmorTint				= <128.0, 128.0, 255.0>
AmmoTint				= <240.0, 240.0, 128.0>
PopupTint				= <255.0, 255.0, 255.0>
Team1Color				= <64.0, 64.0, 255.0>
Team2Color				= <255.0, 64.0, 64.0>
//IOCameraRect			= (210,20,430,185)
IOCameraRect			= (263,102,378,275)
IOCameraFOVX			= 70.0
IOCameraFOVY			= 60.0
TimerSize				= 24
TimerPos				= (300,92)

[DialogBox]
DialogFrame 			= "interface\menu\sprtex\frame_solid.dtx"
DialogFontNum			= 1
DialogFontSize			= 14
OKSelected			= <255.0, 255.0, 255.0>
OKNormal			= <255.0, 113.0, 113.0> // SecurityProtocol
OKDisabled			= <0.0, 75.0, 238.0>
CancelSelected			= <255.0, 255.0, 255.0>
CancelNormal			= <255.0, 113.0, 113.0> // SecurityProtocol
CancelDisabled			= <0.0, 75.0, 238.0>
TextSelected			= <255.0, 255.0, 255.0>
TextNormal			= <255.0, 113.0, 113.0> // SecurityProtocol
TextDisabled			= <0.0, 75.0, 238.0>
EditSelected			= <255.0, 255.0, 255.0>
EditNormal			= <255.0, 113.0, 113.0> // SecurityProtocol
EditDisabled			= <0.0, 75.0, 238.0>

/************************************************************************
**
**	MessageQueue
**
** The MessageQueue definitions specifies data for various message queues
** in the game.
**
**	MessageTime (Float)
**
**		How long in seconds that messages are displayed.
**		(not including fade out time)
**
**	MessageFade (Float)
**
**		How long in seconds that messages are it takes for a message to fade.
**		(after normal message time)
**
**	MaxMessages (int)
**
**		How many messages may appear on screen at one time.
**
**	MaxHistory (int)
**
**		How many old messages are stored.
**
**
*/

[ChatMessageQueue]
Font			= 0
FontSize		= 14
TextColor		= <255.0, 255.0, 255.0>
ChatColor		= <255.0, 255.0, 255.0>
TeamChatColor	= <0.0, 255.0, 255.0>
CheatColor		= <255.0, 0.0, 255.0>
TransColor		= <0.0, 255.0, 0.0>
MultiAnnounceColor	= <255.0, 255.0, 90.0>
BasePos 		= (10,42)
Width			= 600
MessageTime 	= 7.5
MessageFade 	= 1.5
MaxMessages 	= 3
MaxHistory		= 3

[MultiChatMessageQueue]
Font			= 0
FontSize		= 14
TextColor		= <255.0, 255.0, 255.0>
ChatColor		= <255.0, 255.0, 255.0>
TeamChatColor	= <0.0, 255.0, 255.0>
CheatColor		= <255.0, 0.0, 255.0>
TransColor		= <0.0, 255.0, 0.0>
MultiAnnounceColor	= <255.0, 255.0, 90.0>
BasePos 		= (24,206)
Width			= 600
MessageTime 	= 7.5
MessageFade 	= 1.5
MaxMessages 	= 3
MaxHistory		= 7

[PickupMessageQueue]
Font			= 0
FontSize		= 12
IconSize		= 24
TextColor		= <255.0, 255.0, 255.0>
BasePos 		= (320,44)
Width			= 240
MessageTime 	= 5
MessageFade 	= 1
MaxMessages 	= 3
Justify		= 1

[SearchMessageQueue]
Font			= 0
FontSize		= 12
IconSize		= 24
TextColor		= <255.0, 255.0, 255.0>
BasePos 		= (200,400)
Width			= 240
MessageTime 	= 5
MessageFade 	= 1
MaxMessages 	= 5

[RewardMessageQueue]
Font		= 1
FontSize	= 12
TextColor	= <255.0, 255.0, 255.0>
BasePos	= (400,240)
Width		= 400
MessageTime	= 7.5
MessageFade	= 1.5
MaxMessages	= 5
MaxHistory	= 10

[AnnouncementMessageQueue]
BasePos 		= (320,82)
Font			= 0
FontSize		= 14
MessageTime 		= 4
MessageFade 		= 0.5
Width			= 400
MaxMessages 		= 2
MaxHistory		= 2
TextColor		= <90.0, 199.0, 255.0>

[MultiAnnouncementMessageQueue]
BasePos 		= (320,240)
Font			= 0
FontSize		= 22
MessageTime 		= 10
MessageFade 		= 1.5
Width			= 400
MaxMessages 		= 5
MaxHistory		= 2
TextColor		= <90.0, 199.0, 255.0>

[Transmission]
Font			= 0
FontSize		= 27
TextColor		= <255.0, 255.0, 90.0>
BasePos 		= (320,175)
Width			= 400
Time			= 4
FadeTime		= 1
DiscMPFont		= 0
DiscMPFontSize	= 27
DiscMPTextColor	= <255.0, 255.0, 90.0>
DiscMPBasePos 	= (320,175)
DiscMPWidth		= 400
DiscMPTime		= 4
DiscMPFadeTime	= 1

[ChatInput]
Font			= 0
FontSize		= 12
Color			= <255.0, 255.0, 255.0>
BasePos 		= (95,320)


/************************************************************************
**
**	MissionText Layout
**
** The MissionText definition specifies data for "typing"
** mission related text (e.g. "Somewhere in Berlin, 9:43 AM")
** to the screen.
**
**	Width (Int)
**
**		Specifies how wide the area used for the text should be
**
**	NumLines (Int)
**
**		Specifies how many of lines of text may be displayed at before
**		scrolling
**
**	LetterDelay (Float)
**
**		How long (in seconds) to wait after adding each letter
**
**	LineDelay	(Float)
**
**		How long (in seconds) to wait after finishing each line
**
**	LineScrollTime	(Float)
**
**		How long (in seconds) to scroll up one line
**
**	FadeDelay	(Float)
**
**		How long (in seconds) to wait after adding the last line
**			before starting the fade.
**
**	FadeTime	(Float)
**
**		How long (in seconds) to fade out the text
**
**	Pos 	(Point)
**
**		Position (relative to a 640x480 screen) of the text
**
**	TypeSound	(String)
**
**		Sound file to play (looping) while typing text
**
**	ScrollSound (String)
**
**		Sound file to play (once) when a line starts scrolling
**
**/
[MissionText]
Font					= 0
FontSize				= 12
TextColor				= <255.0, 155.0, 0.0>
NumLines				= 1
LetterDelay 			= 0.015
LineDelay				= 0.2
LineScrollTime			= 0.25
FadeDelay				= 3.0
FadeTime				= 2.0
Pos 					= (100,132)
TypeSound				= "interface\snd\type.wav"
ScrollSound 			= "interface\snd\enter.wav"


/************************************************************************
**
**	Subtitle Layout
**
**
**	NumLines (Int)
**
**		Specifies how many of lines of text may be displayed at once
**
**	LineScrollTime	(Float)
**
**		How long (in seconds) to scroll up one line
**
**	Width (Int)
**
**		Specifies how wide the area used for the text should be
**		when playing cinematics.
**		(scaled for resolutions greater than 640x480)
**
**	Pos 	(Point)
**
**		Position (relative to a 640x480 screen) of the text
**		when playing cinematics.
**
**	FullScreenWidth (Int)
**
**		Specifies how wide the area used for the text should be
**		when not in cinematics.
**		(scaled for resolutions greater than 640x480)
**
**	FullScreenPos		(Point)
**
**		Position (relative to a 640x480 screen) of the text
**		when not in cinematics.
**
**/
[Subtitle]
font					=0
fontsize				=16
NumLines				= 3
LineScrollTime			= 0.5
Width					= 256
Pos 					= (200,338)
FullScreenWidth 		= 256
FullScreenPos			= (200,320)
TextColor			= <255.0, 255.0, 255.0>

[Scores]
Font			= 0
FontSize		= 14
BasePos			= (32,64)
PlayerTextColor	= <255.0, 255.0, 255.0>
TextColor		= <192.0, 192.0, 192.0>
ElimTextColor	= <96.0, 96.0, 96.0>
ElimPlayerTextColor = <128.0, 128.0, 128.0>
FrameColor		= <0.0, 64.0, 240.0>
FrameAlpha		= 0.50

[MultiplayerLightCycleScores]
Font			= 0
FontSize		= 14
BasePos			= (190,85)
PlayerTextColor	= <255.0, 255.0, 255.0>
TextColor		= <192.0, 192.0, 192.0>
ElimTextColor	= <96.0, 96.0, 96.0>
ElimPlayerTextColor = <128.0, 128.0, 128.0>
FrameColor		= <0.0, 64.0, 240.0>
FrameAlpha		= 0.50
FrameWidth		= 275
FrameVBorder	= 8
FrameHBorder	= 8 // not hooked up
BorderSize		= 16
InfoColumn1			= 135
InfoColumn2			= 130
InfoColumn3			= 130
ScoreColumn1		= 135
ScoreColumn2		= 85
ScoreColumn3		= 85
ScoreColumn4		= 85
ScoreColumn5		= 85
BackroundFrameColor = <15.0, 11.0, 84.0>
BackroundFrameAlpha = 0.50
BackroundBorderFrameColor = <73.0, 157.0, 252.0>
BackroundBorderFrameAlpha = 1.0
BackroundBorderFrameSize = 2


[DiscScores]
Font			= 0
FontSize		= 14
BasePos		= (32,64)
KeyPos		= (32, 400)
TextColor		= <255.0, 255.0, 255.0>
ElimTextColor	= <128.0, 128.0, 128.0>
FrameColor		= <0.0, 64.0, 240.0>
FrameAlpha		= 0.50
BackroundFrameColor = <15.0, 11.0, 84.0>
BackroundFrameAlpha = 0.50
BackroundBorderFrameColor = <73.0, 157.0, 252.0>
BackroundBorderFrameAlpha = 1.0
BackroundBorderFrameSize = 2

[DiscMatches]
Font			= 0
FontSize		= 14
BasePos		= (100,150)
TextColor		= <192.0, 192.0, 192.0>
FrameColor		= <0.0, 64.0, 240.0>
FrameAlpha		= 0.50


/************************************************************************
**
**	                            Screen Overlays
**
**  The Overlay definition defines the set of overlays that the game can
**  reference at any time. In the case of TRON 2.0, this only concerns
**  the scopes for the LOL and Triangulate subroutines.
**
**  A single-line comment will be placed above each overlay value group
**  that will identify it. Overlays 0 and 1 define the LOL and 
**  Triangulate scopes, and Overlays 6 through 14 are
**  all derivative of those first two. Overlay values 2 through 5 can be
**  safely assumed to be unused in TRON 2.0, likely left over from NOLF
**  or a different Monolith game.
**
**	0 = LOL Scope
**	1 = Triangulate Scope
**	2 = "Super Soldier Mask" (Unused)
**	3 = Static (Unused)
**	4 = Camera (Unused)
**	5 = Camera Target (Unused)
**	6 = LOL Zoom In
**	7 = LOL Zoom Out
**	8 = LOL Loop
**	9 = Triangulate Zoom In
**	10 = Triangulate Zoom Out
**	11 = Triangulate Loop
**	12 = Corrupt Triangulate Zoom in
**	13 = Corrupt Triangulate Zoom out
**	14 = Corrupt Triangulate Loop
**
**  Scale# (Float)
**  Sprite# (Path)
**  Model# (Path)
**  Skin# (Path)
**  Anim# (String)
**  Renderstyle# (Path)
**  Alpha# (Float)
*/
[Overlay]
Scale0			= 0.15
Sprite0			= ""

Scale1			= 0.25
Sprite1			= ""

Scale6			= 0.285
Model6			= "Interface\hud\screen_sniper.ltb"
Skin6				= "Interface\hud\screen_sniper.dtx"
Anim6			= "zoomin"
Renderstyle6		= "RS\Alpha_Additive_wglow.ltb"
Alpha6			= 0.8

Scale7			= 0.285
Model7			= "Interface\hud\screen_sniper.ltb"
Skin7				= "Interface\hud\screen_sniper.dtx"
Anim7			= "zoomout"
Renderstyle7		= "RS\Alpha_Additive_wglow.ltb"
Alpha7			= 0.8

Scale8			= 0.285
Model8			= "Interface\hud\screen_sniper.ltb"
Skin8				= "Interface\hud\screen_sniper.dtx"
Anim8			= "loop"
Renderstyle8		= "RS\Alpha_Additive_wglow.ltb"
Alpha8			= 0.8

Scale9			= 0.285
Model9			= "Interface\hud\screen_triangulate.ltb"
Skin9				= "Interface\hud\screen_triangulate.dtx"
Anim9			= "zoomin"
Renderstyle9		= "RS\Alpha_Additive_wglow.ltb"
Alpha9			= 0.8

Scale10			= 0.285
Model10			= "Interface\hud\screen_triangulate.ltb"
Skin10			= "Interface\hud\screen_triangulate.dtx"
Anim10			= "zoomout"
Renderstyle10		= "RS\Alpha_Additive_wglow.ltb"
Alpha10 		= 0.8

Scale11			= 0.285
Model11			= "Interface\hud\screen_triangulate.ltb"
Skin11			= "Interface\hud\screen_triangulate.dtx"
Anim11			= "loop"
Renderstyle11		= "RS\Alpha_Additive_wglow.ltb"
Alpha11 		= 0.8

Scale12			= 0.285
Model12			= "Interface\hud\screen_triangulate.ltb"
Skin12				= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim12			= "zoomin"
Renderstyle12		= "RS\Alpha_Additive_wglow.ltb"
Alpha12			= 0.8

Scale13			= 0.285
Model13			= "Interface\hud\screen_triangulate.ltb"
Skin13			= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim13			= "zoomout"
Renderstyle13		= "RS\Alpha_Additive_wglow.ltb"
Alpha13			= 0.8

Scale14			= 0.285
Model14			= "Interface\hud\screen_triangulate.ltb"
Skin14			= "Interface\hud\screen_triangulate_corrupt.dtx"
Anim14			= "loop"
Renderstyle14		= "RS\Alpha_Additive_wglow.ltb"
Alpha14			= 0.8

/************************************************************************
**
**	                        Menu Character Layout
**
**  The Character menu element has one purpose: to display a spinning
**  view of the currently equipped Player & Light Cycle model. 
**
**  MPBase is used for Multiplayer character selection. LightCycleBase
**  is defined for use in the Single Player Light Cycle selection, but
**  also appears in the Multiplayer Player Setup menu when the Game Type
**  is set to Light Cycles.
**
**  Name (String)
**      - The name of the Character object.
**  Model (Path)
**      - The model to use for the Character object. Must be in .LTB
**      format.
**  Skin# (Path)
**      - The texture to use for the skin of the Character object. Must
**      be in .DTX format.
**  Pos (Vector????)
**      - Unknown function. Why is it in Vector format?
**  Scale (Float)
**      - Unknown function, requires further testing.
**  Rotation (Float)
**      - Unknown function, requires further testing.
*/

[Character0]
Name		= "MPBase"
Model		= "chars\models\hero_action.ltb"
Skin0		= "chars\skins\CateAction.dtx"
Pos			= <0.0,-1.0,20.0>
Scale		= 0.15
Rotation	= 0.0

[Character1]
Name		= "LightCycleBase"
Model		= "Props\Models\LightCycle.ltb"
Skin0		= "FX\Tex\specular.dtx"
Pos			= <-4.0,-1.0,10.0>
Scale		= 0.075
Rotation    = 90.0


/************************************************************************
**
**	Menu Piece Layout  (Formerly known as Character Layout.)
**
**
**	Name	(String)
**
**		Programmer friendly name for the menu piece.
**
**	Model (String)
**
**		Path to the Model Resource.
**
**	Skin# (String)
**
**		Path to the Skin Resource.  For multiple skins use like Skin0, Skin1...
**
**	RenderStyle (String)
**
**		Path to the RenderStyle Resource.  For multiple renderstyles use like
**		RenderStyle0, Renderstyle1...
**
**	Pos (Vector)
**
**		Position at which piece should be placed.  Items that have a ParentPiece declared
**		Should not have a Pos Attribute.
**
**	IntroAnim (String)
**
**		Name of the Intro Animation to play.
**		If there is an Intro Animation the code attempts to play that animation and then
**		play the loop animation.  If there is a LoopAnim Specified the code will attempt to
**		play that particular animation rather than the animation called "loop".
**
**	LoopAnim (String)
**
**		Name of the Loop Animation to play.
**		If there is no LoopAnim Attribute, than the code looks for an animation called "loop".
**		If there is no LoopAnim declared, and no animation in the model called "loop", then
**		the first animation in the list gets played.
**		If you want a particular animation played as the loop use this field to declare just which
**		animation that is and all sorts of happiness will come to you.
**
**	ParentPiece (String)
**
**	The Model to which this model will attach itself to.
**
**	ParentSocket (String)
**
**		The Socket to which this model's position will be moved.
**
**	Layer (int)
**
**		The layer on which this model exists for rendering order purposes.
**		Lower numbers are rendered first and behind whatever numbers come after,
**		regardless of actual position in the world.  A sort of Visual Caste System ya know...
**
*/

[MenuPiece0]
Name			= "sub_hub"
Model		= "Interface\Subroutines\models\subroutine_hub.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
Skin1			= "Interface\Subroutines\skins\subhub_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_Fullbright_blocker.ltb"
Pos 			= <0.0, 0.0, 308.0>
IntroAnim		= "show"
Layer			= 30

[MenuPiece1]
Name			= "servername"
Model			= "Interface\Subroutines\models\servername.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_commands.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
//Pos 		= <0.0, 0.0, 321.0>
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
IntroAnim		= "show"
Layer			= 30

[MenuPiece2]
Name			= "sub_commands"
Model			= "Interface\Subroutines\models\commands.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_commands.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		= <0.0, 0.0, 321.0>
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
IntroAnim		= "show"
Layer			= 10

[MenuPiece3]
Name			= "browser_top"
Model			= "Interface\Subroutines\models\browser_top.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 300.0>
LoopAnim		= "hid"
//ParentPiece		= "sub_hub"
//ParentSocket		= "skt_hub"
Layer			= 10

[MenuPiece4]
Name			= "browser_left"
Model			= "Interface\Subroutines\models\browser_left.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 300.0>
LoopAnim		= "hid"
Layer			= 10

[MenuPiece5]
Name			= "browser_right"
Model			= "Interface\Subroutines\models\browser_right.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 300.0>
LoopAnim		= "hid"
Layer			= 10

[MenuPiece6]
Name			= "buildpoints_bar"
Model			= "Interface\Subroutines\models\buildpoints_bar.ltb"
Skin0			= "Interface\Subroutines\skins\buildpoints_bar.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
//Pos 		= <0.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
Layer			= 40

[MenuPiece7]
Name			= "rating1_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_1"
Layer			= 50

[MenuPiece8]
Name			= "rating1_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_1"
Layer			= 40

[MenuPiece9]
Name			= "rating1_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <-72.0, 53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_1l"
Layer			= 40

[MenuPiece10]
Name			= "rating1_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <72.0, 53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_1r"
Layer			= 40

[MenuPiece11]
Name			= "rating2_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_2"
Layer			= 50

[MenuPiece12]
Name			= "rating2_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_2"
Layer			= 40

[MenuPiece13]
Name			= "rating2_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <-72.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_2l"
Layer			= 40

[MenuPiece14]
Name			= "rating2_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <72.0, 26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_2r"
Layer			= 40

[MenuPiece15]
Name			= "rating3_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_3"
Layer			= 50

[MenuPiece16]
Name			= "rating3_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_3"
Layer			= 40

[MenuPiece17]
Name			= "rating3_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <-72.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_3l"
Layer			= 40

[MenuPiece18]
Name			= "rating3_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <72.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_3r"
Layer			= 40

[MenuPiece19]
Name			= "rating4_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, -26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_4"
Layer			= 50

[MenuPiece20]
Name			= "rating4_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, -26.5, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_4"
Layer			= 40

[MenuPiece21]
Name			= "rating4_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <-72.0, -26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_4l"
Layer			= 40

[MenuPiece22]
Name			= "rating4_button_right"
Model			= "Interface\Subroutines\models\ratings_button_right.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <72.0, -26.5, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_4r"
Layer			= 40

[MenuPiece23]
Name			= "rating5_bar"
Model			= "Interface\Subroutines\models\ratings_bar_fill.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, -53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_5"
Layer			= 50

[MenuPiece24]
Name			= "rating5_fixedbar"
Model			= "Interface\Subroutines\models\ratings_bar.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_cell_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, -53.0, 320.0>
LoopAnim		= "fill"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbar_5"
Layer			= 40

[MenuPiece25]
Name			= "rating5_button_left"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_left_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <-72.0, -53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_5l"
Layer			= 40

[MenuPiece26]
Name			= "rating5_button_right"
Model			= "Interface\Subroutines\models\ratings_button_left.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_button_right_press.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <72.0, -53.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_ratbut_5r"
Layer			= 40

[MenuPiece27]
Name			= "lib_hi"
//Model			= "Interface\Subroutines\models\sublib_hl.ltb"
//Skin0			= "Interface\Subroutines\skins\sublib_hl.dtx"
Model			= "Interface\Subroutines\models\seg_lib.ltb"
Skin0			= "Interface\Subroutines\skins\sys_hl.dtx"
RenderStyle0		= "RS\Alpha_Additive_fullbright.ltb"
LoopAnim		= "hl"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 20

[MenuPiece28]
Name			= "sys_hi"
Model			= "Interface\Subroutines\models\seg_sys_hl.ltb"
Skin0			= "Interface\Subroutines\skins\sys_hl.dtx"
RenderStyle0		= "RS\Alpha_Additive_fullbright.ltb"
LoopAnim		= "hl"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece29]
Name			= "sys_conflict"
Model			= "Interface\Subroutines\models\seg_sys_conflict.ltb"
Skin0			= "Interface\Subroutines\skins\sys_conflict.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece30]
Name			= "sys_alpha"
Model			= "Interface\Subroutines\models\seg_sys_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\sys_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece31]
Name			= "sys_beta"
Model			= "Interface\Subroutines\models\seg_sys_beta.ltb"
Skin0			= "Interface\Subroutines\skins\sys_beta.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece32]
Name			= "sys_gold"
Model			= "Interface\Subroutines\models\seg_sys_gold.ltb"
Skin0			= "Interface\Subroutines\skins\sys_gold.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece33]
Name			= "sys_badblock"
Model			= "Interface\Subroutines\icons\models\bad_block.ltb"
Skin0			= "Interface\Subroutines\icons\skins\bad_block.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 80

[MenuPiece34]
Name			= "sys_basecode"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 			= <0.0, 0.0, 319.9>
Layer			= 50

[MenuPiece35]
Name			= "sys_basecode_left"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece36]
Name			= "sys_basecode_middle"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece37]
Name			= "sys_basecode_right"
Model			= "Interface\Subroutines\models\sys_basecode.ltb"
Skin0			= "Interface\Subroutines\skins\sys_basecode.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright_blocker.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 50

[MenuPiece38]
Name			= "optimizer"
Model			= "Props\models\optimizer.ltb"
Skin0			= "interface\subroutines\skins\optimizer_subroutinesocket.dtx"
Skin1			= "Props\skins\optimizer_2.dtx"
RenderStyle0		= "RS\menu_optimizer.ltb"
Pos 			= <0.0, 0.0, 0.0>
LoopAnim		= "liveloop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_opt"
layer			= 40

[MenuPiece39]
Name			= "proc_progress"
Model			= "Interface\Subroutines\models\proc_progress.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
//RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
RenderStyle0		= "RS\Alpha_Additive_NoCulling_readz.ltb"
LoopAnim		= "progress"
Layer			= 51

[MenuPiece40]
Name			= "proc_left_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_port_waiting.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_add_1"
Layer			= 40

[MenuPiece41]
Name			= "proc_right_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_disinfect_waiting.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_add_2"
Layer			= 40

[MenuPiece42]
Name			= "proc_bottom_base"
Model			= "Interface\Subroutines\models\proc_base.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
Skin1			= "Interface\subroutines\skins\proc_defrag_waiting.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_add_3"
Layer			= 40

[MenuPiece43]
Name			= "optring_alpha"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece44]
Name			= "optring_beta"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_beta.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece45]
Name			= "optring_gold"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_gold.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece46]
Name			= "foreign_sub"
Model			= "Interface\Subroutines\icons\models\foreign.ltb"
Skin0			= "Interface\Subroutines\icons\skins\foreign.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
layer			= 80

[MenuPiece47]
Name			= "foreign_ring"
Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
Skin0			= "Interface\Subroutines\icons\skins\opt_ring_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 75

[MenuPiece48]
Name			= "proc_working"
Model			= "Interface\Subroutines\models\proc_working.ltb"
Skin0			= "Interface\subroutines\skins\procedural_object.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
LoopAnim		= "working"
Layer			= 90

[MenuPiece49]
Name			= "sys_alpha_hl"
Model			= "Interface\Subroutines\models\seg_sys_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\sys_alpha_hl.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece50]
Name			= "sys_beta_hl"
Model			= "Interface\Subroutines\models\seg_sys_beta.ltb"
Skin0			= "Interface\Subroutines\skins\sys_beta_hl.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece51]
Name			= "sys_gold_hl"
Model			= "Interface\Subroutines\models\seg_sys_gold.ltb"
Skin0			= "Interface\Subroutines\skins\sys_gold_hl.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 0.0>
Layer			= 70

[MenuPiece52]
Name			= "ratings_bar_surge"
Model			= "Interface\Subroutines\models\ratings_bar_surge.ltb"
Skin0			= "Interface\Subroutines\skins\ratings_bar_surge.dtx"
RenderStyle0		= "RS\Alpha_Additive_wglow.ltb"
LoopAnim		= "loop"
//ParentPiece		= "sub_hub"
//ParentSocket		= "skt_ratbar_5"
Layer			= 60


[MenuPiece53]
Name			= "corruption_alpha"
Model			= "Interface\Subroutines\models\corruption_alpha.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece54]
Name			= "corruption_beta"
Model			= "Interface\Subroutines\models\corruption_beta.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece55]
Name			= "corruption_gold"
Model			= "Interface\Subroutines\models\corruption_gold.ltb"
Skin0			= "Interface\Subroutines\skins\corruption_alpha.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 60

[MenuPiece56]
Name			= "sub_hub_bg"
Model		= "Interface\Subroutines\models\subroutine_hub_bg.ltb"
Skin0			= "Interface\Subroutines\skins\subhub_bg.dtx"
RenderStyle0	= "RS\Menu_Alpha_fullbright.ltb"
Pos 		= <0.0, 0.0, 321.0>
//ParentPiece		= "sub_hub"
//ParentSocket		= "skt_hub"
IntroAnim		= "show"
LoopAnim		= "shown"
Layer			= 35

[MenuPiece57]
Name			= "buildpoints_bar_fixed"
//Model			= "Interface\Subroutines\icons\models\opt_ring.ltb"
//Skin0			= "Interface\Subroutines\icons\skins\opt_ring_gold.dtx"
//RenderStyle0		= "RS\Alpha_fullbright.ltb"
Model			= "Interface\Subroutines\models\buildpoints_bar_bg.ltb"
Skin0			= "Interface\Subroutines\skins\buildpoints_bar_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
//Pos 		= <0.0, 0.0, 320.0>
LoopAnim		= "loop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
Layer			= 35


[MenuPiece58]
Name			= "corruption_lib"
Model			= "Interface\Subroutines\icons\models\corruption_lib.ltb"
Skin0			= "Interface\Subroutines\icons\skins\corruption_lib.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Layer			= 90

[MenuPiece59]
Name			= "optimizer_bg"
Model			= "Interface\Subroutines\models\optimizer_bg.ltb"
Skin0			= "Interface\Subroutines\skins\optimizer_bg.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
Layer			= 37

[MenuPiece60]
Name			= "browser_outline_top"
Model			= "Interface\Subroutines\models\browser_top.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_hub"
Layer			= 10

[MenuPiece61]
Name			= "browser_outline_left"
Model			= "Interface\Subroutines\models\browser_left.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
Layer			= 10

[MenuPiece62]
Name			= "browser_outline_right"
Model			= "Interface\Subroutines\models\browser_right.ltb"
Skin0			= "Interface\Subroutines\skins\subroutine_hub_liboutlines.dtx"
RenderStyle0		= "RS\Menu_Alpha_fullbright.ltb"
Pos 			= <0.0, 0.0, 320.0>
LoopAnim		= "shown"
Layer			= 10

[MenuPiece63]
Name			= "dead_optimizer"
Model			= "Props\models\optimizer.ltb"
Skin0			= "Props\skins\optimizer_off1.dtx"
Skin1			= "Props\skins\optimizer_off2.dtx"
RenderStyle0		= "RS\menu_optimizer.ltb"
Pos 			= <0.0, 0.0, 0.0>
LoopAnim		= "liveloop"
ParentPiece		= "sub_hub"
ParentSocket		= "skt_opt"
layer			= 40

/************************************************************************
**
**	Interface Lights Layout
**
*/
[Light0]
Name			= "Main0"
Pos 			= <0.0,0.0,-20.0>
Color			= <255.0,255.0,255.0>
Radius			= 8000.0

[Light1]
Name			= "test"
Pos 			= <0.0,100.0,-100.0>
Color			= <255.0,255.0,255.0>
Radius			= 8000.0

[Light2]
Name			= "test"
Pos 			= <100.0,-100.0,-100.0>
Color			= <255.0,255.0,255.0>
Radius			= 8000.0

/************************************************************************
****  Interface FX Layout
**
*/
[FX0]
Name			= "MainBackground"
FXName			= "TestBackFX"
Pos 			= <0.0,0.0,300.0>
Loop			= 1

[FX1]
Name			= "Burn"
FXName			= "Test_BurningFX"
Pos 			= <0.0,-15.0,0.0>
Loop			= 0

[FX2]
Name			= "MENU_main_intro"
FXName			= "MENU_main_intro_bar"
Pos 			= <0.0,1.5,17.3>
Loop			= 0

[FX3]
Name			= "MENU_main_shortin"
FXName			= "MENU_main_loop"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX4]
Name			= "MENU_main_loop"
FXName			= "MENU_main_loop"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX5]
Name			= "SUBS_subroutine_intro"
FXName			= "SUBS_subroutine_introa"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX6]
Name			= "SUBS_subroutine_loop"
FXName			= "SUBS_subroutine_loop"
Pos 			= <0.0,0.0,320.0>
Loop			= 1

[FX7]
Name			= "MENU_single_intro"
FXName			= "MENU_single_intro"
Pos 			= <0.0,1.5,17.3>
Loop			= 0

[FX8]
Name			= "MENU_single_shortin"
FXName			= "MENU_single_intro"
Pos 			= <0.0,1.5,17.3>
Loop			= 0

[FX9]
Name			= "MENU_single_loop"
FXName			= "MENU_single_loop"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX10]
Name			= "MENU_single_main"
FXName			= "MENU_single_main"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX11]
Name			= "MENU_blankFX_700"
FXName			= "MENU_blankFX_700"
Pos 			= <0.0,0.0,20.0>
Loop			= 1

[FX12]
Name			= "MENU_multi_intro"
FXName			= "MENU_multi_intro"
Pos 			= <0.0,0.0,20.0>
Loop			= 1

[FX13]
Name			= "MENU_multi_loop"
FXName			= "MENU_multi_loop"
Pos 			= <0.0,0.0,20.0>
Loop			= 1

[FX14]
Name			= "MENU_multi_main"
FXName			= "MENU_multi_main"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX15]
Name			= "MENU_bgloop"
FXName			= "MENU_bgloop"
Pos 			= <0.0,0.0,25.0>
Loop			= 1

[FX16]
Name			= "MENU_options_intro"
FXName			= "MENU_options_intro"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX17]
Name			= "MENU_options_loop"
FXName			= "MENU_options_loop"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX18]
Name			= "MENU_options_main"
FXName			= "MENU_options_main"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX19]
Name			= "MENU_profile_intro"
FXName			= "MENU_profile_intro"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX20]
Name			= "MENU_profile_loop"
FXName			= "MENU_profile_loop"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX21]
Name			= "MENU_profile_main"
FXName			= "MENU_profile_main"
Pos 			= <0.0,1.5,17.3>
Loop			= 1

[FX22]
Name			= "SUBS_proc_port_waitintro"
FXName			= "SUBS_proc_port_waitintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX23]
Name			= "SUBS_proc_port_workintro"
FXName			= "SUBS_proc_port_workintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX24]
Name			= "SUBS_proc_disinfect_waitintro"
FXName			= "SUBS_proc_disinfect_waitintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX25]
Name			= "SUBS_proc_disinfect_workintro"
FXName			= "SUBS_proc_disinfect_workintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX26]
Name			= "SUBS_proc_defrag_waitintro"
FXName			= "SUBS_proc_defrag_waitintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX27]
Name			= "SUBS_proc_defrag_workintro"
FXName			= "SUBS_proc_defrag_workintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX28]
Name			= "SUBS_proc_shred_waitintro"
FXName			= "SUBS_proc_shred_waitintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX29]
Name			= "SUBS_proc_restore_waitintro"
FXName			= "SUBS_proc_restore_waitintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX30]
Name			= "SUBS_proc_restore_workintro"
FXName			= "SUBS_proc_restore_workintro"
Pos 			= <0.0,0.0,320.0>
Loop			= 0

[FX31]
Name            = "LOAD_Test"
FXName          = "LOAD_Test"
Pos             = <0.0,0.0,50.0>
Loop            = 1

[FX32]
Name			= "MENU_tronlogo"
FXName			= "MENU_TronLogo"
Pos 			= <18.0,25.7,26.0>
Loop			= 1

[FX33]
Name			= "SUBS_optimize"
FXName			= "SUBS_optimize"
Pos 			= <0.0, 0.0, 40.0>
Loop			= 0

[FX34]
Name			= "MENU_main_Jet_throw"
FXName			= "MENU_main_Jet_throw"
Pos 			= <2.75, 0.5, 32.0>
Loop			= 0

[FX35]
Name			= "MENU_KA_logo_dummy"
FXName			= "MENU_KA_logo_dummy"
Pos 			= <35.5,24.7,25.0>
Loop			= 0

[FX36]
Name			= "MENU_KA_logo"
FXName			= "MENU_KA_logo"
Pos 			= <35.5,24.7,25.0>
Loop			= 1


/************************************************************************
**
**	Credits Layout
**
**	These sections specify data related to the Credits display
**
**	FadeInTime (float)
**
**		Number of seconds for text to fade in
**
**	HoldTime (float)
**
**		Number of seconds for text to stay visible
**
**	FadeOutTime (float)
**
**		Number of seconds for text to fade out
**
**	DelayTime (float)
**
**		Number of seconds for text to pause before next credit
**
**	PositionUL (point)
**
**		The position to use for credits displayed in the upper left.
**		(This specifies the upper left corner and is relative to a 640x480 screen.)
**
**	PositionUR (point)
**
**		The position to use for credits displayed in the upper right.
**		(This specifies the upper right corner and is relative to a 640x480 screen.)
**
**	PositionLR (point)
**
**		The position to use for credits displayed in the lower right.
**		(This specifies the lower right corner and is relative to a 640x480 screen.)
**
**	PositionLL (point)
**
**		The position to use for credits displayed in the lower left.
**		(This specifies the lower left corner and is relative to a 640x480 screen.)
**
*/
[Credits]
FadeInTime	= 0.6
HoldTime	= 3.0
FadeOutTime = 0.6
DelayTime	= 0.35
PositionUL	= (80,90)
PositionUR	= (560,90)
PositionLR	= (560,390)
PositionLL	= (80,390)

/************************************************************************
**
**	DecisionWindow Layout
**
** The DecisionWindow definition specifies data for displaying
** gameplay choices to the player.
**
**	Pos 	(Point)
**
**		Position (relative to a 640x480 screen) of the window
**
**	Width (Int)
**
**		Specifies how wide the window should be
**
**	TextOffset	(Point)
**
**		How much the text is indented from the window edges
**
**	TextColor	(Vector)
**
**		The color to use for the text.
**		<r, g, b>
**
**	Frame	(String)
**
**		Name of the texture to use for the window frame
**
**	NumColumns
**
**		Number of columns to use for this window
**
**	RemoveItems
**
**		0 = never change available selections
**		1 = remove row after selection is made
**
**	RemoveWindow
**
**		0 = leave window open after selection
**		1 = remove window after selection
**
**/

[DecisionWindow]
Pos 					= (400,60)
Font					= 1
FontSize				= 16
Width					= 280
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "interface\menu\sprtex\frame_solid.dtx"

[DecisionWindow0]
Pos 					= (10,60)
Font					= 1
FontSize				= 16
Width					= 280
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "interface\menu\sprtex\frame_solid.dtx"
NumColumns				= 1
RemoveItems				= 0
RemoveWindow			= 1


[DecisionWindow1]
Pos 					= (10,60)
Font					= 1
FontSize				= 16
Width					= 240
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "Interface\hud\hud.dtx"
Hollow					= 0
Inscribe				= 1
UVTopLeft				= (10, 35, 25, 42)
UVTop					= (28, 35, 152, 42)
UVTopRight				= (166, 35, 164, 42)
UVLeft					= (10, 45, 25, 48)
UVCenter				= (28, 45, 152, 48)
UVRight					= (166, 45, 164, 48)
UVBottomLeft				= (10, 51, 25, 58)
UVBottom				= (28, 51, 152, 58)
UVBottomRight				= (166, 51, 164, 58)
NumColumns				= 1
RemoveItems				= 0
RemoveWindow			= 1

/* ArchiveBin */
[DecisionWindow2]
Pos 					= (10,60)
Font					= 1
FontSize				= 16
Width					= 460
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "interface\menu\sprtex\frame_solid.dtx"
NumColumns				= 5
RemoveItems				= 1
RemoveWindow			= 0

/* Commerce */
[DecisionWindow3]
Pos 					= (10,60)
Font					= 1
FontSize				= 16
Width					= 460
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "interface\menu\sprtex\frame_solid.dtx"
NumColumns				= 5
RemoveItems				= 0
RemoveWindow			= 1

/* CoreDump */
[DecisionWindow4]
Pos 					= (10,60)
Font					= 1
FontSize				= 16
Width					= 460
TextOffset				= (8,4)
TextColor				= <255.0, 255.0, 255.0>
Frame					= "interface\menu\sprtex\frame_solid.dtx"
NumColumns				= 5
RemoveItems				= 1
RemoveWindow			= 0

/************************************************************************
**
**	                   Screen Transition Declarations
**
**	A Transition will override the FX associated with a single menu screen.
**	So when a screen gains focus, it will first inquire of the
**	TransitionFXMgr if it has a special set of FX for the intro. If there
**	is one, then BaseScreen will use that one.	If not, then BaseScreen
**	will use the Intro/ShortIntro/LoopFX combo (if any) for that screen.
**
**	In a similar vein, if a Transition has a "From" field but no "To" field,
**	then this transition will always be used when leaving the "From" screen.
**	If a Transition has a "To" field but no "From field, then it will be the
**	equivilant to the IntroFX baked into that particular screen.  The rules
**	of precedence will be that Transitions will always override something
**	baked into a  screen's layout, and a Transition with both a "From" and a
**	"To" field will always have precedence over a Transitions with just one
**	of these two fields.
**
**	Notes:
**	*LoopFX will be played after the IntroFX with the corresponding number
**	has ended.	For example when IntroFX1 finishes LoopFX1 should launch if
**	indeed there actually was one.
**	*If there are any duplicate Transitions only the first one will be used.
**	*The FX being called must first be defined in the FX Layout area of this
**	file.
**
**	(*)()Transition0(*)()
**	TransitionFrom			= "ScreenSingle"
**	TransitionTo			= "ScreenMain"
**	IntroFX0				= "Menu_Main_Intro"
**	ShortIntroFX0			= "Menu_Main_Introsh"
**	LoopFX0 				= "Menu_Main_Loop"
**	IntroFX1				= "AuxiliaryFX1"
**
**/


//----------------------------	Main
[Transition0]
TransitionTo			= "ScreenMain"

IntroFX0			= "MENU_main_intro"
LoopFX0 		= "MENU_main_loop"

IntroFX1			= ""
LoopFX1 		= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= "MENU_KA_logo_dummy"
LoopFX3			= "MENU_KA_logo"
IntroFX4			= "MENU_main_Jet_throw"
LoopFX4			= ""

//----------------------------	Single Player
[Transition1]
TransitionFrom			= "ScreenMain"
TransitionTo			= "ScreenSingle"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_single_loop"

IntroFX1			= "MENU_single_intro"
ShortIntroFX1			= "MENU_single_intro"
LoopFX1 			= ""

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4 			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------
[Transition2]
TransitionFrom			= "ScreenSingle"
TransitionTo			= "ScreenMain"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "menu_main_loop"

IntroFX1			= "MENU_single_main"
ShortIntroFX1			= "MENU_single_main"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------	single -- load
[Transition3]
TransitionFrom			= "ScreenSingle"
TransitionTo			= "ScreenLoad"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  load -- single
[Transition4]
TransitionFrom			= "ScreenLoad"
TransitionTo			= "ScreenSingle"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	single -- save
[Transition5]
TransitionTo			= "ScreenSave"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_single_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition6]
TransitionFrom			= "ScreenSave"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_single_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Subroutines
[Transition7]
TransitionTo			= "ScreenSubroutines"

IntroFX0			= "SUBS_subroutine_intro"
ShortIntroFX0			= "SUBS_subroutine_intro"
LoopFX0 			= "SUBS_subroutine_loop"

IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"

//----------------------------	MultiPlayer
[Transition8]
TransitionTo			= "ScreenMulti"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_multi_loop"

IntroFX1			= "MENU_multi_intro"
ShortIntroFX1			= "MENU_multi_intro"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"

IntroFX3			= ""
LoopFX3				= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------
[Transition9]
TransitionFrom			= "ScreenMulti"
TransitionTo			= "ScreenMain"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_main_loop"

IntroFX1			= "MENU_multi_main"
ShortIntroFX1			= "MENU_multi_main"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"

IntroFX3			= ""
LoopFX3				= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------	multi -- player
[Transition10]
TransitionTo			= "ScreenPlayer"
IntroFX0			= "MENU_multisub_intro"
ShortIntroFX0			= "MENU_multisub_intro"
LoopFX0 			= "MENU_multisub_loop"

IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"

IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition11]
TransitionFrom			= "ScreenPlayer"
IntroFX0			= "MENU_multisub_multi"
ShortIntroFX0			= "MENU_multisub_multi"
LoopFX0 			= "MENU_multi_loop"

IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"

IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//---------------------------- multi -- join
[Transition12]
TransitionTo			= "ScreenJoinServerList"
IntroFX0			= "MENU_multisub_intro"
ShortIntroFX0			= "MENU_multisub_intro"
LoopFX0 			= "MENU_multisub_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition13]
TransitionFrom			= "ScreenJoinServerList"
IntroFX0			= "MENU_multisub_multi"
ShortIntroFX0			= "MENU_multisub_multi"
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- failure
[Transition14]
TransitionTo			= "ScreenFailure"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multisub_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition15]
TransitionFrom			= "ScreenFailure"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- host
[Transition16]
TransitionTo			= "ScreenHost"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition17]
TransitionFrom			= "ScreenHost"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- host levels
[Transition18]
TransitionTo			= "ScreenHostMaps"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition19]
TransitionFrom			= "ScreenHostMaps"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Options
[Transition20]
TransitionFrom			= "ScreenMain"
TransitionTo			= "ScreenOptions"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_options_loop"

IntroFX1			= "MENU_options_intro"
ShortIntroFX1			= "MENU_options_intro"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------
[Transition21]
TransitionFrom			= "ScreenOptions"
TransitionTo			= "ScreenMain"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_main_loop"

IntroFX1			= "MENU_options_main"
ShortIntroFX1			= "MENU_options_main"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------	options -- display
[Transition22]
TransitionTo			= "ScreenDisplay"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition23]
TransitionFrom			= "ScreenDisplay"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- audio
[Transition24]
TransitionTo			= "ScreenAudio"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition25]
TransitionFrom			= "ScreenAudio"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- controls
[Transition26]
TransitionTo			= "ScreenControls"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition27]
TransitionFrom			= "ScreenControls"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- configure
[Transition28]
TransitionTo			= "ScreenConfigure"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition29]
TransitionFrom			= "ScreenConfigure"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- mouse
[Transition30]
TransitionTo			= "ScreenMouse"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition31]
TransitionFrom			= "ScreenMouse"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- keyboard
[Transition32]
TransitionTo			= "ScreenKeyboard"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition33]
TransitionFrom			= "ScreenKeyboard"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- game
[Transition34]
TransitionTo			= "ScreenGame"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition35]
TransitionFrom			= "ScreenGame"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- crosshair
[Transition36]
TransitionTo			= "ScreenCrosshair"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition37]
TransitionFrom			= "ScreenCrosshair"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	options -- performance
[Transition38]
TransitionTo			= "ScreenPerformance"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition39]
TransitionFrom			= "ScreenPerformance"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_options_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Profile
[Transition40]
TransitionFrom			= "ScreenMain"
TransitionTo			= "ScreenProfile"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_profile_loop"

IntroFX1			= "MENU_profile_intro"
ShortIntroFX1			= "MENU_profile_intro"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------
[Transition41]
TransitionFrom			= "ScreenProfile"
TransitionTo			= "ScreenMain"

IntroFX0			= "MENU_blankFX_700"
ShortIntroFX0			= "MENU_blankFX_700"
LoopFX0 			= "MENU_main_loop"

IntroFX1			= "MENU_profile_main"
ShortIntroFX1			= "MENU_profile_main"

IntroFX2			= ""
ShortIntroFX2			= ""
LoopFX2 			= "MENU_bgloop"
IntroFX3			= ""
LoopFX3		= "MENU_tronlogo"
IntroFX4			= ""
LoopFX4			= "MENU_KA_logo"

//----------------------------	multi -- Host Connection
[Transition42]
TransitionTo			= "ScreenHostConnection"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition43]
TransitionFrom			= "ScreenHostConnection"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- serverinfo
[Transition44]
TransitionTo			= "ScreenServerInfo"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multisub_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition45]
TransitionFrom			= "ScreenServerInfo"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- security
[Transition46]
TransitionTo			= "ScreenSecurity"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition47]
TransitionFrom			= "ScreenSecurity"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	multi -- teamselect
[Transition48]
TransitionTo			= "TeamSelect"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------
[Transition49]
TransitionFrom			= "TeamSelect"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	single -- load
[Transition50]
TransitionTo			= "ScreenLoad"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_single_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Options
[Transition51]
TransitionTo			= "ScreenOptions"
IntroFX0					= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_options_loop"
IntroFX1					= ""
ShortIntroFX1			= ""
LoopFX1				= "MENU_bgloop"
IntroFX2					= ""
ShortIntroFX2			= ""
LoopFX2 				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Network Security
[Transition52]
TransitionTo			= "ScreenTilt"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_blankFX_700"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1			= "MENU_KA_logo"


IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"

//----------------------------	Team Select
[Transition53]
TransitionTo			= "TeamSelect"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_blankFX_700"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1			= "MENU_KA_logo"


IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"

//----------------------------	multi -- Host Game
[Transition54]
TransitionTo			= "ScreenHostGame"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------
[Transition55]
TransitionFrom			= "ScreenHostGame"
IntroFX0			= ""
ShortIntroFX0			= ""
LoopFX0 			= "MENU_multi_loop"
IntroFX1			= ""
ShortIntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2		= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  Single -- LCCircuit
[Transition56]
TransitionFrom			= "ScreenSingle"
TransitionTo			= "ScreenLightCycleCircuit"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCircuit -- Single
[Transition57]
TransitionFrom			= "ScreenLightCycleCircuit"
TransitionTo			= "ScreenSingle"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCCircuit -- LCPlayerConfig
[Transition58]
TransitionFrom			= "ScreenLightCycleCircuit"
TransitionTo			= "ScreenLightCyclePlayerConfig"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCPlayerConfig -- LCCircuit
[Transition59]
TransitionFrom			= "ScreenLightCyclePlayerConfig"
TransitionTo			= "ScreenLightCycleCircuit"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCCircuit -- LCCustomGame
[Transition60]
TransitionFrom			= "ScreenLightCycleCircuit"
TransitionTo			= "ScreenLightCycleCustomGame"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCustomGame -- LCCircuit
[Transition61]
TransitionFrom			= "ScreenLightCycleCustomGame"
TransitionTo			= "ScreenLightCycleCircuit"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCCircuit -- LCCustomMap
[Transition62]
TransitionFrom			= "ScreenLightCycleCircuit"
TransitionTo			= "ScreenLightCycleCustomMap"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCustomMap -- LCCircuit
[Transition63]
TransitionFrom			= "ScreenLightCycleCustomMap"
TransitionTo			= "ScreenLightCycleCircuit"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCPlayerConfig -- LCCustomGame
[Transition64]
TransitionFrom			= "ScreenLightCyclePlayerConfig"
TransitionTo			= "ScreenLightCycleCustomGame"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCustomGame -- LCPlayerConfig
[Transition65]
TransitionFrom			= "ScreenLightCycleCustomGame"
TransitionTo			= "ScreenLightCyclePlayerConfig"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCPlayerConfig -- LCCustomMap
[Transition66]
TransitionFrom			= "ScreenLightCyclePlayerConfig"
TransitionTo			= "ScreenLightCycleCustomMap"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCustomMap -- LCPlayerConfig
[Transition67]
TransitionFrom			= "ScreenLightCycleCustomMap"
TransitionTo			= "ScreenLightCyclePlayerConfig"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  LCCustomGame -- LCCustomMap
[Transition68]
TransitionFrom			= "ScreenLightCycleCustomGame"
TransitionTo			= "ScreenLightCycleCustomMap"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"
//----------------------------  LCCustomMap -- LCCustomGame
[Transition69]
TransitionFrom			= "ScreenLightCycleCustomMap"
TransitionTo			= "ScreenLightCycleCustomGame"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------	Loading
[Transition70]
TransitionTo			= "LoadScreenDefault"

IntroFX0			= "MENU_main_intro"
LoopFX0 			= "MENU_main_loop"

IntroFX1			= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------  Single -- LCCircuit
[Transition71]
TransitionFrom			= ""
TransitionTo			= "ScreenLightCycleCircuit"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

//----------------------------
[Transition72]
TransitionTo		= "ScreenLightCycleVictory"
IntroFX0			= ""
ShortIntroFX0		= ""
LoopFX0 			= "MENU_multisub_loop"
IntroFX1			= ""
ShortIntroFX1		= ""
LoopFX1 			= "MENU_bgloop"
IntroFX2			= ""
LoopFX2				= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

[Transition73]
TransitionFrom			= ""
TransitionTo			= "ScreenLightCycleCustomGame"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

[Transition74]
TransitionFrom			= ""
TransitionTo			= "ScreenLightCycleCustomMap"
IntroFX0				= ""
ShortIntroFX0			= ""
LoopFX0 				= "MENU_single_loop"
IntroFX1				= ""
ShortIntroFX1			= ""
LoopFX1 				= "MENU_bgloop"
IntroFX2				= ""
LoopFX2					= "MENU_tronlogo"
IntroFX3			= ""
LoopFX3			= "MENU_KA_logo"

/************************************************************************
**
**                                Glossary
**
**  Because this file is so incredibly long and complex, it's completely
**  understandable to struggle remembering all the unique terms being
**  thrown around. For this reason, this last portion of the file will
**  be a nice little home for a glossary, just like a real book!
**
**  These definitions aren't the most concise, but should at least give
**  a rough understanding that can be used to put together the pieces
**  faster.
**
**  Point (X, Y)
**      - A point on the screen, in pixels.
**  Size (Width, Height)
**      - When just specifying a width or a height doesn't work by
**      itself. Defines... a rectangular area? But not a rectangle.
**      - TODO figure out which other "Point" values actually work this
**      way.
**  Rectangle (Left, Top, Right, Bottom)
**      - Defines a rectangular area.
**  Vector <r, g, b>
**      - An RGB color value. Must be specified to a single decimal
**      point, e.g. <255.0, 0.0, 128.0>.
**  Integer (#)
**      - A whole number value. Ignores decimals.
**  Float (#)
**      - A number value. Does not ignore decimals.
**  String ("text")
**      - A string of text.
**  Path ("text")
**      - A string that explicitly defines a directory path to a
**      specific file.
**
**  Position (or Pos)
**      - A Point that is able to scale at higher resolutions. The value
**      is based on a 640x480 resolution and is scaled from there.
**  Offset
**      - A Point that is unable to scale at higher resolutions (an
**      absolute value).
**  Light
**      - A Light is a defined light object in the "Interface Lights
**      Layout" section of this document. The first entry, Light0, is
**      pretty much called by every menu that needs a light. Multiple
**      Lights can be called at the same time when sequentially
**      numbered.
**  Piece
**      - A Piece, similar to a Light, is a defined object in the "Menu
**      Piece Layout" section of this document.
**  FX
**      - An FX is a defined FX object in the "Interface FX Layout"
**      section of this document. When called by a screen layout, it
**      plays the FX immediately as the screen is loaded. Multiple FX
**      can be called at the same time when sequentially numbered.
**  IntroFX, ShortIntroFX, and LoopFX
**      - IntroFX and ShortIntroFX are played immediately once a screen
**      is loaded, and LoopFX are played on an infinite loop afterward.
**  Scale
**      - A Scale is an FX that is referenced from FX.TXT, as opposed to
**      one pulled from FXEd. Multiple Scales can be called at the same
**      time when sequentially numbered.
**  "Font Size"
**      - Because of the funny way fonts are handled in this game, when
**      a value comes up talking about a "font size" for something, it's
**      only referring to the pixel height of the text and nothing else.
**      It'll then just do whatever it does to make sure the text comes
**      out looking as expected.
*/